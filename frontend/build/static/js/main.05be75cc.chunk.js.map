{"version":3,"sources":["constants/userConstants.js","constants/productConstants.js","constants/cartConstants.js","constants/orderConstants.js","store.js","reducers/userReducers.js","reducers/productReducers.js","reducers/cartReducers.js","reducers/orderReducers.js","components/SearchBox.js","actions/userActions.js","components/Header.js","components/Footer.js","components/Rating.js","components/Product.js","components/Loader.js","components/Message.js","components/Paginate.js","actions/productActions.js","screens/HomeScreen.js","screens/ProductScreen.js","actions/cartActions.js","screens/CartScreen.js","components/FormContainer.js","screens/LoginScreen.js","screens/RegisterScreen.js","actions/orderActions.js","screens/ProfileScreen.js","components/CheckoutSteps.js","screens/ShippingScreen.js","screens/PaymentScreen.js","screens/PlaceOrderScreen.js","screens/OrderScreen.js","screens/UserListScreen.js","screens/UserEditScreen.js","screens/ProductListScreen.js","screens/ProductEditScreen.js","screens/OrderListScreen.js","App.js","reportWebVitals.js","index.js"],"names":["USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_FAIL","USER_DETAILS_RESET","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_SUCCESS","USER_UPDATE_PROFILE_FAIL","USER_UPDATE_PROFILE_RESET","USER_LIST_REQUEST","USER_LIST_SUCCESS","USER_LIST_FAIL","USER_LIST_RESET","USER_DELETE_REQUEST","USER_DELETE_SUCCESS","USER_DELETE_FAIL","USER_UPDATE_REQUEST","USER_UPDATE_SUCCESS","USER_UPDATE_FAIL","USER_UPDATE_RESET","PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","PRODUCT_LIST_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_DETAILS_FAIL","PRODUCT_DELETE_REQUEST","PRODUCT_DELETE_SUCCESS","PRODUCT_DELETE_FAIL","PRODUCT_CREATE_REQUEST","PRODUCT_CREATE_SUCCESS","PRODUCT_CREATE_FAIL","PRODUCT_CREATE_RESET","PRODUCT_UPDATE_REQUEST","PRODUCT_UPDATE_SUCCESS","PRODUCT_UPDATE_FAIL","PRODUCT_UPDATE_RESET","PRODUCT_CREATE_REVIEW_REQUEST","PRODUCT_CREATE_REVIEW_SUCCESS","PRODUCT_CREATE_REVIEW_FAIL","PRODUCT_CREATE_REVIEW_RESET","PRODUCT_TOP_REQUEST","PRODUCT_TOP_SUCCESS","PRODUCT_TOP_FAIL","CART_ADD_ITEM","CART_REMOVE_ITEM","CART_SAVE_SHIPPING_ADDRESS","CART_SAVE_PAYMENT_METHOD","CART_CLEAR_ITEMS","ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","ORDER_CREATE_FAIL","ORDER_CREATE_RESET","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_DETAILS_FAIL","ORDER_PAY_REQUEST","ORDER_PAY_SUCCESS","ORDER_PAY_FAIL","ORDER_PAY_RESET","ORDER_LIST_MY_REQUEST","ORDER_LIST_MY_SUCCESS","ORDER_LIST_MY_FAIL","ORDER_LIST_MY_RESET","ORDER_LIST_REQUEST","ORDER_LIST_SUCCESS","ORDER_LIST_FAIL","ORDER_DELIVER_REQUEST","ORDER_DELIVER_SUCCESS","ORDER_DELIVER_FAIL","ORDER_DELIVER_RESET","reducer","combineReducers","userLogin","state","action","type","loading","userInfo","payload","error","userRegister","userDetails","user","userUpdateProfile","success","userList","users","userDelete","userUpdate","productList","products","page","pages","productDetails","product","reviews","productDelete","productCreate","productUpdate","productReviewCreate","productTopRated","cart","cartItems","shippingAddress","item","existItem","find","x","map","filter","paymentMethod","orderCreate","order","orderDetails","orderItems","orderPay","orderListMy","orders","orderList","orderDeliver","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","initialState","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","SearchBox","useState","keyword","setKeyword","history","useHistory","Form","onSubmit","e","preventDefault","push","location","pathname","className","Control","name","placeholder","onChange","target","value","Button","variant","getUserDetails","id","dispatch","getState","a","config","headers","Authorization","token","axios","get","data","response","detail","message","Header","useSelector","useDispatch","Navbar","bg","expand","collapseOnSelect","Container","to","Brand","Toggle","aria-controls","Collapse","Nav","NavDropdown","title","Item","onClick","removeItem","Link","isAdmin","Footer","Row","Col","Rating","text","color","style","Product","Card","Img","src","image","Body","Title","as","Text","rating","numReviews","price","Loader","Spinner","animation","role","margin","display","Message","children","Alert","Paginate","split","Pagination","Array","keys","active","listProducts","listProductDetails","HomeScreen","search","useEffect","sm","md","lg","xl","ProductScreen","match","qty","setQty","setRating","comment","setComment","loadingProductReview","errorProductReview","successProductReview","params","Image","alt","fluid","ListGroup","description","countInStock","xs","disabled","length","review","createdAt","substring","productId","post","Group","controlId","Label","row","addToCart","setItem","stringify","CartScreen","Number","removeFromCartHandler","removeFromCart","rounded","reduce","acc","toFixed","FormContainer","LoginScreen","email","setEmail","password","setPassword","redirect","login","RegisterScreen","setName","confirmPassword","setConfirmPassword","setMessage","register","required","payOrder","paymentResult","put","ProfileScreen","loadingOrders","errorOrders","updateUserProfile","Table","striped","responsive","totalPrice","isPaid","paidAt","isDelivered","deliveredAt","CheckoutSteps","step1","step2","step3","step4","ShippingScreen","address","setAddress","city","setCity","postalCode","setPostalCode","country","setCountry","PhoneNumber","setPhoneNumber","PaymentScreen","setPaymentMethod","Check","label","PlaceOrderScreen","itemsPrice","shippingPrice","taxPrice","index","createOrder","OrderScreen","orderId","sdkReady","setSdkReady","loadingPay","successPay","loadingDeliver","successDeliver","window","paypal","script","document","createElement","async","onload","body","appendChild","addPayPalScript","Id","href","amount","onSuccess","deliverOrder","UserListScreen","successDelete","deleteHandler","confirm","delete","deleteUser","bordered","hover","UserEditScreen","userId","setIsAdmin","errorUpdate","loadingUpdate","successUpdate","updateUser","checked","ProductListScreen","loadingDelete","errorDelete","loadingCreate","errorCreate","successCreate","createdProduct","deleteProduct","category","brand","ProductEditScreen","setPrice","setImage","setBrand","setCategory","setCountInStock","setDescription","uploading","setUploading","uploadFileHandler","file","files","formData","FormData","append","updateProduct","File","custom","OrderListScreen","App","path","component","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","getElementById"],"mappings":"gLAAaA,EAAqB,qBACrBC,EAAqB,qBACrBC,EAAkB,kBAElBC,EAAc,cAEdC,EAAwB,wBACxBC,EAAwB,wBACxBC,EAAqB,qBAErBC,EAAuB,uBACvBC,EAAuB,uBACvBC,EAAoB,oBACpBC,EAAqB,qBAErBC,EAA8B,8BAC9BC,EAA8B,8BAC9BC,EAA2B,2BAC3BC,EAA4B,4BAE5BC,EAAoB,oBACpBC,EAAoB,oBACpBC,EAAiB,iBACjBC,EAAkB,kBAGlBC,EAAsB,sBACtBC,EAAsB,sBACtBC,EAAmB,mBAGnBC,EAAsB,sBACtBC,EAAsB,sBACtBC,EAAmB,mBACnBC,EAAoB,oBClCpBC,EAAuB,uBACvBC,EAAuB,uBACvBC,EAAoB,oBAGpBC,EAA0B,0BAC1BC,EAA0B,0BAC1BC,EAAuB,uBAGvBC,EAAyB,yBACzBC,EAAyB,yBACzBC,EAAsB,sBAEtBC,EAAyB,yBACzBC,EAAyB,yBACzBC,EAAsB,sBACtBC,EAAuB,uBAGvBC,EAAyB,yBACzBC,EAAyB,yBACzBC,EAAsB,sBACtBC,EAAuB,uBAGvBC,GAAgC,gCAChCC,GAAgC,gCAChCC,GAA6B,6BAC7BC,GAA8B,8BAE9BC,GAAsB,sBACtBC,GAAsB,sBACtBC,GAAmB,mB,SCjCnBC,GAAgB,gBAChBC,GAAmB,mBAEnBC,GAA6B,6BAE7BC,GAA2B,2BAE3BC,GAAmB,mBCPnBC,GAAuB,uBACvBC,GAAuB,uBACvBC,GAAoB,oBAEpBC,GAAqB,qBAErBC,GAAwB,wBACxBC,GAAwB,wBACxBC,GAAqB,qBAErBC,GAAoB,oBACpBC,GAAoB,oBACpBC,GAAiB,iBACjBC,GAAkB,kBAElBC,GAAwB,wBACxBC,GAAwB,wBACxBC,GAAqB,qBACrBC,GAAsB,sBAGtBC,GAAqB,qBACrBC,GAAqB,qBACrBC,GAAkB,kBAGlBC,GAAwB,wBACxBC,GAAwB,wBACxBC,GAAqB,qBACrBC,GAAsB,sBCQ7BC,GAAUC,0BAAgB,CAE5BC,UCE4B,WAAyB,IAAxBC,EAAuB,uDAAf,GAAIC,EAAW,uCACpD,OAAQA,EAAOC,MACX,KAAKlF,EACD,MAAO,CAAEmF,SAAS,GAEtB,KAAKlF,EACD,MAAO,CAAEkF,SAAS,EAAOC,SAAUH,EAAOI,SAE9C,KAAKnF,EACD,MAAO,CAAEiF,SAAS,EAAOG,MAAOL,EAAOI,SAE3C,KAAKlF,EACD,MAAO,GAEX,QACI,OAAO6E,IDhBfO,aCqB+B,WAAyB,IAAxBP,EAAuB,uDAAf,GAAIC,EAAW,uCACvD,OAAQA,EAAOC,MACX,KAAK9E,EACD,MAAO,CAAE+E,SAAS,GAEtB,KAAK9E,EACD,MAAO,CAAE8E,SAAS,EAAOC,SAAUH,EAAOI,SAE9C,KAAK/E,EACD,MAAO,CAAE6E,SAAS,EAAOG,MAAOL,EAAOI,SAE3C,KAAKlF,EACD,MAAO,GAEX,QACI,OAAO6E,IDnCfQ,YCyC8B,WAAmC,IAAlCR,EAAiC,uDAAzB,CAAES,KAAM,IAAMR,EAAW,uCAChE,OAAQA,EAAOC,MACX,KAAK3E,EACD,OAAO,2BAAKyE,GAAZ,IAAmBG,SAAS,IAEhC,KAAK3E,EACD,MAAO,CAAE2E,SAAS,EAAOM,KAAMR,EAAOI,SAE1C,KAAK5E,EACD,MAAO,CAAE0E,SAAS,EAAOG,MAAOL,EAAOI,SAE3C,KAAK3E,EACD,MAAO,CAAE+E,KAAM,IAGnB,QACI,OAAOT,IDxDfU,kBC6DoC,WAAyB,IAAxBV,EAAuB,uDAAf,GAAIC,EAAW,uCAC5D,OAAQA,EAAOC,MACX,KAAKvE,EACD,MAAO,CAAEwE,SAAS,GAEtB,KAAKvE,EACD,MAAO,CAAEuE,SAAS,EAAOQ,SAAS,EAAMP,SAAUH,EAAOI,SAE7D,KAAKxE,EACD,MAAO,CAAEsE,SAAS,EAAOG,MAAOL,EAAOI,SAE3C,KAAKvE,EACD,MAAO,GAEX,QACI,OAAOkE,ID3EfY,SCgF2B,WAAoC,IAAnCZ,EAAkC,uDAA1B,CAAEa,MAAO,IAAMZ,EAAW,uCAC9D,OAAQA,EAAOC,MACX,KAAKnE,EACD,MAAO,CAAEoE,SAAS,GAEtB,KAAKnE,EACD,MAAO,CAAEmE,SAAS,EAAOU,MAAOZ,EAAOI,SAE3C,KAAKpE,EACD,MAAO,CAAEkE,SAAS,EAAOG,MAAOL,EAAOI,SAE3C,KAAKnE,EACD,MAAO,CAAE2E,MAAO,IAEpB,QACI,OAAOb,ID9Ffc,WCmG6B,WAAyB,IAAxBd,EAAuB,uDAAf,GAAIC,EAAW,uCACrD,OAAQA,EAAOC,MACX,KAAK/D,EACD,MAAO,CAAEgE,SAAS,GAEtB,KAAK/D,EACD,MAAO,CAAE+D,SAAS,EAAOQ,SAAS,GAEtC,KAAKtE,EACD,MAAO,CAAE8D,SAAS,EAAOG,MAAOL,EAAOI,SAE3C,QACI,OAAOL,ID9Gfe,WCmH6B,WAAmC,IAAlCf,EAAiC,uDAAzB,CAAES,KAAM,IAAMR,EAAW,uCAC/D,OAAQA,EAAOC,MACX,KAAK5D,EACD,MAAO,CAAE6D,SAAS,GAEtB,KAAK5D,EACD,MAAO,CAAE4D,SAAS,EAAOQ,SAAS,GAEtC,KAAKnE,EACD,MAAO,CAAE2D,SAAS,EAAOG,MAAOL,EAAOI,SAE3C,KAAK5D,EACD,MAAO,CAAEgE,KAAM,IAEnB,QACI,OAAOT,IDhIfgB,YEb8B,WAAuC,IAAtChB,EAAqC,uDAA7B,CAAEiB,SAAU,IAAMhB,EAAW,uCACpE,OAAQA,EAAOC,MACX,KAAKxD,EACD,MAAO,CAAEyD,SAAS,EAAMc,SAAU,IAEtC,KAAKtE,EACD,MAAO,CACHwD,SAAS,EACTc,SAAUhB,EAAOI,QAAQY,SACzBC,KAAMjB,EAAOI,QAAQa,KACrBC,MAAOlB,EAAOI,QAAQc,OAG9B,KAAKvE,EACD,MAAO,CAAEuD,SAAS,EAAOG,MAAOL,EAAOI,SAE3C,QACI,OAAOL,IFHfoB,eESiC,WAAmD,IAAlDpB,EAAiD,uDAAzC,CAAEqB,QAAS,CAAEC,QAAS,KAAQrB,EAAW,uCACnF,OAAQA,EAAOC,MACX,KAAKrD,EACD,OAAO,aAAEsD,SAAS,GAASH,GAE/B,KAAKlD,EACD,MAAO,CAAEqD,SAAS,EAAOkB,QAASpB,EAAOI,SAE7C,KAAKtD,EACD,MAAO,CAAEoD,SAAS,EAAOG,MAAOL,EAAOI,SAE3C,QACI,OAAOL,IFpBfuB,cEyBgC,WAAyB,IAAxBvB,EAAuB,uDAAf,GAAIC,EAAW,uCACxD,OAAQA,EAAOC,MACX,KAAKlD,EACD,MAAO,CAAEmD,SAAS,GAEtB,KAAKlD,EACD,MAAO,CAAEkD,SAAS,EAAOQ,SAAS,GAEtC,KAAKzD,EACD,MAAO,CAAEiD,SAAS,EAAOG,MAAOL,EAAOI,SAE3C,QACI,OAAOL,IFpCfwB,cE0CgC,WAAyB,IAAxBxB,EAAuB,uDAAf,GAAIC,EAAW,uCACxD,OAAQA,EAAOC,MACX,KAAK/C,EACD,MAAO,CAAEgD,SAAS,GAEtB,KAAK/C,EACD,MAAO,CAAE+C,SAAS,EAAOQ,SAAS,EAAMU,QAASpB,EAAOI,SAE5D,KAAKhD,EACD,MAAO,CAAE8C,SAAS,EAAOG,MAAOL,EAAOI,SAE3C,KAAK/C,EACD,MAAO,GAEX,QACI,OAAO0C,IFxDfyB,cE6DgC,WAAsC,IAArCzB,EAAoC,uDAA5B,CAAEqB,QAAS,IAAMpB,EAAW,uCACrE,OAAQA,EAAOC,MACX,KAAK3C,EACD,MAAO,CAAE4C,SAAS,GAEtB,KAAK3C,EACD,MAAO,CAAE2C,SAAS,EAAOQ,SAAS,EAAMU,QAASpB,EAAOI,SAE5D,KAAK5C,EACD,MAAO,CAAE0C,SAAS,EAAOG,MAAOL,EAAOI,SAE3C,KAAK3C,EACD,MAAO,CAAE2D,QAAS,IAEtB,QACI,OAAOrB,IF3Ef0B,oBEiFsC,WAAyB,IAAxB1B,EAAuB,uDAAf,GAAIC,EAAW,uCAC9D,OAAQA,EAAOC,MACX,KAAKvC,GACD,MAAO,CAAEwC,SAAS,GAEtB,KAAKvC,GACD,MAAO,CAAEuC,SAAS,EAAOQ,SAAS,GAEtC,KAAK9C,GACD,MAAO,CAAEsC,SAAS,EAAOG,MAAOL,EAAOI,SAE3C,KAAKvC,GACD,MAAO,GAEX,QACI,OAAOkC,IF/Ff2B,gBEoGkC,WAAuC,IAAtC3B,EAAqC,uDAA7B,CAAEiB,SAAU,IAAMhB,EAAW,uCACxE,OAAQA,EAAOC,MACX,KAAKnC,GACD,MAAO,CAAEoC,SAAS,EAAMc,SAAU,IAEtC,KAAKjD,GACD,MAAO,CAAEmC,SAAS,EAAOc,SAAUhB,EAAOI,SAE9C,KAAKpC,GACD,MAAO,CAAEkC,SAAS,EAAOG,MAAOL,EAAOI,SAE3C,QACI,OAAOL,IF9Gf4B,KG3CuB,WAA6D,IAA5D5B,EAA2D,uDAAnD,CAAE6B,UAAW,GAAIC,gBAAiB,IAAM7B,EAAW,uCACnF,OAAQA,EAAOC,MACX,KAAKhC,GACD,IAAM6D,EAAO9B,EAAOI,QACd2B,EAAYhC,EAAM6B,UAAUI,MAAK,SAAAC,GAAC,OAAIA,EAAEb,UAAYU,EAAKV,WAE/D,OAAIW,EACO,2BACAhC,GADP,IAEI6B,UAAW7B,EAAM6B,UAAUM,KAAI,SAAAD,GAAC,OAC5BA,EAAEb,UAAYW,EAAUX,QAAUU,EAAOG,OAI1C,2BACAlC,GADP,IAEI6B,UAAU,GAAD,oBAAM7B,EAAM6B,WAAZ,CAAuBE,MAI5C,KAAK5D,GACD,OAAO,2BACA6B,GADP,IAEI6B,UAAW7B,EAAM6B,UAAUO,QAAO,SAAAF,GAAC,OAAIA,EAAEb,UAAYpB,EAAOI,aAGpE,KAAKjC,GACD,OAAO,2BACA4B,GADP,IAEI8B,gBAAiB7B,EAAOI,UAGhC,KAAKhC,GACD,OAAO,2BACA2B,GADP,IAEIqC,cAAepC,EAAOI,UAG9B,KAAK/B,GACD,OAAO,2BACA0B,GADP,IAEI6B,UAAW,KAGnB,QACI,OAAO7B,IHAfsC,YIzB8B,WAAyB,IAAxBtC,EAAuB,uDAAf,GAAIC,EAAW,uCACtD,OAAQA,EAAOC,MACX,KAAK3B,GACD,MAAO,CACH4B,SAAS,GAGjB,KAAK3B,GACD,MAAO,CACH2B,SAAS,EACTQ,SAAS,EACT4B,MAAOtC,EAAOI,SAGtB,KAAK5B,GACD,MAAO,CACH0B,SAAS,EACTG,MAAOL,EAAOI,SAGtB,KAAK3B,GACD,MAAO,GAGX,QACI,OAAOsB,IJCfwC,aII+B,WAA6E,IAA5ExC,EAA2E,uDAAnE,CAAEG,SAAS,EAAMsC,WAAY,GAAIX,gBAAiB,IAAM7B,EAAW,uCAC3G,OAAQA,EAAOC,MACX,KAAKvB,GACD,OAAO,2BACAqB,GADP,IAEIG,SAAS,IAGjB,KAAKvB,GACD,MAAO,CACHuB,SAAS,EACToC,MAAOtC,EAAOI,SAGtB,KAAKxB,GACD,MAAO,CACHsB,SAAS,EACTG,MAAOL,EAAOI,SAItB,QACI,OAAOL,IJzBf0C,SI8B2B,WAAyB,IAAxB1C,EAAuB,uDAAf,GAAIC,EAAW,uCACnD,OAAQA,EAAOC,MACX,KAAKpB,GACD,MAAO,CACHqB,SAAS,GAGjB,KAAKpB,GACD,MAAO,CACHoB,SAAS,EACTQ,SAAS,GAGjB,KAAK3B,GACD,MAAO,CACHmB,SAAS,EACTG,MAAOL,EAAOI,SAGtB,KAAKpB,GACD,MAAO,GAEX,QACI,OAAOe,IJpDf2C,YIqF8B,WAAqC,IAApC3C,EAAmC,uDAA3B,CAAE4C,OAAQ,IAAM3C,EAAW,uCAClE,OAAQA,EAAOC,MACX,KAAKhB,GACD,MAAO,CACHiB,SAAS,GAGjB,KAAKhB,GACD,MAAO,CACHgB,SAAS,EACTyC,OAAQ3C,EAAOI,SAGvB,KAAKjB,GACD,MAAO,CACHe,SAAS,EACTG,MAAOL,EAAOI,SAGtB,KAAKhB,GACD,MAAO,CACHuD,OAAQ,IAGhB,QACI,OAAO5C,IJ7Gf6C,UImH4B,WAAqC,IAApC7C,EAAmC,uDAA3B,CAAE4C,OAAQ,IAAM3C,EAAW,uCAChE,OAAQA,EAAOC,MACX,KAAKZ,GACD,MAAO,CACHa,SAAS,GAGjB,KAAKZ,GACD,MAAO,CACHY,SAAS,EACTyC,OAAQ3C,EAAOI,SAGvB,KAAKb,GACD,MAAO,CACHW,SAAS,EACTG,MAAOL,EAAOI,SAEtB,QACI,OAAOL,IJrIf8C,aIuD+B,WAAyB,IAAxB9C,EAAuB,uDAAf,GAAIC,EAAW,uCACvD,OAAQA,EAAOC,MACX,KAAKT,GACD,MAAO,CACHU,SAAS,GAGjB,KAAKT,GACD,MAAO,CACHS,SAAS,EACTQ,SAAS,GAGjB,KAAKhB,GACD,MAAO,CACHQ,SAAS,EACTG,MAAOL,EAAOI,SAGtB,KAAKT,GACD,MAAO,GAEX,QACI,OAAOI,MJzEb+C,GAAuBC,aAAaC,QAAQ,aAC9CC,KAAKC,MAAMH,aAAaC,QAAQ,cAAgB,GAG9CG,GAAsBJ,aAAaC,QAAQ,YAC7CC,KAAKC,MAAMH,aAAaC,QAAQ,aAAe,KAO7CI,GAAe,CACjBzB,KAAM,CACFC,UAAWkB,GACXjB,gBAP2BkB,aAAaC,QAAQ,mBACpDC,KAAKC,MAAMH,aAAaC,QAAQ,oBAAsB,IAQtDlD,UAAW,CAAEK,SAAUgD,KAIrBE,GAAa,CAACC,KAKLC,GAHDC,sBAAY5D,GAASwD,GAC/BK,8BAAoBC,kBAAe,WAAf,EAAmBL,M,oHKrD5BM,OAlCf,WACI,MAA8BC,mBAAS,IAAvC,oBAAOC,EAAP,KAAgBC,EAAhB,KAEIC,EAAUC,eAUd,OACI,gBAACC,GAAA,EAAD,CAAMC,SATY,SAACC,GACnBA,EAAEC,iBACEP,EACAE,EAAQM,KAAR,oBAA0BR,EAA1B,YAEAE,EAAQM,KAAKN,EAAQM,KAAKN,EAAQO,SAASC,YAIhBC,UAAU,YAAzC,UACI,eAACP,GAAA,EAAKQ,QAAN,CACIxE,KAAK,OACLyE,KAAK,IACLC,YAAY,SACZC,SAAU,SAACT,GAAD,OAAOL,EAAWK,EAAEU,OAAOC,QACrCN,UAAU,yBAGd,eAACO,GAAA,EAAD,CACI9E,KAAK,SACL+E,QAAQ,oBACRR,UAAU,eAHd,wB,gDCmGCS,GAAiB,SAACC,GAAD,gDAAQ,WAAOC,EAAUC,GAAjB,wBAAAC,EAAA,sEAE9BF,EAAS,CACLlF,KAAM3E,IAHoB,EAQ1B8J,IADajF,EAPa,EAO1BL,UAAaK,SAGXmF,EAAS,CACXC,QAAS,CACL,eAAgB,mBAChBC,cAAc,UAAD,OAAYrF,EAASsF,SAbZ,SAiBPC,KAAMC,IAAN,oBACNT,EADM,KAEnBI,GAnB0B,gBAiBtBM,EAjBsB,EAiBtBA,KAKRT,EAAS,CACLlF,KAAM1E,EACN6E,QAASwF,IAxBiB,kDA6B9BT,EAAS,CACLlF,KAAMzE,EACN4E,QAAS,KAAMyF,UAAY,KAAMA,SAASD,KAAKE,OACzC,KAAMD,SAASD,KAAKE,OACpB,KAAMC,UAjCc,0DAAR,yDC7CfC,OA1Ef,WAEI,IACQ7F,EADU8F,aAAY,SAAAlG,GAAK,OAAIA,EAAMD,aACrCK,SAEFgF,EAAWe,cAKjB,OACI,kCACI,eAACC,GAAA,EAAD,CAAQC,GAAG,OAAOpB,QAAQ,OAAOqB,OAAO,KAAKC,kBAAgB,EAA7D,SACI,gBAACC,GAAA,EAAD,WACI,eAAC,iBAAD,CAAeC,GAAG,IAAlB,SACI,eAACL,GAAA,EAAOM,MAAR,0BAGJ,eAACN,GAAA,EAAOO,OAAR,CAAeC,gBAAc,qBAC7B,gBAACR,GAAA,EAAOS,SAAR,CAAiB1B,GAAG,mBAApB,UAEI,gBAAC2B,GAAA,EAAD,CAAKrC,UAAU,UAAf,UAGCrE,EACO,gBAAC2G,GAAA,EAAD,CAAaC,MAAO5G,EAASuE,KAAMQ,GAAG,OAAtC,UACI,eAAC,iBAAD,CAAesB,GAAG,WAAlB,SACI,eAACM,GAAA,EAAYE,KAAb,wBAGJ,eAACF,GAAA,EAAYE,KAAb,CAAkBC,QAvB5B,WAClB9B,GD6DoB,SAACA,GACzBpC,aAAamE,WAAW,YACxB/B,EAAS,CAAElF,KAAM/E,IACjBiK,EAAS,CAAElF,KAAMxE,IACjB0J,EAAS,CAAElF,KAAMb,KACjB+F,EAAS,CAAElF,KAAMhE,QC5Ce,uBAIA,eAAC,iBAAD,CAAeuK,GAAG,SAAlB,SACI,gBAACK,GAAA,EAAIM,KAAL,WAAU,oBAAG3C,UAAU,gBAAvB,aAIhB,eAAC,iBAAD,CAAegC,GAAG,QAAlB,SACQ,gBAACK,GAAA,EAAIM,KAAL,WAAW,oBAAG3C,UAAU,yBAAxB,YAKPrE,GAAYA,EAASiH,SACd,gBAACP,GAAA,EAAD,WACI,eAAC,iBAAD,CAAeL,GAAG,kBAAlB,SACI,eAACK,GAAA,EAAIM,KAAL,sBAGJ,eAAC,iBAAD,CAAeX,GAAG,qBAAlB,SACI,eAACK,GAAA,EAAIM,KAAL,yBAGJ,eAAC,iBAAD,CAAeX,GAAG,mBAAlB,SACI,eAACK,GAAA,EAAIM,KAAL,6BAUhB,eAAC,GAAD,e,mBC1DTE,OAZf,WACI,OACI,kCACI,eAACd,GAAA,EAAD,UACI,eAACe,GAAA,EAAD,UACI,eAACC,GAAA,EAAD,CAAK/C,UAAU,mBAAf,6C,UC8DLgD,OApEf,YAAyC,IAAvB1C,EAAsB,EAAtBA,MAAO2C,EAAe,EAAfA,KAAMC,EAAS,EAATA,MAC3B,OACI,uBAAKlD,UAAU,SAAf,UACI,gCACI,oBAAGmD,MAAO,CAAED,SAASlD,UACjBM,GAAS,EACH,cACAA,GAAS,GACL,uBACA,kBAMlB,gCACI,oBAAG6C,MAAO,CAAED,SAASlD,UACjBM,GAAS,EACH,cACAA,GAAS,IACL,uBACA,kBAMlB,gCACI,oBAAG6C,MAAO,CAAED,SAASlD,UACjBM,GAAS,EACH,cACAA,GAAS,IACL,uBACA,kBAMlB,gCACI,oBAAG6C,MAAO,CAAED,SAASlD,UACjBM,GAAS,EACH,cACAA,GAAS,IACL,uBACA,kBAMlB,gCACI,oBAAG6C,MAAO,CAAED,SAASlD,UACjBM,GAAS,EACH,cACAA,GAAS,IACL,uBACA,kBAMlB,gCAAO2C,GAAQA,QC/BZG,OA7Bf,YAA+B,IAAZxG,EAAW,EAAXA,QACf,OACI,gBAACyG,GAAA,EAAD,CAAMrD,UAAU,mBAAhB,UACI,eAAC,QAAD,CAAMgC,GAAE,mBAAcpF,EAAQ8D,IAA9B,SACI,eAAC2C,GAAA,EAAKC,IAAN,CAAUC,IAAK3G,EAAQ4G,UAG3B,gBAACH,GAAA,EAAKI,KAAN,WACI,eAAC,QAAD,CAAMzB,GAAE,mBAAcpF,EAAQ8D,IAA9B,SACI,eAAC2C,GAAA,EAAKK,MAAN,CAAYC,GAAG,MAAf,SACI,kCAAS/G,EAAQsD,WAIzB,eAACmD,GAAA,EAAKO,KAAN,CAAWD,GAAG,MAAd,SACI,sBAAK3D,UAAU,OAAf,SACI,eAAC,GAAD,CAAQM,MAAO1D,EAAQiH,OAAQZ,KAAI,UAAKrG,EAAQkH,WAAb,YAAmCZ,MAAO,gBAKrF,gBAACG,GAAA,EAAKO,KAAN,CAAWD,GAAG,KAAd,eACO/G,EAAQmH,gB,UCThBC,OAff,WACI,OACI,eAACC,GAAA,EAAD,CACIC,UAAU,SACVC,KAAK,SACLhB,MAAO,CACHiB,OAAQ,OACRC,QAAS,SALjB,SAQI,uBAAMrE,UAAU,UAAhB,2B,UCFGsE,OARf,YAAyC,IAAtB9D,EAAqB,EAArBA,QAAS+D,EAAY,EAAZA,SACxB,OACI,eAACC,GAAA,EAAD,CAAOhE,QAASA,EAAhB,SACK+D,K,UCqBEE,OAvBf,YAAmE,IAA/C/H,EAA8C,EAA9CA,MAAOD,EAAuC,EAAvCA,KAAuC,IAAjC4C,eAAiC,MAAvB,GAAuB,MAAnBuD,eAAmB,SAK9D,OAJIvD,IACAA,EAAUA,EAAQqF,MAAM,aAAa,GAAGA,MAAM,KAAK,IAG/ChI,EAAQ,GACZ,eAACiI,GAAA,EAAD,UACK,aAAIC,MAAMlI,GAAOmI,QAAQnH,KAAI,SAACD,GAAD,OAC1B,eAAC,iBAAD,CAEIuE,GAAKY,EAAD,sCAEiCvD,EAFjC,iBAEiD5B,EAAI,GAFrD,oBACa4B,EADb,iBAC6B5B,EAAI,GAHzC,SAOI,eAACkH,GAAA,EAAWnC,KAAZ,CAAiBsC,OAAQrH,EAAI,IAAMhB,EAAnC,SAA0CgB,EAAI,KANzCA,EAAI,SCqBhBsH,GAAe,eAAC1F,EAAD,uDAAW,GAAX,gDAAkB,WAAOsB,GAAP,kBAAAE,EAAA,sEAEtCF,EAAS,CAAElF,KAAMxD,IAFqB,SAIfiJ,KAAMC,IAAN,kBAAqB9B,IAJN,gBAI9B+B,EAJ8B,EAI9BA,KAERT,EAAS,CACLlF,KAAMvD,EACN0D,QAASwF,IARyB,gDAYtCT,EAAS,CACLlF,KAAMtD,EACNyD,QAAS,KAAMyF,UAAY,KAAMA,SAASD,KAAKE,OACzC,KAAMD,SAASD,KAAKE,OACpB,KAAMC,UAhBsB,yDAAlB,uDA2CfyD,GAAqB,SAACtE,GAAD,gDAAQ,WAAOC,GAAP,kBAAAE,EAAA,sEAElCF,EAAS,CAAElF,KAAMrD,IAFiB,SAIX8I,KAAMC,IAAN,oBAAuBT,IAJZ,gBAI1BU,EAJ0B,EAI1BA,KAERT,EAAS,CACLlF,KAAMpD,EACNuD,QAASwF,IARqB,gDAYlCT,EAAS,CACLlF,KAAMnD,EACNsD,QAAS,KAAMyF,UAAY,KAAMA,SAASD,KAAKE,OACzC,KAAMD,SAASD,KAAKE,OACpB,KAAMC,UAhBkB,yDAAR,uDChCnB0D,OAnCf,YAAkC,IAAZ1F,EAAW,EAAXA,QACZoB,EAAWe,cACXnF,EAAckF,aAAY,SAAAlG,GAAK,OAAIA,EAAMgB,eACvCV,EAA0CU,EAA1CV,MAAOH,EAAmCa,EAAnCb,QAASc,EAA0BD,EAA1BC,SAAUC,EAAgBF,EAAhBE,KAAMC,EAAUH,EAAVG,MAEpC2C,EAAUE,EAAQO,SAASoF,OAO/B,OALAC,qBAAU,WACNxE,EAASoE,GAAa1F,MAEvB,CAACsB,EAAUtB,IAGV,iCAGI,kDACC3D,EAAU,eAAC,GAAD,IACLG,EAAQ,eAAC,GAAD,CAAS2E,QAAQ,SAAjB,SAA2B3E,IAEjC,iCACI,eAACiH,GAAA,EAAD,iBACKtG,QADL,IACKA,OADL,EACKA,EAAUkB,KAAI,SAAAd,GAAO,OAClB,eAACmG,GAAA,EAAD,CAAsBqC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAhD,SACI,eAAC,GAAD,CAAS3I,QAASA,KADZA,EAAQ8D,SAK1B,eAAC,GAAD,CAAUjE,KAAMA,EAAMC,MAAOA,EAAO2C,QAASA,W,oBC8LtDmG,OA1Nf,YAA4C,IAAnBC,EAAkB,EAAlBA,MAAOlG,EAAW,EAAXA,QAC5B,EAAsBH,mBAAS,GAA/B,oBAAOsG,EAAP,KAAYC,EAAZ,KACA,EAA4BvG,mBAAS,GAArC,oBAAOyE,EAAP,KAAe+B,EAAf,KACA,EAA8BxG,mBAAS,IAAvC,oBAAOyG,EAAP,KAAgBC,EAAhB,KAEMnF,EAAWe,cAEX/E,EAAiB8E,aAAY,SAAAlG,GAAK,OAAIA,EAAMoB,kBAC1CjB,EAA4BiB,EAA5BjB,QAASG,EAAmBc,EAAnBd,MAAOe,EAAYD,EAAZC,QAGhBjB,EADU8F,aAAY,SAAAlG,GAAK,OAAIA,EAAMD,aACrCK,SAEFsB,EAAsBwE,aAAY,SAAAlG,GAAK,OAAIA,EAAM0B,uBAE1C8I,EAGT9I,EAHAvB,QACOsK,EAEP/I,EAFApB,MACSoK,EACThJ,EADAf,QA4BJ,OAzBAiJ,qBAAU,WACFc,IACAL,EAAU,GACVE,EAAW,IACXnF,EAAS,CAAElF,KAAMpC,MAGrBsH,EAASqE,GAAmBS,EAAMS,OAAOxF,OAE1C,CAACC,EAAU8E,EAAOQ,IAiBjB,iCACI,eAAC,QAAD,CAAMjE,GAAG,IAAIhC,UAAU,qBAAvB,qBACCtE,EACG,eAAC,GAAD,IACEG,EACI,eAAC,GAAD,CAAS2E,QAAQ,SAAjB,SAA2B3E,IAEzB,iCACI,gBAACiH,GAAA,EAAD,WACI,eAACC,GAAA,EAAD,CAAKsC,GAAI,EAAT,SACI,eAACc,GAAA,EAAD,CAAO5C,IAAK3G,EAAQ4G,MAAO4C,IAAKxJ,EAAQsD,KAAMmG,OAAK,MAIvD,eAACtD,GAAA,EAAD,CAAKsC,GAAI,EAAT,SACI,gBAACiB,GAAA,EAAD,CAAW9F,QAAQ,QAAnB,UACI,eAAC8F,GAAA,EAAU9D,KAAX,UACI,8BAAK5F,EAAQsD,SAGjB,eAACoG,GAAA,EAAU9D,KAAX,UACI,eAAC,GAAD,CAAQlC,MAAO1D,EAAQiH,OAAQZ,KAAI,UAAKrG,EAAQkH,WAAb,YAAmCZ,MAAO,cAGjF,gBAACoD,GAAA,EAAU9D,KAAX,uBACc5F,EAAQmH,SAGtB,gBAACuC,GAAA,EAAU9D,KAAX,2BACkB5F,EAAQ2J,oBAMlC,eAACxD,GAAA,EAAD,CAAKsC,GAAI,EAAT,SACI,eAAChC,GAAA,EAAD,UACI,gBAACiD,GAAA,EAAD,CAAW9F,QAAQ,QAAnB,UACI,eAAC8F,GAAA,EAAU9D,KAAX,UACI,gBAACM,GAAA,EAAD,WACI,eAACC,GAAA,EAAD,qBACA,eAACA,GAAA,EAAD,UACI,yCAAWnG,EAAQmH,gBAI/B,eAACuC,GAAA,EAAU9D,KAAX,UACI,gBAACM,GAAA,EAAD,WACI,eAACC,GAAA,EAAD,sBACA,eAACA,GAAA,EAAD,UACKnG,EAAQ4J,aAAe,EAAI,WAAa,sBAKpD5J,EAAQ4J,aAAe,GACpB,eAACF,GAAA,EAAU9D,KAAX,UACI,gBAACM,GAAA,EAAD,WACI,eAACC,GAAA,EAAD,kBACA,eAACA,GAAA,EAAD,CAAK0D,GAAG,OAAOzG,UAAU,OAAzB,SACI,eAACP,GAAA,EAAKQ,QAAN,CACI0D,GAAG,SACHrD,MAAOoF,EACPtF,SAAU,SAACT,GAAD,OAAOgG,EAAOhG,EAAEU,OAAOC,QAHrC,SAOQ,aAAIsE,MAAMhI,EAAQ4J,cAAc3B,QAAQnH,KAAI,SAACD,GAAD,OACxC,yBAAoB6C,MAAO7C,EAAI,EAA/B,SACKA,EAAI,GADIA,EAAI,eAa7C,eAAC6I,GAAA,EAAU9D,KAAX,UACI,eAACjC,GAAA,EAAD,CACIkC,QAlGvB,WACrBlD,EAAQM,KAAR,gBAAsB4F,EAAMS,OAAOxF,GAAnC,gBAA6CgF,KAkGD1F,UAAU,YACV0G,SAAmC,IAAzB9J,EAAQ4J,aAClB/K,KAAK,SAJT,qCAapB,eAACqH,GAAA,EAAD,UACI,gBAACC,GAAA,EAAD,CAAKsC,GAAI,EAAT,UACI,0CAC4B,IAA3BzI,EAAQC,QAAQ8J,QAAgB,eAAC,GAAD,CAASnG,QAAQ,OAAjB,wBAEjC,gBAAC8F,GAAA,EAAD,CAAW9F,QAAQ,QAAnB,UACK5D,EAAQC,QAAQa,KAAI,SAACkJ,GAAD,OACjB,gBAACN,GAAA,EAAU9D,KAAX,WACI,kCAASoE,EAAO1G,OAChB,eAAC,GAAD,CAAQI,MAAOsG,EAAO/C,OAAQX,MAAM,YACpC,6BAAI0D,EAAOC,UAAUC,UAAU,EAAG,MAClC,6BAAIF,EAAOf,YAJMe,EAAOlG,OAQhC,gBAAC4F,GAAA,EAAU9D,KAAX,WACI,iDAECuD,GAAwB,eAAC,GAAD,IACxBE,GAAwB,eAAC,GAAD,CAASzF,QAAQ,UAAjB,8BACxBwF,GAAsB,eAAC,GAAD,CAASxF,QAAQ,SAAjB,SAA2BwF,IAEjDrK,EACG,gBAAC8D,GAAA,EAAD,CAAMC,SAjI5B,SAACC,GFkLQ,IAACoH,EAAWH,EEjLvCjH,EAAEC,iBACFe,GFgL4BoG,EE/KxBtB,EAAMS,OAAOxF,GF+KsBkG,EE/KlB,CACjB/C,SACAgC,WF6KuB,yCAAuB,WAAOlF,EAAUC,GAAjB,wBAAAC,EAAA,sEAElDF,EAAS,CACLlF,KAAMvC,KAHwC,EAQ9C0H,IADajF,EAPiC,EAO9CL,UAAaK,SAGXmF,EAAS,CACXC,QAAS,CACL,eAAgB,mBAChBC,cAAc,UAAD,OAAYrF,EAASsF,SAbQ,SAiB3BC,KAAM8F,KAAN,oBACND,EADM,aAEnBH,EACA9F,GApB8C,gBAiB1CM,EAjB0C,EAiB1CA,KAKRT,EAAS,CACLlF,KAAMtC,GACNyC,QAASwF,IAxBqC,kDA8BlDT,EAAS,CACLlF,KAAMrC,GACNwC,QAAS,KAAMyF,UAAY,KAAMA,SAASD,KAAKE,OACzC,KAAMD,SAASD,KAAKE,OACpB,KAAMC,UAlCkC,0DAAvB,2DEjDa,UACI,gBAAC9B,GAAA,EAAKwH,MAAN,CAAYC,UAAU,SAAtB,UACI,eAACzH,GAAA,EAAK0H,MAAN,qBACA,gBAAC1H,GAAA,EAAKQ,QAAN,CACI0D,GAAG,SACHrD,MAAOuD,EACPzD,SAAU,SAACT,GAAD,OAAOiG,EAAUjG,EAAEU,OAAOC,QAHxC,UAKI,yBAAQA,MAAM,GAAd,uBACA,yBAAQA,MAAM,IAAd,sBACA,yBAAQA,MAAM,IAAd,sBACA,yBAAQA,MAAM,IAAd,sBACA,yBAAQA,MAAM,IAAd,2BACA,yBAAQA,MAAM,IAAd,iCAIR,gBAACb,GAAA,EAAKwH,MAAN,CAAYC,UAAU,UAAtB,UACI,eAACzH,GAAA,EAAK0H,MAAN,qBACA,eAAC1H,GAAA,EAAKQ,QAAN,CACI0D,GAAG,WACHyD,IAAI,IACJ9G,MAAOuF,EACPzF,SAAU,SAACT,GAAD,OAAOmG,EAAWnG,EAAEU,OAAOC,aAI7C,eAACC,GAAA,EAAD,CACImG,SAAUX,EACVtK,KAAK,SACL+E,QAAQ,UACRR,UAAU,OAJd,uBAWA,gBAAC,GAAD,CAASQ,QAAQ,OAAjB,oBAA+B,eAAC,QAAD,CAAMwB,GAAG,SAAT,mBAA/B,0CC1MvCqF,GAAY,SAAC3G,EAAIgF,GAAL,gDAAa,WAAO/E,EAAUC,GAAjB,kBAAAC,EAAA,sEACXK,KAAMC,IAAN,oBAAuBT,IADZ,gBAC1BU,EAD0B,EAC1BA,KAERT,EAAS,CACLlF,KAAMhC,GACNmC,QAAS,CACLgB,QAASwE,EAAKV,GACdR,KAAMkB,EAAKlB,KACXsD,MAAOpC,EAAKoC,MACZO,MAAO3C,EAAK2C,MACZyC,aAAcpF,EAAKoF,aACnBd,SAGRnH,aAAa+I,QAAQ,YAAa7I,KAAK8I,UAAU3G,IAAWzD,KAAKC,YAd/B,2CAAb,yDCyGVoK,OA5Gf,YAAmD,IAA7B/B,EAA4B,EAA5BA,MAAO3F,EAAqB,EAArBA,SAAUP,EAAW,EAAXA,QAC7BwH,EAAYtB,EAAMS,OAAOxF,GACzBgF,EAAM5F,EAASoF,OAASuC,OAAO3H,EAASoF,OAAOR,MAAM,KAAK,IAAM,EAChE/D,EAAWe,cAGTtE,EADKqE,aAAY,SAAAlG,GAAK,OAAIA,EAAM4B,QAChCC,UAER+H,qBAAU,WACF4B,GACApG,EAAS0G,GAAUN,EAAWrB,MAEnC,CAAC/E,EAAUoG,EAAWrB,IAGzB,IAAMgC,EAAwB,SAAChH,GAC3BC,EDMsB,SAACD,GAAD,OAAQ,SAACC,EAAUC,GAC7CD,EAAS,CACLlF,KAAM/B,GACNkC,QAAS8E,IAGbnC,aAAa+I,QAAQ,YAAa7I,KAAK8I,UAAU3G,IAAWzD,KAAKC,aCZpDuK,CAAejH,KAO5B,OACI,gBAACoC,GAAA,EAAD,WACI,gBAACC,GAAA,EAAD,CAAKsC,GAAI,EAAT,UACI,gDACsB,IAArBjI,EAAUuJ,OACP,gBAAC,GAAD,CAASnG,QAAQ,OAAjB,gCACuB,eAAC,QAAD,CAAMwB,GAAG,IAAT,wBAGnB,eAACsE,GAAA,EAAD,CAAW9F,QAAQ,QAAnB,SACKpD,EAAUM,KAAI,SAAAJ,GAAI,OACf,eAACgJ,GAAA,EAAU9D,KAAX,UACI,gBAACM,GAAA,EAAD,WACI,eAACC,GAAA,EAAD,CAAKsC,GAAI,EAAT,SACI,eAACc,GAAA,EAAD,CAAO5C,IAAKjG,EAAKkG,MAAO4C,IAAK9I,EAAK4C,KAAMmG,OAAK,EAACuB,SAAO,MAEzD,eAAC7E,GAAA,EAAD,CAAKsC,GAAI,EAAT,SACI,eAAC,QAAD,CAAMrD,GAAE,mBAAc1E,EAAKV,SAA3B,SAAuCU,EAAK4C,SAGhD,gBAAC6C,GAAA,EAAD,CAAKsC,GAAI,EAAT,eACO/H,EAAKyG,SAGZ,eAAChB,GAAA,EAAD,CAAKsC,GAAI,EAAT,SACI,eAAC5F,GAAA,EAAKQ,QAAN,CACI0D,GAAG,SACHrD,MAAOhD,EAAKoI,IACZtF,SAAU,SAACT,GAAD,OAAOgB,EAAS0G,GAAU/J,EAAKV,QAAS6K,OAAO9H,EAAEU,OAAOC,UAHtE,SAOQ,aAAIsE,MAAMtH,EAAKkJ,cAAc3B,QAAQnH,KAAI,SAACD,GAAD,OACrC,yBAAoB6C,MAAO7C,EAAI,EAA/B,SACKA,EAAI,GADIA,EAAI,UASjC,eAACsF,GAAA,EAAD,CAAKsC,GAAI,EAAT,SACI,eAAC9E,GAAA,EAAD,CACI9E,KAAK,SACL+E,QAAQ,QACRiC,QAAS,kBAAMiF,EAAsBpK,EAAKV,UAH9C,SAKI,oBAAGoD,UAAU,yBArCR1C,EAAKV,iBA+C9C,eAACmG,GAAA,EAAD,CAAKsC,GAAI,EAAT,SACI,gBAAChC,GAAA,EAAD,WACI,eAACiD,GAAA,EAAD,CAAW9F,QAAQ,QAAnB,SACI,gBAAC8F,GAAA,EAAU9D,KAAX,WACI,6CAAepF,EAAUyK,QAAO,SAACC,EAAKxK,GAAN,OAAewK,EAAMxK,EAAKoI,MAAK,GAA/D,aADJ,KAEOtI,EAAUyK,QAAO,SAACC,EAAKxK,GAAN,OAAewK,EAAMxK,EAAKoI,IAAMpI,EAAKyG,QAAO,GAAGgE,QAAQ,QAInF,eAACzB,GAAA,EAAU9D,KAAX,UACI,eAACjC,GAAA,EAAD,CACI9E,KAAK,SACLuE,UAAU,YACV0G,SAA+B,IAArBtJ,EAAUuJ,OACpBlE,QA5EA,WACpBlD,EAAQM,KAAK,6BAuEG,4CCnFTmI,OAZf,YAAsC,IAAbzD,EAAY,EAAZA,SACrB,OACI,eAACxC,GAAA,EAAD,UACI,eAACe,GAAA,EAAD,CAAK9C,UAAU,4BAAf,SACI,eAAC+C,GAAA,EAAD,CAAK0D,GAAI,GAAIpB,GAAI,EAAjB,SACKd,SCuEN0D,OAtEf,YAA6C,IAAtBnI,EAAqB,EAArBA,SAAUP,EAAW,EAAXA,QAC7B,EAA0BH,mBAAS,IAAnC,oBAAO8I,EAAP,KAAcC,EAAd,KACA,EAAgC/I,mBAAS,IAAzC,oBAAOgJ,EAAP,KAAiBC,EAAjB,KAEM1H,EAAWe,cAEX4G,EAAWxI,EAASoF,OAASpF,EAASoF,OAAOR,MAAM,KAAK,GAAK,IAE7DpJ,EAAYmG,aAAY,SAAAlG,GAAK,OAAIA,EAAMD,aACrCO,EAA6BP,EAA7BO,MAAOH,EAAsBJ,EAAtBI,QAASC,EAAaL,EAAbK,SAaxB,OAXAwJ,qBAAU,WACFxJ,GACA4D,EAAQM,KAAKyI,KAElB,CAAC/I,EAAS5D,EAAU2M,IAQnB,gBAAC,GAAD,WACI,0CACCzM,GAAS,eAAC,GAAD,CAAS2E,QAAQ,SAAjB,SAA2B3E,IACpCH,GAAW,eAAC,GAAD,IACZ,gBAAC+D,GAAA,EAAD,CAAMC,SAVQ,SAACC,GACnBA,EAAEC,iBACFe,EdYa,SAACuH,EAAOE,GAAR,gDAAqB,WAAOzH,GAAP,oBAAAE,EAAA,sEAElCF,EAAS,CACLlF,KAAMlF,IAGJuK,EAAS,CACXC,QAAS,CACL,eAAgB,qBARU,SAYXG,KAAM8F,KACzB,mBACA,CAAE,MAASkB,EAAO,SAAYE,GAC9BtH,GAf8B,gBAY1BM,EAZ0B,EAY1BA,KAMRT,EAAS,CACLlF,KAAMjF,EACNoF,QAASwF,IAGb7C,aAAa+I,QAAQ,WAAY7I,KAAK8I,UAAUnG,IAvBd,kDA0BlCT,EAAS,CACLlF,KAAMhF,EACNmF,QAAS,KAAMyF,UAAY,KAAMA,SAASD,KAAKE,OACzC,KAAMD,SAASD,KAAKE,OACpB,KAAMC,UA9BkB,0DAArB,sDcZJgH,CAAML,EAAOE,KAQlB,UAEI,gBAAC3I,GAAA,EAAKwH,MAAN,CAAYC,UAAU,QAAtB,UACI,eAACzH,GAAA,EAAK0H,MAAN,4BACA,eAAC1H,GAAA,EAAKQ,QAAN,CACIxE,KAAK,QACL0E,YAAY,cACZG,MAAO4H,EACP9H,SAAU,SAACT,GAAD,OAAOwI,EAASxI,EAAEU,OAAOC,aAM3C,gBAACb,GAAA,EAAKwH,MAAN,CAAYC,UAAU,WAAtB,UACI,eAACzH,GAAA,EAAK0H,MAAN,uBACA,eAAC1H,GAAA,EAAKQ,QAAN,CACIxE,KAAK,WACL0E,YAAY,iBACZG,MAAO8H,EACPhI,SAAU,SAACT,GAAD,OAAO0I,EAAY1I,EAAEU,OAAOC,aAK9C,eAACC,GAAA,EAAD,CAAQ9E,KAAK,SAAS+E,QAAQ,UAAUR,UAAU,OAAlD,wBAKJ,eAAC8C,GAAA,EAAD,CAAK9C,UAAU,OAAf,SACI,gBAAC+C,GAAA,EAAD,wBACc,eAAC,QAAD,CACNf,GAAIsG,EAAQ,6BAAyBA,GAAa,YAD5C,+BC+CfE,OA1Gf,YAAgD,IAAtB1I,EAAqB,EAArBA,SAAUP,EAAW,EAAXA,QAEhC,EAAwBH,mBAAS,IAAjC,oBAAOc,EAAP,KAAauI,EAAb,KACA,EAA0BrJ,mBAAS,IAAnC,oBAAO8I,EAAP,KAAcC,EAAd,KACA,EAAgC/I,mBAAS,IAAzC,oBAAOgJ,EAAP,KAAiBC,EAAjB,KACA,EAA8CjJ,mBAAS,IAAvD,oBAAOsJ,EAAP,KAAwBC,EAAxB,KACA,EAA8BvJ,mBAAS,IAAvC,oBAAOmC,EAAP,KAAgBqH,EAAhB,KAEMjI,EAAWe,cAEX4G,EAAWxI,EAASoF,OAASpF,EAASoF,OAAOR,MAAM,KAAK,GAAK,IAE7D5I,EAAe2F,aAAY,SAAAlG,GAAK,OAAIA,EAAMO,gBACxCD,EAA6BC,EAA7BD,MAAOH,EAAsBI,EAAtBJ,QAASC,EAAaG,EAAbH,SAmBxB,OAjBAwJ,qBAAU,WACFxJ,GACA4D,EAAQM,KAAKyI,KAElB,CAAC/I,EAAS5D,EAAU2M,IAcnB,gBAAC,GAAD,WACI,0CACC/G,GAAW,eAAC,GAAD,CAASf,QAAQ,SAAjB,SAA2Be,IACtC1F,GAAS,eAAC,GAAD,CAAS2E,QAAQ,SAAjB,SAA2B3E,IACpCH,GAAW,eAAC,GAAD,IACZ,gBAAC+D,GAAA,EAAD,CAAMC,SAjBQ,SAACC,GACnBA,EAAEC,iBAEEwI,IAAaM,EACbE,EAAW,0BAEXjI,EfiDY,SAACT,EAAMgI,EAAOE,GAAd,gDAA2B,WAAOzH,GAAP,oBAAAE,EAAA,sEAE3CF,EAAS,CACLlF,KAAM9E,IAGJmK,EAAS,CACXC,QAAS,CACL,eAAgB,qBARmB,SAYpBG,KAAM8F,KACzB,sBACA,CAAE,KAAQ9G,EAAM,MAASgI,EAAO,SAAYE,GAC5CtH,GAfuC,gBAYnCM,EAZmC,EAYnCA,KAMRT,EAAS,CACLlF,KAAM7E,EACNgF,QAASwF,IAGbT,EAAS,CACLlF,KAAMjF,EACNoF,QAASwF,IAGb7C,aAAa+I,QAAQ,WAAY7I,KAAK8I,UAAUnG,IA5BL,kDA+B3CT,EAAS,CACLlF,KAAM5E,EACN+E,QAAS,KAAMyF,UAAY,KAAMA,SAASD,KAAKE,OACzC,KAAMD,SAASD,KAAKE,OACpB,KAAMC,UAnC2B,0DAA3B,sDejDHsH,CAAS3I,EAAMgI,EAAOE,KAW/B,UAEI,gBAAC3I,GAAA,EAAKwH,MAAN,CAAYC,UAAU,OAAtB,UACI,eAACzH,GAAA,EAAK0H,MAAN,mBACA,eAAC1H,GAAA,EAAKQ,QAAN,CACI6I,UAAQ,EACRrN,KAAK,OACL0E,YAAY,aACZG,MAAOJ,EACPE,SAAU,SAACT,GAAD,OAAO8I,EAAQ9I,EAAEU,OAAOC,aAK1C,gBAACb,GAAA,EAAKwH,MAAN,CAAYC,UAAU,QAAtB,UACI,eAACzH,GAAA,EAAK0H,MAAN,4BACA,eAAC1H,GAAA,EAAKQ,QAAN,CACI6I,UAAQ,EACRrN,KAAK,QACL0E,YAAY,cACZG,MAAO4H,EACP9H,SAAU,SAACT,GAAD,OAAOwI,EAASxI,EAAEU,OAAOC,aAK3C,gBAACb,GAAA,EAAKwH,MAAN,CAAYC,UAAU,WAAtB,UACI,eAACzH,GAAA,EAAK0H,MAAN,uBACA,eAAC1H,GAAA,EAAKQ,QAAN,CACI6I,UAAQ,EACRrN,KAAK,WACL0E,YAAY,iBACZG,MAAO8H,EACPhI,SAAU,SAACT,GAAD,OAAO0I,EAAY1I,EAAEU,OAAOC,aAK9C,gBAACb,GAAA,EAAKwH,MAAN,CAAYC,UAAU,kBAAtB,UACI,eAACzH,GAAA,EAAK0H,MAAN,+BACA,eAAC1H,GAAA,EAAKQ,QAAN,CACI6I,UAAQ,EACRrN,KAAK,WACL0E,YAAY,mBACZG,MAAOoI,EACPtI,SAAU,SAACT,GAAD,OAAOgJ,EAAmBhJ,EAAEU,OAAOC,aAKrD,eAACC,GAAA,EAAD,CAAQ9E,KAAK,SAAS+E,QAAQ,UAAUR,UAAU,OAAlD,yBAMJ,eAAC8C,GAAA,EAAD,CAAK9C,UAAU,OAAf,SACI,gBAAC+C,GAAA,EAAD,+BACqB,eAAC,QAAD,CACbf,GAAIsG,EAAQ,0BAAsBA,GAAa,SADlC,8B,UCexBS,GAAW,SAACrI,EAAIsI,GAAL,gDAAuB,WAAOrI,EAAUC,GAAjB,wBAAAC,EAAA,sEAEvCF,EAAS,CACLlF,KAAMpB,KAH6B,EAQnCuG,IADajF,EAPsB,EAOnCL,UAAaK,SAGXmF,EAAS,CACXC,QAAS,CACL,eAAgB,mBAChBC,cAAc,UAAD,OAAYrF,EAASsF,SAbH,SAiBhBC,KAAM+H,IAAN,kBACRvI,EADQ,SAEnBsI,EACAlI,GApBmC,gBAiB/BM,EAjB+B,EAiB/BA,KAMRT,EAAS,CACLlF,KAAMnB,GACNsB,QAASwF,IAzB0B,kDA8BvCT,EAAS,CACLlF,KAAMlB,GACNqB,QAAS,KAAMyF,UAAY,KAAMA,SAASD,KAAKE,OACzC,KAAMD,SAASD,KAAKE,OACpB,KAAMC,UAlCuB,0DAAvB,yDCuDT2H,OArKf,YAAqC,IAAZ3J,EAAW,EAAXA,QAErB,EAAwBH,mBAAS,IAAjC,oBAAOc,EAAP,KAAauI,EAAb,KACA,EAA0BrJ,mBAAS,IAAnC,oBAAO8I,EAAP,KAAcC,EAAd,KACA,EAAgC/I,mBAAS,IAAzC,oBAAOgJ,EAAP,KAAiBC,EAAjB,KACA,EAA8CjJ,mBAAS,IAAvD,oBAAOsJ,EAAP,KAAwBC,EAAxB,KACA,EAA8BvJ,mBAAS,IAAvC,oBAAOmC,EAAP,KAAgBqH,EAAhB,KAEMjI,EAAWe,cAEX3F,EAAc0F,aAAY,SAAAlG,GAAK,OAAIA,EAAMQ,eACvCF,EAAyBE,EAAzBF,MAAOH,EAAkBK,EAAlBL,QAASM,EAASD,EAATC,KAGhBL,EADU8F,aAAY,SAAAlG,GAAK,OAAIA,EAAMD,aACrCK,SAGAO,EADkBuF,aAAY,SAAAlG,GAAK,OAAIA,EAAMU,qBAC7CC,QAEFgC,EAAcuD,aAAY,SAAAlG,GAAK,OAAIA,EAAM2C,eAC9BiL,EAA8CjL,EAAvDxC,QAA+B0N,EAAwBlL,EAA/BrC,MAAoBsC,EAAWD,EAAXC,OAkCpD,OA/BAgH,qBAAU,WACDxJ,EAGIK,GAASA,EAAK0E,KAAMxE,GAAWP,EAAS+E,KAAO1E,EAAK0E,IAKrD+H,EAAQzM,EAAKkE,MACbiI,EAASnM,EAAKkM,SALdvH,EAAS,CAAElF,KAAMpE,IACjBsJ,EAASF,GAAe,YACxBE,EDiKY,yCAAM,WAAOA,EAAUC,GAAjB,wBAAAC,EAAA,sEAE1BF,EAAS,CACLlF,KAAMhB,KAHgB,EAQtBmG,IADajF,EAPS,EAOtBL,UAAaK,SAGXmF,EAAS,CACXC,QAAS,CACL,eAAgB,mBAChBC,cAAc,UAAD,OAAYrF,EAASsF,SAbhB,SAiBHC,KAAMC,IAAN,oBAEnBL,GAnBsB,gBAiBlBM,EAjBkB,EAiBlBA,KAKRT,EAAS,CACLlF,KAAMf,GACNkB,QAASwF,IAxBa,kDA6B1BT,EAAS,CACLlF,KAAMd,GACNiB,QAAS,KAAMyF,UAAY,KAAMA,SAASD,KAAKE,OACzC,KAAMD,SAASD,KAAKE,OACpB,KAAMC,UAjCU,0DAAN,0DCtKhBhC,EAAQM,KAAK,YAWlB,CAACc,EAAUpB,EAAS5D,EAAUK,EAAME,IAmBnC,gBAAC4G,GAAA,EAAD,WACI,gBAACC,GAAA,EAAD,CAAKsC,GAAI,EAAT,UACI,+CAEC9D,GAAW,eAAC,GAAD,CAASf,QAAQ,SAAjB,SAA2Be,IACtC1F,GAAS,eAAC,GAAD,CAAS2E,QAAQ,SAAjB,SAA2B3E,IACpCH,GAAW,eAAC,GAAD,IACZ,gBAAC+D,GAAA,EAAD,CAAMC,SAxBI,SAACC,GACnBA,EAAEC,iBAEEwI,IAAaM,EACbE,EAAW,2BAEXjI,EjB+GqB,SAAC3E,GAAD,gDAAU,WAAO2E,EAAUC,GAAjB,wBAAAC,EAAA,sEAEnCF,EAAS,CACLlF,KAAMvE,IAHyB,EAQ/B0J,IADajF,EAPkB,EAO/BL,UAAaK,SAGXmF,EAAS,CACXC,QAAS,CACL,eAAgB,mBAChBC,cAAc,UAAD,OAAYrF,EAASsF,SAbP,SAiBZC,KAAM+H,IAAN,4BAEnBjN,EACA8E,GApB+B,gBAiB3BM,EAjB2B,EAiB3BA,KAMRT,EAAS,CACLlF,KAAMtE,EACNyE,QAASwF,IAGbT,EAAS,CACLlF,KAAMjF,EACNoF,QAASwF,IAGb7C,aAAa+I,QAAQ,WAAY7I,KAAK8I,UAAUnG,IAjCb,kDAoCnCT,EAAS,CACLlF,KAAMrE,EACNwE,QAAS,KAAMyF,UAAY,KAAMA,SAASD,KAAKE,OACzC,KAAMD,SAASD,KAAKE,OACpB,KAAMC,UAxCmB,0DAAV,wDiB/GZ8H,CAAkB,CACvB,GAAMrN,EAAK0E,GACX,KAAQR,EACR,MAASgI,EACT,SAAYE,KAEhBQ,EAAW,MAYP,UAEI,gBAACnJ,GAAA,EAAKwH,MAAN,CAAYC,UAAU,OAAtB,UACI,eAACzH,GAAA,EAAK0H,MAAN,mBACA,eAAC1H,GAAA,EAAKQ,QAAN,CACI6I,UAAQ,EACRrN,KAAK,OACL0E,YAAY,aACZG,MAAOJ,EACPE,SAAU,SAACT,GAAD,OAAO8I,EAAQ9I,EAAEU,OAAOC,aAK1C,gBAACb,GAAA,EAAKwH,MAAN,CAAYC,UAAU,QAAtB,UACI,eAACzH,GAAA,EAAK0H,MAAN,4BACA,eAAC1H,GAAA,EAAKQ,QAAN,CACI6I,UAAQ,EACRrN,KAAK,QACL0E,YAAY,cACZG,MAAO4H,EACP9H,SAAU,SAACT,GAAD,OAAOwI,EAASxI,EAAEU,OAAOC,aAK3C,gBAACb,GAAA,EAAKwH,MAAN,CAAYC,UAAU,WAAtB,UACI,eAACzH,GAAA,EAAK0H,MAAN,uBACA,eAAC1H,GAAA,EAAKQ,QAAN,CAEIxE,KAAK,WACL0E,YAAY,iBACZG,MAAO8H,EACPhI,SAAU,SAACT,GAAD,OAAO0I,EAAY1I,EAAEU,OAAOC,aAK9C,gBAACb,GAAA,EAAKwH,MAAN,CAAYC,UAAU,kBAAtB,UACI,eAACzH,GAAA,EAAK0H,MAAN,+BACA,eAAC1H,GAAA,EAAKQ,QAAN,CAEIxE,KAAK,WACL0E,YAAY,mBACZG,MAAOoI,EACPtI,SAAU,SAACT,GAAD,OAAOgJ,EAAmBhJ,EAAEU,OAAOC,aAKrD,eAACC,GAAA,EAAD,CAAQ9E,KAAK,SAAS+E,QAAQ,UAA9B,0BAOR,gBAACuC,GAAA,EAAD,CAAKsC,GAAI,EAAT,UACI,4CACC8D,EACG,eAAC,GAAD,IACAC,EACA,eAAC,GAAD,CAAS5I,QAAQ,SAAjB,SAA2B4I,IAEnB,gBAACE,GAAA,EAAD,CAAOC,SAAO,EAACC,YAAU,EAACxJ,UAAU,WAApC,UACI,iCACI,gCACI,qCACA,uCACA,wCACA,uCACA,4CACA,6BAIR,iCACK7B,EAAOT,KAAI,SAAAI,GAAK,OACb,gCACI,8BAAKA,EAAM4C,KACX,8BAAK5C,EAAM+I,UAAUC,UAAU,EAAG,MAClC,qCAAOhJ,EAAM2L,cACb,8BAAK3L,EAAM4L,OAAS5L,EAAM6L,OAAO7C,UAAU,EAAG,IAC1C,oBAAG9G,UAAU,eAAemD,MAAO,CAAED,MAAO,WAEhD,8BAAKpF,EAAM8L,YAAc9L,EAAM+L,YAAY/C,UAAU,EAAG,IACpD,oBAAG9G,UAAU,eAAemD,MAAO,CAAED,MAAO,WAEhD,8BACI,eAAC,iBAAD,CAAelB,GAAE,iBAAYlE,EAAM4C,IAAnC,SACI,eAACH,GAAA,EAAD,CAAQP,UAAU,SAAlB,2BAZHlC,EAAM4C,mBC7GxCoJ,OArCf,YAAwD,IAA/BC,EAA8B,EAA9BA,MAAOC,EAAuB,EAAvBA,MAAOC,EAAgB,EAAhBA,MAEnC,OAFmD,EAATC,MAGtC,gBAAC7H,GAAA,EAAD,CAAKrC,UAAU,8BAAf,UACI,eAACqC,GAAA,EAAIG,KAAL,UACKuH,EACG,eAAC,iBAAD,CAAe/H,GAAG,SAAlB,SACI,eAACK,GAAA,EAAIM,KAAL,yBAGA,eAACN,GAAA,EAAIM,KAAL,CAAU+D,UAAQ,EAAlB,wBAIZ,eAACrE,GAAA,EAAIG,KAAL,UACKwH,EACG,eAAC,iBAAD,CAAehI,GAAG,YAAlB,SACI,eAACK,GAAA,EAAIM,KAAL,wBAGA,eAACN,GAAA,EAAIM,KAAL,CAAU+D,UAAQ,EAAlB,uBAIZ,eAACrE,GAAA,EAAIG,KAAL,UACKyH,EACG,eAAC,iBAAD,CAAejI,GAAG,WAAlB,SACI,eAACK,GAAA,EAAIM,KAAL,4BAGA,eAACN,GAAA,EAAIM,KAAL,CAAU+D,UAAQ,EAAlB,+BCkETyD,OA7Ff,YAAsC,IAAZ5K,EAAW,EAAXA,QAGdlC,EADKoE,aAAY,SAAAlG,GAAK,OAAIA,EAAM4B,QAChCE,gBAEFsD,EAAWe,cAEjB,EAA8BtC,mBAAS/B,EAAgB+M,SAAvD,oBAAOA,EAAP,KAAgBC,EAAhB,KACA,EAAwBjL,mBAAS/B,EAAgBiN,MAAjD,oBAAOA,EAAP,KAAaC,EAAb,KACA,EAAoCnL,mBAAS/B,EAAgBmN,YAA7D,oBAAOA,EAAP,KAAmBC,EAAnB,KACA,EAA8BrL,mBAAS/B,EAAgBqN,SAAvD,oBAAOA,EAAP,KAAgBC,EAAhB,KACA,EAAsCvL,mBAAS/B,EAAgBuN,aAA/D,oBAAOA,EAAP,KAAoBC,EAApB,KAQA,OACI,gBAAC,GAAD,WACI,eAAC,GAAD,CAAed,OAAK,IACpB,2CACA,gBAACtK,GAAA,EAAD,CAAMC,SAVQ,SAACC,GRmBQ,IAACyB,EQlB5BzB,EAAEC,iBACFe,GRiB4BS,EQjBC,CAAEgJ,UAASE,OAAME,aAAYE,UAASE,eRiB9B,SAACjK,GAC1CA,EAAS,CACLlF,KAAM9B,GACNiC,QAASwF,IAGb7C,aAAa+I,QAAQ,kBAAmB7I,KAAK8I,UAAUnG,OQtBnD7B,EAAQM,KAAK,aAOT,UAEI,gBAACJ,GAAA,EAAKwH,MAAN,CAAYC,UAAU,UAAtB,UACI,eAACzH,GAAA,EAAK0H,MAAN,sBACA,eAAC1H,GAAA,EAAKQ,QAAN,CACI6I,UAAQ,EACRrN,KAAK,OACL0E,YAAY,gBACZG,MAAO8J,GAAoB,GAC3BhK,SAAU,SAACT,GAAD,OAAO0K,EAAW1K,EAAEU,OAAOC,aAK7C,gBAACb,GAAA,EAAKwH,MAAN,CAAYC,UAAU,OAAtB,UACI,eAACzH,GAAA,EAAK0H,MAAN,mBACA,eAAC1H,GAAA,EAAKQ,QAAN,CACI6I,UAAQ,EACRrN,KAAK,OACL0E,YAAY,aACZG,MAAOgK,GAAc,GACrBlK,SAAU,SAACT,GAAD,OAAO4K,EAAQ5K,EAAEU,OAAOC,aAK1C,gBAACb,GAAA,EAAKwH,MAAN,CAAYC,UAAU,aAAtB,UACI,eAACzH,GAAA,EAAK0H,MAAN,0BACA,eAAC1H,GAAA,EAAKQ,QAAN,CACI6I,UAAQ,EACRrN,KAAK,OACL0E,YAAY,oBACZG,MAAOkK,GAA0B,GACjCpK,SAAU,SAACT,GAAD,OAAO8K,EAAc9K,EAAEU,OAAOC,aAKhD,gBAACb,GAAA,EAAKwH,MAAN,CAAYC,UAAU,UAAtB,UACI,eAACzH,GAAA,EAAK0H,MAAN,sBACA,eAAC1H,GAAA,EAAKQ,QAAN,CACI6I,UAAQ,EACRrN,KAAK,OACL0E,YAAY,gBACZG,MAAOoK,GAAoB,GAC3BtK,SAAU,SAACT,GAAD,OAAOgL,EAAWhL,EAAEU,OAAOC,aAK7C,gBAACb,GAAA,EAAKwH,MAAN,CAAYC,UAAU,cAAtB,UACI,eAACzH,GAAA,EAAK0H,MAAN,2BACA,eAAC1H,GAAA,EAAKQ,QAAN,CACI6I,UAAQ,EACRrN,KAAK,OACL0E,YAAY,qBACZG,MAAOsK,GAA4B,GACnCxK,SAAU,SAACT,GAAD,OAAOkL,EAAelL,EAAEU,OAAOC,aAKjD,eAACC,GAAA,EAAD,CAAQ9E,KAAK,SAAS+E,QAAQ,UAAUR,UAAU,OAAlD,6BCzBD8K,OA5Df,YAAqC,IAAZvL,EAAW,EAAXA,QAGblC,EADKoE,aAAY,SAAAlG,GAAK,OAAIA,EAAM4B,QAChCE,gBAEFsD,EAAWe,cAEjB,EAA0CtC,mBAAS,IAAnD,oBAAOxB,EAAP,KAAsBmN,EAAtB,KAYA,OAVK1N,EAAgB+M,SACjB7K,EAAQM,KAAK,aAUb,gBAAC,GAAD,WACI,eAAC,GAAD,CAAekK,OAAK,EAACC,OAAK,IAE1B,gBAACvK,GAAA,EAAD,CAAMC,SAVQ,SAACC,GT4BM,IAACyB,ES3B1BzB,EAAEC,iBACFe,GT0B0BS,ES1BCxD,ET0BQ,SAAC+C,GACxCA,EAAS,CACLlF,KAAM7B,GACNgC,QAASwF,IAGb7C,aAAa+I,QAAQ,gBAAiB7I,KAAK8I,UAAUnG,OS/BjD7B,EAAQM,KAAK,gBAOT,UACI,gBAACJ,GAAA,EAAKwH,MAAN,WACI,eAACxH,GAAA,EAAK0H,MAAN,CAAYxD,GAAG,SAAS3D,UAAU,OAAlC,2BACA,gBAAC+C,GAAA,EAAD,WACI,eAACtD,GAAA,EAAKuL,MAAN,CACIvP,KAAK,QACLwP,MAAM,wBACNvK,GAAG,SACHR,KAAK,gBACLI,MAAM,SACNN,UAAU,OACVI,SAAU,SAACT,GAAD,OAAOoL,EAAiBpL,EAAEU,OAAOC,UAI/C,eAACb,GAAA,EAAKuL,MAAN,CACIvP,KAAK,QACLwP,MAAM,mBACNvK,GAAG,OACHR,KAAK,gBACLI,MAAM,OACNN,UAAU,OACVI,SAAU,SAACT,GAAD,OAAOoL,EAAiBpL,EAAEU,OAAOC,gBAOvD,eAACC,GAAA,EAAD,CAAQ9E,KAAK,SAAS+E,QAAQ,UAA9B,6BC8GD0K,OAhKf,YAAwC,IAAZ3L,EAAW,EAAXA,QAElB1B,EAAc4D,aAAY,SAAAlG,GAAK,OAAIA,EAAMsC,eACvCC,EAA0BD,EAA1BC,MAAOjC,EAAmBgC,EAAnBhC,MAAOK,EAAY2B,EAAZ3B,QAEhByE,EAAWe,cAEXvE,EAAOsE,aAAY,SAAAlG,GAAK,OAAIA,EAAM4B,QAoCxC,OAlCAA,EAAKgO,WAAahO,EAAKC,UAAUyK,QAAO,SAACC,EAAKxK,GAAN,OAAewK,EAAMxK,EAAKyG,MAAQzG,EAAKoI,MAAK,GAAGqC,QAAQ,GAC/F5K,EAAKiO,eAAiBjO,EAAKgO,WAAa,IAAM,EAAI,IAAIpD,QAAQ,GAC9D5K,EAAKkO,SAAW5D,OAAQ,EAAKtK,EAAKgO,YAAYpD,QAAQ,GAEtD5K,EAAKsM,YAAchC,OAAOtK,EAAKgO,YAAc1D,OAAOtK,EAAKiO,eAAiB3D,OAAOtK,EAAKkO,WAAWtD,QAAQ,GAGpG5K,EAAKS,eACN2B,EAAQM,KAAK,YAGjBsF,qBAAU,WACFjJ,GAAkC,SAAvBiB,EAAKS,gBAChB2B,EAAQM,KAAR,YACAc,EAAS,CAAElF,KAAMxB,MAEjBiC,GAAiC,WAAvBiB,EAAKS,gBACf2B,EAAQM,KAAR,iBAAuB/B,EAAM4C,KAC7BC,EAAS,CAAElF,KAAMxB,QAEtB,CAACiC,EAASqD,EAASoB,IAelB,iCACI,eAAC,GAAD,CAAeoJ,OAAK,EAACC,OAAK,EAACC,OAAK,IAChC,gBAACnH,GAAA,EAAD,WACI,eAACC,GAAA,EAAD,CAAKsC,GAAI,EAAT,SACI,gBAACiB,GAAA,EAAD,CAAW9F,QAAQ,QAAnB,UACI,gBAAC8F,GAAA,EAAU9D,KAAX,WACI,2CAEA,+BACI,iDACCrF,EAAKE,gBAAgB+M,QAF1B,MAEsCjN,EAAKE,gBAAgBiN,KACtD,KACAnN,EAAKE,gBAAgBmN,WAJ1B,IAKK,KACArN,EAAKE,gBAAgBqN,cAI9B,gBAACpE,GAAA,EAAU9D,KAAX,WACI,iDACA,+BACI,+CACCrF,EAAKS,oBAId,gBAAC0I,GAAA,EAAU9D,KAAX,WACI,8CAC2B,IAA1BrF,EAAKC,UAAUuJ,OAAe,eAAC,GAAD,CAASnG,QAAQ,OAAjB,gCAGvB,eAAC8F,GAAA,EAAD,CAAW9F,QAAQ,QAAnB,SACKrD,EAAKC,UAAUM,KAAI,SAACJ,EAAMgO,GAAP,OAChB,eAAChF,GAAA,EAAU9D,KAAX,UACI,gBAACM,GAAA,EAAD,WACI,eAACC,GAAA,EAAD,CAAKsC,GAAI,EAAT,SACI,eAACc,GAAA,EAAD,CAAO5C,IAAKjG,EAAKkG,MAAO4C,IAAK9I,EAAK4C,KAAMmG,OAAK,EAACuB,SAAO,MAGzD,eAAC7E,GAAA,EAAD,UACI,eAAC,QAAD,CAAMf,GAAE,mBAAc1E,EAAKV,SAA3B,SAAuCU,EAAK4C,SAGhD,gBAAC6C,GAAA,EAAD,CAAKsC,GAAI,EAAT,UACK/H,EAAKoI,IADV,QACoBpI,EAAKyG,MADzB,SACsCzG,EAAKoI,IAAMpI,EAAKyG,OAAOgE,QAAQ,UAXxDuD,gBAwBjD,eAACvI,GAAA,EAAD,CAAKsC,GAAI,EAAT,SACI,eAAChC,GAAA,EAAD,UACI,gBAACiD,GAAA,EAAD,CAAW9F,QAAQ,QAAnB,UACI,eAAC8F,GAAA,EAAU9D,KAAX,UACI,kDAGJ,eAAC8D,GAAA,EAAU9D,KAAX,UACI,gBAACM,GAAA,EAAD,WACI,eAACC,GAAA,EAAD,qBACA,gBAACA,GAAA,EAAD,gBAAQ5F,EAAKgO,mBAIrB,eAAC7E,GAAA,EAAU9D,KAAX,UACI,gBAACM,GAAA,EAAD,WACI,eAACC,GAAA,EAAD,wBACA,gBAACA,GAAA,EAAD,gBAAQ5F,EAAKiO,sBAIrB,eAAC9E,GAAA,EAAU9D,KAAX,UACI,gBAACM,GAAA,EAAD,WACI,eAACC,GAAA,EAAD,mBACA,gBAACA,GAAA,EAAD,gBAAQ5F,EAAKkO,iBAIrB,eAAC/E,GAAA,EAAU9D,KAAX,UACI,gBAACM,GAAA,EAAD,WACI,eAACC,GAAA,EAAD,qBACA,gBAACA,GAAA,EAAD,gBAAQ5F,EAAKsM,mBAKrB,eAACnD,GAAA,EAAU9D,KAAX,UACK3G,GAAS,eAAC,GAAD,CAAS2E,QAAQ,SAAjB,SAA2B3E,MAGzC,eAACyK,GAAA,EAAU9D,KAAX,UACI,eAACjC,GAAA,EAAD,CACI9E,KAAK,SACLuE,UAAU,YACV0G,SAA6B,IAAnBvJ,EAAKC,UACfqF,QAnHb,WACf9B,ELRmB,SAAC7C,GAAD,gDAAW,WAAO6C,EAAUC,GAAjB,wBAAAC,EAAA,sEAE9BF,EAAS,CACLlF,KAAM3B,KAHoB,EAQ1B8G,IADajF,EAPa,EAO1BL,UAAaK,SAGXmF,EAAS,CACXC,QAAS,CACL,eAAgB,mBAChBC,cAAc,UAAD,OAAYrF,EAASsF,SAbZ,SAiBPC,KAAM8F,KAAN,eAEnBlJ,EACAgD,GApB0B,gBAiBtBM,EAjBsB,EAiBtBA,KAMRT,EAAS,CACLlF,KAAM1B,GACN6B,QAASwF,IAGbT,EAAS,CACLlF,KAAM5B,GACN+B,QAASwF,IAGb7C,aAAamE,WAAW,aAjCM,kDAqC9B/B,EAAS,CACLlF,KAAMzB,GACN4B,QAAS,KAAMyF,UAAY,KAAMA,SAASD,KAAKE,OACzC,KAAMD,SAASD,KAAKE,OACpB,KAAMC,UAzCc,0DAAX,wDKQVgK,CAAY,CACjBvN,WAAYb,EAAKC,UACjBC,gBAAiBF,EAAKE,gBACtBO,cAAeT,EAAKS,cACpBuN,WAAYhO,EAAKgO,WACjBC,cAAejO,EAAKiO,cACpBC,SAAUlO,EAAKkO,SACf5B,WAAYtM,EAAKsM,eAuGG,yC,SCqFjB+B,OAlOf,YAA0C,IAAnB/F,EAAkB,EAAlBA,MAAOlG,EAAW,EAAXA,QACpBkM,EAAUhG,EAAMS,OAAOxF,GACvBC,EAAWe,cAGjB,EAAgCtC,oBAAS,GAAzC,oBAAOsM,EAAP,KAAiBC,EAAjB,KAEM5N,EAAe0D,aAAY,SAAAlG,GAAK,OAAIA,EAAMwC,gBACxCD,EAA0BC,EAA1BD,MAAOjC,EAAmBkC,EAAnBlC,MAAOH,EAAYqC,EAAZrC,QAEhBuC,EAAWwD,aAAY,SAAAlG,GAAK,OAAIA,EAAM0C,YAC3B2N,EAAoC3N,EAA7CvC,QAA8BmQ,EAAe5N,EAAxB/B,QAEvBmC,EAAeoD,aAAY,SAAAlG,GAAK,OAAIA,EAAM8C,gBAC/ByN,EAA4CzN,EAArD3C,QAAkCqQ,EAAmB1N,EAA5BnC,QAGzBP,EADU8F,aAAY,SAAAlG,GAAK,OAAIA,EAAMD,aACrCK,SAoDR,OAjDKD,GAAYG,IACbiC,EAAMqN,WAAarN,EAAME,WAAW6J,QAAO,SAACC,EAAKxK,GAAN,OAAewK,EAAMxK,EAAKyG,MAAQzG,EAAKoI,MAAK,GAAGqC,QAAQ,IAetG5C,qBAAU,WNkCiB,IAACzE,EMhCnB/E,GACD4D,EAAQM,KAAK,WAGZ/B,GAAS+N,GAAc/N,EAAM4C,KAAO+G,OAAOgE,IAAYM,GACxDpL,EAAS,CAAElF,KAAMjB,KACjBmG,EAAS,CAAElF,KAAMN,KAEjBwF,GNwBoBD,EMxBK+K,ENwBN,yCAAQ,WAAO9K,EAAUC,GAAjB,wBAAAC,EAAA,sEAE/BF,EAAS,CACLlF,KAAMvB,KAHqB,EAQ3B0G,IADajF,EAPc,EAO3BL,UAAaK,SAGXmF,EAAS,CACXC,QAAS,CACL,eAAgB,mBAChBC,cAAc,UAAD,OAAYrF,EAASsF,SAbX,SAiBRC,KAAMC,IAAN,kBACRT,EADQ,KAEnBI,GAnB2B,gBAiBvBM,EAjBuB,EAiBvBA,KAKRT,EAAS,CACLlF,KAAMtB,GACNyB,QAASwF,IAxBkB,kDA6B/BT,EAAS,CACLlF,KAAMrB,GACNwB,QAAS,KAAMyF,UAAY,KAAMA,SAASD,KAAKE,OACzC,KAAMD,SAASD,KAAKE,OACpB,KAAMC,UAjCe,0DAAR,2DMvBXzD,EAAM4L,SACTsC,OAAOC,OAGRN,GAAY,GA1BA,WACpB,IAAMO,EAASC,SAASC,cAAc,UACtCF,EAAOzQ,KAAO,kBACdyQ,EAAO3I,IAAM,2HACb2I,EAAOG,OAAQ,EACfH,EAAOI,OAAS,WACZX,GAAY,IAEhBQ,SAASI,KAAKC,YAAYN,GAgBlBO,MAKT,CAAC9L,EAAU7C,EAAO2N,EAASI,EAAYE,EAAgBxM,EAAS5D,IAe5DD,EACH,eAAC,GAAD,IACAG,EACA,eAAC,GAAD,CAAS2E,QAAQ,SAAjB,SAA2B3E,IAEnB,iCACI,0CAAYiC,EAAM4O,MAClB,gBAAC5J,GAAA,EAAD,WACI,eAACC,GAAA,EAAD,CAAKsC,GAAI,EAAT,SACI,gBAACiB,GAAA,EAAD,CAAW9F,QAAQ,QAAnB,UACI,gBAAC8F,GAAA,EAAU9D,KAAX,WACI,2CACA,+BAAG,6CAAH,IAA4B1E,EAAM9B,KAAKkE,QACvC,+BAAG,8CAAwB,oBAAGyM,KAAI,iBAAY7O,EAAM9B,KAAKkM,OAA9B,SAAwCpK,EAAM9B,KAAKkM,WAC9E,+BACI,iDACCpK,EAAMT,gBAAgB+M,QAF3B,MAEuCtM,EAAMT,gBAAgBiN,KACxD,KACAxM,EAAMT,gBAAgBmN,WAJ3B,IAKH,KACQ1M,EAAMT,gBAAgBqN,WAG1B5M,EAAM8L,YACH,gBAAC,GAAD,CAASpJ,QAAQ,UAAjB,0BAAyC1C,EAAM+L,YAAY/C,UAAU,EAAG,OAEpE,eAAC,GAAD,CAAStG,QAAQ,UAAjB,8BAIZ,gBAAC8F,GAAA,EAAU9D,KAAX,WACI,iDACA,+BACI,+CACC1E,EAAMF,iBAEVE,EAAM4L,OACH,gBAAC,GAAD,CAASlJ,QAAQ,UAAjB,qBAAoC1C,EAAM6L,OAAO7C,UAAU,EAAG,OAE1D,eAAC,GAAD,CAAStG,QAAQ,UAAjB,yBAKZ,gBAAC8F,GAAA,EAAU9D,KAAX,WACI,8CAC6B,IAA5B1E,EAAME,WAAW2I,OAAe,eAAC,GAAD,CAASnG,QAAQ,OAAjB,4BAGzB,eAAC8F,GAAA,EAAD,CAAW9F,QAAQ,QAAnB,SACK1C,EAAME,WAAWN,KAAI,SAACJ,EAAMgO,GAAP,OAClB,eAAChF,GAAA,EAAU9D,KAAX,UACI,gBAACM,GAAA,EAAD,WACI,eAACC,GAAA,EAAD,CAAKsC,GAAI,EAAT,SACI,eAACc,GAAA,EAAD,CAAO5C,IAAKjG,EAAKkG,MAAO4C,IAAK9I,EAAK4C,KAAMmG,OAAK,EAACuB,SAAO,MAGzD,eAAC7E,GAAA,EAAD,UACI,eAAC,QAAD,CAAMf,GAAE,mBAAc1E,EAAKV,SAA3B,SAAuCU,EAAK4C,SAGhD,gBAAC6C,GAAA,EAAD,CAAKsC,GAAI,EAAT,UACK/H,EAAKoI,IADV,QACoBpI,EAAKyG,MADzB,SACsCzG,EAAKoI,IAAMpI,EAAKyG,OAAOgE,QAAQ,UAXxDuD,gBAwBjD,eAACvI,GAAA,EAAD,CAAKsC,GAAI,EAAT,SACI,gBAAChC,GAAA,EAAD,WACI,gBAACiD,GAAA,EAAD,CAAW9F,QAAQ,QAAnB,UACI,eAAC8F,GAAA,EAAU9D,KAAX,UACI,kDAGJ,eAAC8D,GAAA,EAAU9D,KAAX,UACI,gBAACM,GAAA,EAAD,WACI,eAACC,GAAA,EAAD,qBACA,gBAACA,GAAA,EAAD,gBAAQjF,EAAMqN,mBAItB,eAAC7E,GAAA,EAAU9D,KAAX,UACI,gBAACM,GAAA,EAAD,WACI,eAACC,GAAA,EAAD,wBACA,gBAACA,GAAA,EAAD,gBAAQjF,EAAMsN,sBAItB,eAAC9E,GAAA,EAAU9D,KAAX,UACI,gBAACM,GAAA,EAAD,WACI,eAACC,GAAA,EAAD,mBACA,gBAACA,GAAA,EAAD,gBAAQjF,EAAMuN,iBAItB,eAAC/E,GAAA,EAAU9D,KAAX,UACI,gBAACM,GAAA,EAAD,WACI,eAACC,GAAA,EAAD,qBACA,gBAACA,GAAA,EAAD,gBAAQjF,EAAM2L,oBAKpB3L,EAAM4L,QAAkC,WAAxB5L,EAAMF,eACpB,gBAAC0I,GAAA,EAAU9D,KAAX,WACKoJ,GAAc,eAAC,GAAD,IAEbF,EAGM,eAAC,gBAAD,CACIkB,OAAQ9O,EAAM2L,WACdoD,UApItB,SAAC7D,GAC3BrI,EAASoI,GAAS0C,EAASzC,OA+Ha,eAAC,GAAD,UAUf8C,GAAkB,eAAC,GAAD,IAClBnQ,GAAYA,EAASiH,UAAa9E,EAAM8L,aACrC,eAACtD,GAAA,EAAU9D,KAAX,UACI,eAACjC,GAAA,EAAD,CACI9E,KAAK,SACLuE,UAAU,gBACVyC,QA5IjB,WACnB9B,ENwFoB,SAAC7C,GAAD,gDAAW,WAAO6C,EAAUC,GAAjB,wBAAAC,EAAA,sEAE/BF,EAAS,CACLlF,KAAMT,KAHqB,EAQ3B4F,IADajF,EAPc,EAO3BL,UAAaK,SAGXmF,EAAS,CACXC,QAAS,CACL,eAAgB,mBAChBC,cAAc,UAAD,OAAYrF,EAASsF,SAbX,SAiBRC,KAAM+H,IAAN,kBACRnL,EAAM4C,GADE,aAEnB,GACAI,GApB2B,gBAiBvBM,EAjBuB,EAiBvBA,KAMRT,EAAS,CACLlF,KAAMR,GACNW,QAASwF,IAzBkB,kDA8B/BT,EAAS,CACLlF,KAAMP,GACNU,QAAS,KAAMyF,UAAY,KAAMA,SAASD,KAAKE,OACzC,KAAMD,SAASD,KAAKE,OACpB,KAAMC,UAlCe,0DAAX,wDMxFXuL,CAAahP,KAwIU,iCASP8N,GAAc,eAAC,GAAD,IACdjQ,GAAYA,EAASiH,UAAa9E,EAAM4L,QACrC,eAACpD,GAAA,EAAU9D,KAAX,UACI,eAACjC,GAAA,EAAD,CACI9E,KAAK,SACLuE,UAAU,gBACVyC,QApJjB,WACnB9B,EAASoI,GAAS0C,EAAS,KAgJK,wCClIzBsB,OAlFf,YAAsC,IAAZxN,EAAW,EAAXA,QAEhBoB,EAAWe,cAEXvF,EAAWsF,aAAY,SAAAlG,GAAK,OAAIA,EAAMY,YACpCT,EAA0BS,EAA1BT,QAASG,EAAiBM,EAAjBN,MAAOO,EAAUD,EAAVC,MAGhBT,EADU8F,aAAY,SAAAlG,GAAK,OAAIA,EAAMD,aACrCK,SAGSqR,EADEvL,aAAY,SAAAlG,GAAK,OAAIA,EAAMc,cACtCH,QAGRiJ,qBAAU,WACFxJ,GAAYA,EAASiH,QACrBjC,EvB2La,yCAAM,WAAOA,EAAUC,GAAjB,wBAAAC,EAAA,sEAEvBF,EAAS,CACLlF,KAAMnE,IAHa,EAQnBsJ,IADajF,EAPM,EAOnBL,UAAaK,SAGXmF,EAAS,CACXC,QAAS,CACL,eAAgB,mBAChBC,cAAc,UAAD,OAAYrF,EAASsF,SAbnB,SAiBAC,KAAMC,IAAN,aAEnBL,GAnBmB,gBAiBfM,EAjBe,EAiBfA,KAKRT,EAAS,CACLlF,KAAMlE,EACNqE,QAASwF,IAxBU,kDA6BvBT,EAAS,CACLlF,KAAMjE,EACNoE,QAAS,KAAMyF,UAAY,KAAMA,SAASD,KAAKE,OACzC,KAAMD,SAASD,KAAKE,OACpB,KAAMC,UAjCO,0DAAN,yDuBzLbhC,EAAQM,KAAK,YAGlB,CAACc,EAAUpB,EAASyN,EAAerR,IAGtC,IAAMsR,EAAgB,SAACvM,GAEfsL,OAAOkB,QAAQ,+CACfvM,EvBuNc,SAACD,GAAD,gDAAQ,WAAOC,EAAUC,GAAjB,wBAAAC,EAAA,sEAE1BF,EAAS,CACLlF,KAAM/D,IAHgB,EAQtBkJ,IADajF,EAPS,EAOtBL,UAAaK,SAGXmF,EAAS,CACXC,QAAS,CACL,eAAgB,mBAChBC,cAAc,UAAD,OAAYrF,EAASsF,SAbhB,SAiBHC,KAAMiM,OAAN,2BACCzM,EADD,KAEnBI,GAnBsB,gBAiBlBM,EAjBkB,EAiBlBA,KAKRT,EAAS,CACLlF,KAAM9D,EACNiE,QAASwF,IAxBa,kDA6B1BT,EAAS,CACLlF,KAAM7D,EACNgE,QAAS,KAAMyF,UAAY,KAAMA,SAASD,KAAKE,OACzC,KAAMD,SAASD,KAAKE,OACpB,KAAMC,UAjCU,0DAAR,wDuBvNL6L,CAAW1M,KAI5B,OACI,iCACI,wCACChF,EACM,eAAC,GAAD,IACDG,EACK,eAAC,GAAD,CAAS2E,QAAQ,SAAjB,SAA2B3E,IAE1B,gBAACyN,GAAA,EAAD,CAAOC,SAAO,EAAC8D,UAAQ,EAACC,OAAK,EAAC9D,YAAU,EAACxJ,UAAU,WAAnD,UACI,iCACI,gCACI,qCACA,uCACA,wCACA,wCACA,6BAIR,iCACK5D,EAAMsB,KAAI,SAAA1B,GAAI,OACX,gCACI,8BAAKA,EAAK0E,KACV,8BAAK1E,EAAKkE,OACV,8BAAKlE,EAAKkM,QACV,8BAAKlM,EAAK4G,QACN,oBAAG5C,UAAU,eAAemD,MAAO,CAAED,MAAO,WAExC,oBAAGlD,UAAU,eAAemD,MAAO,CAAED,MAAO,WAGpD,gCACI,eAAC,iBAAD,CAAelB,GAAE,sBAAiBhG,EAAK0E,GAAtB,SAAjB,SACI,eAACH,GAAA,EAAD,CAAQC,QAAQ,QAAQR,UAAU,SAAlC,SACI,oBAAGA,UAAU,oBAIrB,eAACO,GAAA,EAAD,CAAQC,QAAQ,SAASR,UAAU,SAASyC,QAAS,kBAAMwK,EAAcjR,EAAK0E,KAA9E,SACI,oBAAGV,UAAU,wBAlBhBhE,EAAK0E,gBCkDnC6M,OApGf,YAA6C,IAAnB9H,EAAkB,EAAlBA,MAAOlG,EAAW,EAAXA,QAEvBiO,EAAS/H,EAAMS,OAAOxF,GAE5B,EAAwBtB,mBAAS,IAAjC,oBAAOc,EAAP,KAAauI,EAAb,KACA,EAA0BrJ,mBAAS,IAAnC,oBAAO8I,EAAP,KAAcC,EAAd,KACA,EAA8B/I,oBAAS,GAAvC,oBAAOwD,EAAP,KAAgB6K,EAAhB,KAEM9M,EAAWe,cAEX3F,EAAc0F,aAAY,SAAAlG,GAAK,OAAIA,EAAMQ,eACvCF,EAAyBE,EAAzBF,MAAOH,EAAkBK,EAAlBL,QAASM,EAASD,EAATC,KAElBM,EAAamF,aAAY,SAAAlG,GAAK,OAAIA,EAAMe,cAC/BoR,EAAgEpR,EAAvET,MAA6B8R,EAA0CrR,EAAnDZ,QAAiCkS,EAAkBtR,EAA3BJ,QAyBpD,OAvBAiJ,qBAAU,WAEFyI,GACAjN,EAAS,CAAElF,KAAMzD,IACjBuH,EAAQM,KAAK,oBAGR7D,EAAKkE,MAAQlE,EAAK0E,KAAO+G,OAAO+F,IAGjC/E,EAAQzM,EAAKkE,MACbiI,EAASnM,EAAKkM,OACduF,EAAWzR,EAAK4G,UAJhBjC,EAASF,GAAe+M,MAQjC,CAACxR,EAAMwR,EAAQI,EAAerO,EAASoB,IAQtC,iCACI,eAAC,QAAD,CAAMqB,GAAG,kBAAT,qBAIA,gBAAC,GAAD,WACI,4CACC2L,GAAiB,eAAC,GAAD,IACjBD,GAAe,eAAC,GAAD,CAASlN,QAAQ,SAAjB,SAA2BkN,IAE1ChS,EAAU,eAAC,GAAD,IAAaG,EAAQ,eAAC,GAAD,CAAS2E,QAAQ,SAAjB,SAA2B3E,IAEnD,gBAAC4D,GAAA,EAAD,CAAMC,SAlBJ,SAACC,GACnBA,EAAEC,iBACFe,ExBmPkB,SAAC3E,GAAD,gDAAU,WAAO2E,EAAUC,GAAjB,wBAAAC,EAAA,sEAE5BF,EAAS,CACLlF,KAAM5D,IAHkB,EAQxB+I,IADajF,EAPW,EAOxBL,UAAaK,SAGXmF,EAAS,CACXC,QAAS,CACL,eAAgB,mBAChBC,cAAc,UAAD,OAAYrF,EAASsF,SAbd,SAiBLC,KAAM+H,IAAN,2BACCjN,EAAK0E,GADN,KAEnB1E,EACA8E,GApBwB,gBAiBpBM,EAjBoB,EAiBpBA,KAMRT,EAAS,CACLlF,KAAM3D,IAGV6I,EAAS,CACLlF,KAAM1E,EACN6E,QAASwF,IA7Be,kDAkC5BT,EAAS,CACLlF,KAAM1D,EACN6D,QAAS,KAAMyF,UAAY,KAAMA,SAASD,KAAKE,OACzC,KAAMD,SAASD,KAAKE,OACpB,KAAMC,UAtCY,0DAAV,wDwBnPTsM,CAAW,CAAEnN,GAAI1E,EAAK0E,GAAIR,OAAMgI,QAAOtF,cAgBhC,UAEI,gBAACnD,GAAA,EAAKwH,MAAN,CAAYC,UAAU,OAAtB,UACI,eAACzH,GAAA,EAAK0H,MAAN,mBACA,eAAC1H,GAAA,EAAKQ,QAAN,CAEIxE,KAAK,OACL0E,YAAY,aACZG,MAAOJ,EACPE,SAAU,SAACT,GAAD,OAAO8I,EAAQ9I,EAAEU,OAAOC,aAK1C,gBAACb,GAAA,EAAKwH,MAAN,CAAYC,UAAU,QAAtB,UACI,eAACzH,GAAA,EAAK0H,MAAN,4BACA,eAAC1H,GAAA,EAAKQ,QAAN,CACIxE,KAAK,QACL0E,YAAY,cACZG,MAAO4H,EACP9H,SAAU,SAACT,GAAD,OAAOwI,EAASxI,EAAEU,OAAOC,aAK3C,eAACb,GAAA,EAAKwH,MAAN,CAAYC,UAAU,UAAtB,SACI,eAACzH,GAAA,EAAKuL,MAAN,CACIvP,KAAK,WACLwP,MAAM,WACN6C,QAASlL,EACTxC,SAAU,SAACT,GAAD,OAAO8N,EAAW9N,EAAEU,OAAOyN,cAK7C,eAACvN,GAAA,EAAD,CAAQ9E,KAAK,SAAS+E,QAAQ,UAA9B,8BC4BbuN,OAnHf,YAAgD,IAAnBxO,EAAkB,EAAlBA,QAEnBoB,GAFqC,EAAT8E,MAEjB/D,eAEXnF,EAAckF,aAAY,SAAAlG,GAAK,OAAIA,EAAMgB,eACvCb,EAA0Ca,EAA1Cb,QAASG,EAAiCU,EAAjCV,MAAOW,EAA0BD,EAA1BC,SAAUE,EAAgBH,EAAhBG,MAAOD,EAASF,EAATE,KAEnCK,EAAgB2E,aAAY,SAAAlG,GAAK,OAAIA,EAAMuB,iBAChCkR,EAA8DlR,EAAvEpB,QAA+BuS,EAAwCnR,EAA/CjB,MAA6BmR,EAAkBlQ,EAA3BZ,QAE9Ca,EAAgB0E,aAAY,SAAAlG,GAAK,OAAIA,EAAMwB,iBAChCmR,EAAuFnR,EAAhGrB,QAA+ByS,EAAiEpR,EAAxElB,MAA6BuS,EAA2CrR,EAApDb,QAAiCmS,EAAmBtR,EAA5BH,QAIpEjB,EADU8F,aAAY,SAAAlG,GAAK,OAAIA,EAAMD,aACrCK,SAEJ0D,EAAUE,EAAQO,SAASoF,OAC/BC,qBAAU,WACNxE,EAAS,CAAElF,KAAM5C,IAEZ8C,EAASiH,SACVrD,EAAQM,KAAK,UAGbuO,EACA7O,EAAQM,KAAR,yBAA+BwO,EAAe3N,GAA9C,UAEAC,EAASoE,GAAa1F,MAG3B,CAACsB,EAAUpB,EAAS5D,EAAUqR,EAAeoB,EAAeC,EAAgBhP,IAG/E,IAAM4N,EAAgB,SAACvM,GAEfsL,OAAOkB,QAAQ,kDACfvM,EjBoDiB,SAACD,GAAD,gDAAQ,WAAOC,EAAUC,GAAjB,oBAAAC,EAAA,sEAE7BF,EAAS,CACLlF,KAAMlD,IAHmB,EAQzBqI,IADajF,EAPY,EAOzBL,UAAaK,SAGXmF,EAAS,CACXC,QAAS,CACL,eAAgB,mBAChBC,cAAc,UAAD,OAAYrF,EAASsF,SAbb,SAiBNC,KAAMiM,OAAN,2BACCzM,EADD,KAEnBI,GAnByB,cAiBrBM,KAKRT,EAAS,CACLlF,KAAMjD,IAvBmB,kDA4B7BmI,EAAS,CACLlF,KAAMhD,EACNmD,QAAS,KAAMyF,UAAY,KAAMA,SAASD,KAAKE,OACzC,KAAMD,SAASD,KAAKE,OACpB,KAAMC,UAhCa,0DAAR,wDiBpDR+M,CAAc5N,KAQ/B,OACI,iCACI,gBAACoC,GAAA,EAAD,CAAK9C,UAAU,qBAAf,UACI,eAAC+C,GAAA,EAAD,UACI,6CAGJ,eAACA,GAAA,EAAD,CAAK/C,UAAU,aAAf,SACI,gBAACO,GAAA,EAAD,CAAQP,UAAU,eAAeyC,QAZpB,WACzB9B,EjBuFqB,yCAAM,WAAOA,EAAUC,GAAjB,wBAAAC,EAAA,sEAE3BF,EAAS,CACLlF,KAAM/C,IAHiB,EAQvBkI,IADajF,EAPU,EAOvBL,UAAaK,SAGXmF,EAAS,CACXC,QAAS,CACL,eAAgB,mBAChBC,cAAc,UAAD,OAAYrF,EAASsF,SAbf,SAiBJC,KAAM8F,KAAN,oBAEnB,GACAlG,GApBuB,gBAiBnBM,EAjBmB,EAiBnBA,KAKRT,EAAS,CACLlF,KAAM9C,EACNiD,QAASwF,IAxBc,kDA6B3BT,EAAS,CACLlF,KAAM7C,EACNgD,QAAS,KAAMyF,UAAY,KAAMA,SAASD,KAAKE,OACzC,KAAMD,SAASD,KAAKE,OACpB,KAAMC,UAjCW,0DAAN,0DiB5ET,UACI,oBAAGvB,UAAU,gBADjB,0BAMPgO,GAAiB,eAAC,GAAD,IACjBC,GAAe,eAAC,GAAD,CAASzN,QAAQ,SAAjB,SAA2ByN,IAG1CC,GAAiB,eAAC,GAAD,IACjBC,GAAe,eAAC,GAAD,CAAS3N,QAAQ,SAAjB,SAA2B2N,IAE1CzS,EACM,eAAC,GAAD,IACDG,EACK,eAAC,GAAD,CAAS2E,QAAQ,SAAjB,SAA2B3E,IAE1B,iCACI,gBAACyN,GAAA,EAAD,CAAOC,SAAO,EAAC8D,UAAQ,EAACC,OAAK,EAAC9D,YAAU,EAACxJ,UAAU,WAAnD,UACI,iCACI,gCACI,qCACA,uCACA,wCACA,2CACA,wCACA,6BAIR,wCACKxD,QADL,IACKA,OADL,EACKA,EAAUkB,KAAI,SAAAd,GAAO,OAClB,gCACI,8BAAKA,EAAQ8D,KACb,8BAAK9D,EAAQsD,OACb,qCAAOtD,EAAQmH,SACf,8BAAKnH,EAAQ2R,WACb,8BAAK3R,EAAQ4R,QAEb,gCACI,eAAC,iBAAD,CAAexM,GAAE,yBAAoBpF,EAAQ8D,GAA5B,SAAjB,SACI,eAACH,GAAA,EAAD,CAAQC,QAAQ,QAAQR,UAAU,SAAlC,SACI,oBAAGA,UAAU,oBAIrB,eAACO,GAAA,EAAD,CAAQC,QAAQ,SAASR,UAAU,SAASyC,QAAS,kBAAMwK,EAAcrQ,EAAQ8D,KAAjF,SACI,oBAAGV,UAAU,wBAfhBpD,EAAQ8D,YAsB7B,eAAC,GAAD,CAAUhE,MAAOA,EAAOD,KAAMA,EAAMmG,SAAS,WC2G1D6L,OArNf,YAAgD,IAAnBhJ,EAAkB,EAAlBA,MAAOlG,EAAW,EAAXA,QAE1BwH,EAAYtB,EAAMS,OAAOxF,GAE/B,EAAwBtB,mBAAS,IAAjC,oBAAOc,EAAP,KAAauI,EAAb,KACA,EAA0BrJ,mBAAS,GAAnC,oBAAO2E,EAAP,KAAc2K,EAAd,KACA,EAA0BtP,mBAAS,IAAnC,oBAAOoE,EAAP,KAAcmL,EAAd,KACA,EAA0BvP,mBAAS,IAAnC,oBAAOoP,EAAP,KAAcI,EAAd,KACA,EAAgCxP,mBAAS,IAAzC,oBAAOmP,EAAP,KAAiBM,EAAjB,KACA,EAAwCzP,mBAAS,GAAjD,oBAAOoH,EAAP,KAAqBsI,EAArB,KACA,EAAsC1P,mBAAS,IAA/C,oBAAOmH,EAAP,KAAoBwI,EAApB,KACA,EAAkC3P,oBAAS,GAA3C,oBAAO4P,EAAP,KAAkBC,EAAlB,KAEMtO,EAAWe,cAEX/E,EAAiB8E,aAAY,SAAAlG,GAAK,OAAIA,EAAMoB,kBAC1Cd,EAA4Bc,EAA5Bd,MAAOH,EAAqBiB,EAArBjB,QAASkB,EAAYD,EAAZC,QAElBI,EAAgByE,aAAY,SAAAlG,GAAK,OAAIA,EAAMyB,iBAClC0Q,EAAgE1Q,EAAvEnB,MAA6B8R,EAA0C3Q,EAAnDtB,QAAiCkS,EAAkB5Q,EAA3Bd,QAGpDiJ,qBAAU,WAEFyI,GACAjN,EAAS,CAAElF,KAAMxC,IACjBsG,EAAQM,KAAK,uBAERjD,EAAQsD,MAAQtD,EAAQ8D,KAAO+G,OAAOV,IAGvC0B,EAAQ7L,EAAQsD,MAChBwO,EAAS9R,EAAQmH,OACjB4K,EAAS/R,EAAQ4G,OACjBoL,EAAShS,EAAQ4R,OACjBK,EAAYjS,EAAQ2R,UACpBO,EAAgBlS,EAAQ4J,cACxBuI,EAAenS,EAAQ2J,cARvB5F,EAASqE,GAAmB+B,MAerC,CAACpG,EAAU/D,EAASmK,EAAWxH,EAASqO,IAE3C,IAcMsB,EAAiB,yCAAG,WAAOvP,GAAP,wBAAAkB,EAAA,6DAChBsO,EAAOxP,EAAEU,OAAO+O,MAAM,IACtBC,EAAW,IAAIC,UAEZC,OAAO,QAASJ,GACzBE,EAASE,OAAO,aAAcxI,GAE9BkI,GAAa,GAPS,SAUZnO,EAAS,CACXC,QAAS,CACL,eAAgB,wBAZN,SAgBKG,KAAM8F,KAAK,oBAAqBqI,EAAUvO,GAhB/C,gBAgBVM,EAhBU,EAgBVA,KAGRuN,EAASvN,GACT6N,GAAa,GApBK,kDAuBlBA,GAAa,GAvBK,0DAAH,sDA2BvB,OACI,iCACI,eAAC,QAAD,CAAMjN,GAAG,qBAAT,qBAIA,gBAAC,GAAD,WACI,+CACC2L,GAAiB,eAAC,GAAD,IACjBD,GAAe,eAAC,GAAD,CAASlN,QAAQ,SAAjB,SAA2BkN,IAE1ChS,EAAU,eAAC,GAAD,IAAaG,EAAQ,eAAC,GAAD,CAAS2E,QAAQ,SAAjB,SAA2B3E,IAEnD,gBAAC4D,GAAA,EAAD,CAAMC,SAtDJ,SAACC,GACnBA,EAAEC,iBACFe,ElBuHqB,SAAC/D,GAAD,gDAAa,WAAO+D,EAAUC,GAAjB,wBAAAC,EAAA,sEAElCF,EAAS,CACLlF,KAAM3C,IAHwB,EAQ9B8H,IADajF,EAPiB,EAO9BL,UAAaK,SAGXmF,EAAS,CACXC,QAAS,CACL,eAAgB,mBAChBC,cAAc,UAAD,OAAYrF,EAASsF,SAbR,SAiBXC,KAAM+H,IAAN,2BACCrM,EAAQ8D,GADT,KAEnB9D,EACAkE,GApB8B,gBAiB1BM,EAjB0B,EAiB1BA,KAKRT,EAAS,CACLlF,KAAM1C,EACN6C,QAASwF,IAIbT,EAAS,CACLlF,KAAMpD,EACNuD,QAASwF,IA9BqB,kDAmClCT,EAAS,CACLlF,KAAMzC,EACN4C,QAAS,KAAMyF,UAAY,KAAMA,SAASD,KAAKE,OACzC,KAAMD,SAASD,KAAKE,OACpB,KAAMC,UAvCkB,0DAAb,wDkBvHZiO,CAAc,CACnB9O,GAAIqG,EACJ7G,OACA6D,QACAP,QACAgL,QACAD,WACA/H,eACAD,kBA4CY,UAEI,gBAAC9G,GAAA,EAAKwH,MAAN,CAAYC,UAAU,OAAtB,UACI,eAACzH,GAAA,EAAK0H,MAAN,mBACA,eAAC1H,GAAA,EAAKQ,QAAN,CAEIxE,KAAK,OACL0E,YAAY,aACZG,MAAOJ,EACPE,SAAU,SAACT,GAAD,OAAO8I,EAAQ9I,EAAEU,OAAOC,aAK1C,gBAACb,GAAA,EAAKwH,MAAN,CAAYC,UAAU,QAAtB,UACI,eAACzH,GAAA,EAAK0H,MAAN,oBACA,eAAC1H,GAAA,EAAKQ,QAAN,CAEIxE,KAAK,SACL0E,YAAY,cACZG,MAAOyD,EACP3D,SAAU,SAACT,GAAD,OAAO+O,EAAS/O,EAAEU,OAAOC,aAM3C,gBAACb,GAAA,EAAKwH,MAAN,CAAYC,UAAU,QAAtB,UACI,eAACzH,GAAA,EAAK0H,MAAN,oBACA,eAAC1H,GAAA,EAAKQ,QAAN,CAEIxE,KAAK,OACL0E,YAAY,cACZG,MAAOkD,EACPpD,SAAU,SAACT,GAAD,OAAOgP,EAAShP,EAAEU,OAAOC,UAIvC,eAACb,GAAA,EAAKgQ,KAAN,CACI/O,GAAG,aACHuK,MAAM,cACNyE,QAAM,EACNtP,SAAU8O,IAIbF,GAAa,eAAC,GAAD,OAKlB,gBAACvP,GAAA,EAAKwH,MAAN,CAAYC,UAAU,QAAtB,UACI,eAACzH,GAAA,EAAK0H,MAAN,oBACA,eAAC1H,GAAA,EAAKQ,QAAN,CAEIxE,KAAK,OACL0E,YAAY,cACZG,MAAOkO,EACPpO,SAAU,SAACT,GAAD,OAAOiP,EAASjP,EAAEU,OAAOC,aAK3C,gBAACb,GAAA,EAAKwH,MAAN,CAAYC,UAAU,eAAtB,UACI,eAACzH,GAAA,EAAK0H,MAAN,oBACA,eAAC1H,GAAA,EAAKQ,QAAN,CAEIxE,KAAK,SACL0E,YAAY,cACZG,MAAOkG,EACPpG,SAAU,SAACT,GAAD,OAAOmP,EAAgBnP,EAAEU,OAAOC,aAKlD,gBAACb,GAAA,EAAKwH,MAAN,CAAYC,UAAU,WAAtB,UACI,eAACzH,GAAA,EAAK0H,MAAN,uBACA,eAAC1H,GAAA,EAAKQ,QAAN,CAEIxE,KAAK,OACL0E,YAAY,iBACZG,MAAOiO,EACPnO,SAAU,SAACT,GAAD,OAAOkP,EAAYlP,EAAEU,OAAOC,aAK9C,gBAACb,GAAA,EAAKwH,MAAN,CAAYC,UAAU,cAAtB,UACI,eAACzH,GAAA,EAAK0H,MAAN,0BACA,eAAC1H,GAAA,EAAKQ,QAAN,CAEIxE,KAAK,OACL0E,YAAY,oBACZG,MAAOiG,EACPnG,SAAU,SAACT,GAAD,OAAOoP,EAAepP,EAAEU,OAAOC,aAMjD,eAACC,GAAA,EAAD,CAAQ9E,KAAK,SAAS+E,QAAQ,UAA9B,8BCzHbmP,OAnFf,YAAuC,IAAZpQ,EAAW,EAAXA,QAEjBoB,EAAWe,cAEXtD,EAAYqD,aAAY,SAAAlG,GAAK,OAAIA,EAAM6C,aACrC1C,EAA2B0C,EAA3B1C,QAASG,EAAkBuC,EAAlBvC,MAAOsC,EAAWC,EAAXD,OAGhBxC,EADU8F,aAAY,SAAAlG,GAAK,OAAIA,EAAMD,aACrCK,SAcR,OAVAwJ,qBAAU,WACFxJ,GAAYA,EAASiH,QACrBjC,EX0Nc,yCAAM,WAAOA,EAAUC,GAAjB,wBAAAC,EAAA,sEAExBF,EAAS,CACLlF,KAAMZ,KAHc,EAQpB+F,IADajF,EAPO,EAOpBL,UAAaK,SAGXmF,EAAS,CACXC,QAAS,CACL,eAAgB,mBAChBC,cAAc,UAAD,OAAYrF,EAASsF,SAblB,SAiBDC,KAAMC,IAAN,WAEnBL,GAnBoB,gBAiBhBM,EAjBgB,EAiBhBA,KAKRT,EAAS,CACLlF,KAAMX,GACNc,QAASwF,IAxBW,kDA6BxBT,EAAS,CACLlF,KAAMV,GACNa,QAAS,KAAMyF,UAAY,KAAMA,SAASD,KAAKE,OACzC,KAAMD,SAASD,KAAKE,OACpB,KAAMC,UAjCQ,0DAAN,yDWxNdhC,EAAQM,KAAK,YAGlB,CAACc,EAAUpB,EAAS5D,IAInB,iCACI,yCACCD,EACM,eAAC,GAAD,IACDG,EACK,eAAC,GAAD,CAAS2E,QAAQ,SAAjB,SAA2B3E,IAE1B,gBAACyN,GAAA,EAAD,CAAOC,SAAO,EAAC8D,UAAQ,EAACC,OAAK,EAAC9D,YAAU,EAACxJ,UAAU,WAAnD,UACI,iCACI,gCACI,qCACA,uCACA,uCACA,wCACA,uCACA,4CACA,6BAIR,iCACK7B,EAAOT,KAAI,SAAAI,GAAK,OACb,gCACI,8BAAKA,EAAM4C,KACX,8BAAK5C,EAAM9B,MAAQ8B,EAAM9B,KAAKkE,OAC9B,8BAAKpC,EAAM+I,UAAUC,UAAU,EAAG,MAClC,oCAAMhJ,EAAM2L,cAEZ,8BAAK3L,EAAM4L,OACP5L,EAAM6L,OAAO7C,UAAU,EAAG,IAEtB,oBAAG9G,UAAU,eAAemD,MAAO,CAAED,MAAO,WAIpD,8BAAKpF,EAAM8L,YACP9L,EAAM+L,YAAY/C,UAAU,EAAG,IAE3B,oBAAG9G,UAAU,eAAemD,MAAO,CAAED,MAAO,WAIpD,8BACI,eAAC,iBAAD,CAAelB,GAAE,iBAAYlE,EAAM4C,IAAnC,SACI,eAACH,GAAA,EAAD,CAAQC,QAAQ,QAAQR,UAAU,SAAlC,2BAtBHlC,EAAM4C,gBCDpCkP,OA/Bf,WACE,OACE,gBAAC,iBAAD,WACE,eAAC,GAAD,IACA,uBAAM5P,UAAU,OAAhB,SACE,gBAAC+B,GAAA,EAAD,WACE,eAAC,KAAD,CAAO8N,KAAK,IAAIC,UAAW7K,GAAY8K,OAAK,IAC5C,eAAC,KAAD,CAAOF,KAAK,SAASC,UAAW7H,KAChC,eAAC,KAAD,CAAO4H,KAAK,YAAYC,UAAWtH,KACnC,eAAC,KAAD,CAAOqH,KAAK,WAAWC,UAAW5G,KAClC,eAAC,KAAD,CAAO2G,KAAK,YAAYC,UAAW3F,KACnC,eAAC,KAAD,CAAO0F,KAAK,cAAcC,UAAW5E,KACrC,eAAC,KAAD,CAAO2E,KAAK,aAAaC,UAAWtE,KACpC,eAAC,KAAD,CAAOqE,KAAK,WAAWC,UAAWhF,KAClC,eAAC,KAAD,CAAO+E,KAAK,eAAeC,UAAWtK,KACtC,eAAC,KAAD,CAAOqK,KAAK,aAAaC,UAAWtI,KAEpC,eAAC,KAAD,CAAOqI,KAAK,kBAAkBC,UAAW/C,KACzC,eAAC,KAAD,CAAO8C,KAAK,uBAAuBC,UAAWvC,KAE9C,eAAC,KAAD,CAAOsC,KAAK,qBAAqBC,UAAW/B,KAC5C,eAAC,KAAD,CAAO8B,KAAK,0BAA0BC,UAAWrB,KAEjD,eAAC,KAAD,CAAOoB,KAAK,mBAAmBC,UAAWH,UAG9C,eAAC,GAAD,QCnCSK,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCMdQ,IAASC,OACP,eAAC,IAAD,CAAU3R,MAAOA,GAAjB,SACE,eAAC,GAAD,MAEFoN,SAASwE,eAAe,SAM1BX,M","file":"static/js/main.05be75cc.chunk.js","sourcesContent":["export const USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST'\r\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS'\r\nexport const USER_LOGIN_FAIL = 'USER_LOGIN_FAIL'\r\n\r\nexport const USER_LOGOUT = 'USER_LOGOUT'\r\n\r\nexport const USER_REGISTER_REQUEST = 'USER_REGISTER_REQUEST'\r\nexport const USER_REGISTER_SUCCESS = 'USER_REGISTER_SUCCESS'\r\nexport const USER_REGISTER_FAIL = 'USER_REGISTER_FAIL'\r\n\r\nexport const USER_DETAILS_REQUEST = 'USER_DETAILS_REQUEST'\r\nexport const USER_DETAILS_SUCCESS = 'USER_DETAILS_SUCCESS'\r\nexport const USER_DETAILS_FAIL = 'USER_DETAILS_FAIL'\r\nexport const USER_DETAILS_RESET = 'USER_DETAILS_RESET'\r\n\r\nexport const USER_UPDATE_PROFILE_REQUEST = 'USER_UPDATE_PROFILE_REQUEST'\r\nexport const USER_UPDATE_PROFILE_SUCCESS = 'USER_UPDATE_PROFILE_SUCCESS'\r\nexport const USER_UPDATE_PROFILE_FAIL = 'USER_UPDATE_PROFILE_FAIL'\r\nexport const USER_UPDATE_PROFILE_RESET = 'USER_UPDATE_PROFILE_RESET'\r\n\r\nexport const USER_LIST_REQUEST = 'USER_LIST_REQUEST'\r\nexport const USER_LIST_SUCCESS = 'USER_LIST_SUCCESS'\r\nexport const USER_LIST_FAIL = 'USER_LIST_FAIL'\r\nexport const USER_LIST_RESET = 'USER_LIST_RESET'\r\n\r\n\r\nexport const USER_DELETE_REQUEST = 'USER_DELETE_REQUEST'\r\nexport const USER_DELETE_SUCCESS = 'USER_DELETE_SUCCESS'\r\nexport const USER_DELETE_FAIL = 'USER_DELETE_FAIL'\r\n\r\n\r\nexport const USER_UPDATE_REQUEST = 'USER_UPDATE_REQUEST'\r\nexport const USER_UPDATE_SUCCESS = 'USER_UPDATE_SUCCESS'\r\nexport const USER_UPDATE_FAIL = 'USER_UPDATE_FAIL'\r\nexport const USER_UPDATE_RESET = 'USER_UPDATE_RESET'\r\n","export const PRODUCT_LIST_REQUEST = 'PRODUCT_LIST_REQUEST'\r\nexport const PRODUCT_LIST_SUCCESS = 'PRODUCT_LIST_SUCCESS'\r\nexport const PRODUCT_LIST_FAIL = 'PRODUCT_LIST_FAIL'\r\n\r\n\r\nexport const PRODUCT_DETAILS_REQUEST = 'PRODUCT_DETAILS_REQUEST'\r\nexport const PRODUCT_DETAILS_SUCCESS = 'PRODUCT_DETAILS_SUCCESS'\r\nexport const PRODUCT_DETAILS_FAIL = 'PRODUCT_DETAILS_FAIL'\r\n\r\n\r\nexport const PRODUCT_DELETE_REQUEST = 'PRODUCT_DELETE_REQUEST'\r\nexport const PRODUCT_DELETE_SUCCESS = 'PRODUCT_DELETE_SUCCESS'\r\nexport const PRODUCT_DELETE_FAIL = 'PRODUCT_DELETE_FAIL'\r\n\r\nexport const PRODUCT_CREATE_REQUEST = 'PRODUCT_CREATE_REQUEST'\r\nexport const PRODUCT_CREATE_SUCCESS = 'PRODUCT_CREATE_SUCCESS'\r\nexport const PRODUCT_CREATE_FAIL = 'PRODUCT_CREATE_FAIL'\r\nexport const PRODUCT_CREATE_RESET = 'PRODUCT_CREATE_RESET'\r\n\r\n\r\nexport const PRODUCT_UPDATE_REQUEST = 'PRODUCT_UPDATE_REQUEST'\r\nexport const PRODUCT_UPDATE_SUCCESS = 'PRODUCT_UPDATE_SUCCESS'\r\nexport const PRODUCT_UPDATE_FAIL = 'PRODUCT_UPDATE_FAIL'\r\nexport const PRODUCT_UPDATE_RESET = 'PRODUCT_UPDATE_RESET'\r\n\r\n\r\nexport const PRODUCT_CREATE_REVIEW_REQUEST = 'PRODUCT_CREATE_REVIEW_REQUEST'\r\nexport const PRODUCT_CREATE_REVIEW_SUCCESS = 'PRODUCT_CREATE_REVIEW_SUCCESS'\r\nexport const PRODUCT_CREATE_REVIEW_FAIL = 'PRODUCT_CREATE_REVIEW_FAIL'\r\nexport const PRODUCT_CREATE_REVIEW_RESET = 'PRODUCT_CREATE_REVIEW_RESET'\r\n\r\nexport const PRODUCT_TOP_REQUEST = 'PRODUCT_TOP_REQUEST'\r\nexport const PRODUCT_TOP_SUCCESS = 'PRODUCT_TOP_SUCCESS'\r\nexport const PRODUCT_TOP_FAIL = 'PRODUCT_TOP_FAIL'\r\n","export const CART_ADD_ITEM = 'CART_ADD_ITEM'\r\nexport const CART_REMOVE_ITEM = 'CART_REMOVE_ITEM'\r\n\r\nexport const CART_SAVE_SHIPPING_ADDRESS = 'CART_SAVE_SHIPPING_ADDRESS'\r\n\r\nexport const CART_SAVE_PAYMENT_METHOD = 'CART_SAVE_PAYMENT_METHOD'\r\n\r\nexport const CART_CLEAR_ITEMS = 'CART_CLEAR_ITEMS'","export const ORDER_CREATE_REQUEST = 'ORDER_CREATE_REQUEST'\r\nexport const ORDER_CREATE_SUCCESS = 'ORDER_CREATE_SUCCESS'\r\nexport const ORDER_CREATE_FAIL = 'ORDER_CREATE_FAIL'\r\n\r\nexport const ORDER_CREATE_RESET = 'ORDER_CREATE_RESET'\r\n\r\nexport const ORDER_DETAILS_REQUEST = 'ORDER_DETAILS_REQUEST'\r\nexport const ORDER_DETAILS_SUCCESS = 'ORDER_DETAILS_SUCCESS'\r\nexport const ORDER_DETAILS_FAIL = 'ORDER_DETAILS_FAIL'\r\n\r\nexport const ORDER_PAY_REQUEST = 'ORDER_PAY_REQUEST'\r\nexport const ORDER_PAY_SUCCESS = 'ORDER_PAY_SUCCESS'\r\nexport const ORDER_PAY_FAIL = 'ORDER_PAY_FAIL'\r\nexport const ORDER_PAY_RESET = 'ORDER_PAY_RESET'\r\n\r\nexport const ORDER_LIST_MY_REQUEST = 'ORDER_LIST_MY_REQUEST'\r\nexport const ORDER_LIST_MY_SUCCESS = 'ORDER_LIST_MY_SUCCESS'\r\nexport const ORDER_LIST_MY_FAIL = 'ORDER_LIST_MY_FAIL'\r\nexport const ORDER_LIST_MY_RESET = 'ORDER_LIST_MY_RESET'\r\n\r\n\r\nexport const ORDER_LIST_REQUEST = 'ORDER_LIST_REQUEST'\r\nexport const ORDER_LIST_SUCCESS = 'ORDER_LIST_SUCCESS'\r\nexport const ORDER_LIST_FAIL = 'ORDER_LIST_FAIL'\r\n\r\n\r\nexport const ORDER_DELIVER_REQUEST = 'ORDER_DELIVER_REQUEST'\r\nexport const ORDER_DELIVER_SUCCESS = 'ORDER_DELIVER_SUCCESS'\r\nexport const ORDER_DELIVER_FAIL = 'ORDER_DELIVER_FAIL'\r\nexport const ORDER_DELIVER_RESET = 'ORDER_DELIVER_RESET'\r\n","import { createStore, combineReducers, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport {\r\n    userLoginReducer,\r\n    userRegisterReducer,\r\n    userDetailsReducer,\r\n    userUpdateProfileReducer,\r\n    userListReducer,\r\n    userDeleteReducer,\r\n    userUpdateReducer,\r\n} from './reducers/userReducers'\r\nimport {\r\n    productListReducer,\r\n    productDetailsReducer,\r\n    productDeleteReducer,\r\n    productCreateReducer,\r\n    productUpdateReducer,\r\n    productReviewCreateReducer,\r\n    productTopRatedReducer,\r\n} from './reducers/productReducers'\r\n\r\nimport { cartReducer } from './reducers/cartReducers'\r\n\r\nimport {\r\n    orderCreateReducer,\r\n    orderDetailsReducer,\r\n    orderPayReducer,\r\n    orderListMyReducer,\r\n    orderListReducer,\r\n    orderDeliverReducer,\r\n} from './reducers/orderReducers'\r\n\r\n\r\n\r\n\r\n\r\nconst reducer = combineReducers({\r\n\r\n    userLogin: userLoginReducer,\r\n    userRegister: userRegisterReducer,\r\n    userDetails: userDetailsReducer,\r\n    userUpdateProfile: userUpdateProfileReducer,\r\n    userList: userListReducer,\r\n    userDelete: userDeleteReducer,\r\n    userUpdate: userUpdateReducer,\r\n\r\n    productList: productListReducer,\r\n    productDetails: productDetailsReducer,\r\n    productDelete: productDeleteReducer,\r\n    productCreate: productCreateReducer,\r\n    productUpdate: productUpdateReducer,\r\n    productReviewCreate: productReviewCreateReducer,\r\n    productTopRated: productTopRatedReducer,\r\n\r\n    cart: cartReducer,\r\n\r\n    orderCreate: orderCreateReducer,\r\n    orderDetails: orderDetailsReducer,\r\n    orderPay: orderPayReducer,\r\n    orderListMy: orderListMyReducer,\r\n    orderList: orderListReducer,\r\n    orderDeliver: orderDeliverReducer,\r\n\r\n})\r\n\r\n\r\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ?\r\n    JSON.parse(localStorage.getItem('cartItems')) : []\r\n\r\n\r\nconst userInfoFromStorage = localStorage.getItem('userInfo') ?\r\n    JSON.parse(localStorage.getItem('userInfo')) : null\r\n\r\n\r\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress') ?\r\n    JSON.parse(localStorage.getItem('shippingAddress')) : {}\r\n\r\n\r\nconst initialState = {\r\n    cart: {\r\n        cartItems: cartItemsFromStorage,\r\n        shippingAddress: shippingAddressFromStorage,\r\n    },\r\n    userLogin: { userInfo: userInfoFromStorage },\r\n}    \r\n\r\n\r\nconst middleware = [thunk]\r\n\r\nconst store = createStore(reducer, initialState,\r\n    composeWithDevTools(applyMiddleware(...middleware)))\r\n\r\nexport default store\r\n\r\n    \r\n","import {\r\n    USER_LOGIN_REQUEST,\r\n    USER_LOGIN_SUCCESS,\r\n    USER_LOGIN_FAIL,\r\n\r\n    USER_LOGOUT,\r\n\r\n    USER_REGISTER_REQUEST,\r\n    USER_REGISTER_SUCCESS,\r\n    USER_REGISTER_FAIL,\r\n\r\n    USER_DETAILS_REQUEST,\r\n    USER_DETAILS_SUCCESS,\r\n    USER_DETAILS_FAIL,\r\n    USER_DETAILS_RESET,\r\n\r\n    USER_UPDATE_PROFILE_REQUEST,\r\n    USER_UPDATE_PROFILE_SUCCESS,\r\n    USER_UPDATE_PROFILE_FAIL,\r\n    USER_UPDATE_PROFILE_RESET,\r\n\r\n    USER_LIST_REQUEST,\r\n    USER_LIST_SUCCESS,\r\n    USER_LIST_FAIL,\r\n    USER_LIST_RESET,\r\n\r\n    USER_DELETE_REQUEST,\r\n    USER_DELETE_SUCCESS,\r\n    USER_DELETE_FAIL,\r\n\r\n    USER_UPDATE_REQUEST,\r\n    USER_UPDATE_SUCCESS,\r\n    USER_UPDATE_FAIL,\r\n    USER_UPDATE_RESET,\r\n\r\n\r\n\r\n\r\n} from '../constants/userConstants'\r\n\r\n\r\nexport const userLoginReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_LOGIN_REQUEST:\r\n            return { loading: true }\r\n\r\n        case USER_LOGIN_SUCCESS:\r\n            return { loading: false, userInfo: action.payload }\r\n\r\n        case USER_LOGIN_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case USER_LOGOUT:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const userRegisterReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_REGISTER_REQUEST:\r\n            return { loading: true }\r\n\r\n        case USER_REGISTER_SUCCESS:\r\n            return { loading: false, userInfo: action.payload }\r\n\r\n        case USER_REGISTER_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case USER_LOGOUT:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const userDetailsReducer = (state = { user: {} }, action) => {\r\n    switch (action.type) {\r\n        case USER_DETAILS_REQUEST:\r\n            return { ...state, loading: true }\r\n\r\n        case USER_DETAILS_SUCCESS:\r\n            return { loading: false, user: action.payload }\r\n\r\n        case USER_DETAILS_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case USER_DETAILS_RESET:\r\n            return { user: {} }\r\n\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const userUpdateProfileReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_UPDATE_PROFILE_REQUEST:\r\n            return { loading: true }\r\n\r\n        case USER_UPDATE_PROFILE_SUCCESS:\r\n            return { loading: false, success: true, userInfo: action.payload }\r\n\r\n        case USER_UPDATE_PROFILE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case USER_UPDATE_PROFILE_RESET:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const userListReducer = (state = { users: [] }, action) => {\r\n    switch (action.type) {\r\n        case USER_LIST_REQUEST:\r\n            return { loading: true }\r\n\r\n        case USER_LIST_SUCCESS:\r\n            return { loading: false, users: action.payload }\r\n\r\n        case USER_LIST_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case USER_LIST_RESET:\r\n            return { users: [] }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const userDeleteReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_DELETE_REQUEST:\r\n            return { loading: true }\r\n\r\n        case USER_DELETE_SUCCESS:\r\n            return { loading: false, success: true }\r\n\r\n        case USER_DELETE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const userUpdateReducer = (state = { user: {} }, action) => {\r\n    switch (action.type) {\r\n        case USER_UPDATE_REQUEST:\r\n            return { loading: true }\r\n\r\n        case USER_UPDATE_SUCCESS:\r\n            return { loading: false, success: true }\r\n\r\n        case USER_UPDATE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case USER_UPDATE_RESET:\r\n            return { user: {} }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","import {\r\n    PRODUCT_LIST_REQUEST,\r\n    PRODUCT_LIST_SUCCESS,\r\n    PRODUCT_LIST_FAIL,\r\n\r\n    PRODUCT_DETAILS_REQUEST,\r\n    PRODUCT_DETAILS_SUCCESS,\r\n    PRODUCT_DETAILS_FAIL,\r\n\r\n    PRODUCT_DELETE_REQUEST,\r\n    PRODUCT_DELETE_SUCCESS,\r\n    PRODUCT_DELETE_FAIL,\r\n\r\n    PRODUCT_CREATE_REQUEST,\r\n    PRODUCT_CREATE_SUCCESS,\r\n    PRODUCT_CREATE_FAIL,\r\n    PRODUCT_CREATE_RESET,\r\n\r\n    PRODUCT_UPDATE_REQUEST,\r\n    PRODUCT_UPDATE_SUCCESS,\r\n    PRODUCT_UPDATE_FAIL,\r\n    PRODUCT_UPDATE_RESET,\r\n\r\n    PRODUCT_CREATE_REVIEW_REQUEST,\r\n    PRODUCT_CREATE_REVIEW_SUCCESS,\r\n    PRODUCT_CREATE_REVIEW_FAIL,\r\n    PRODUCT_CREATE_REVIEW_RESET,\r\n\r\n    PRODUCT_TOP_REQUEST,\r\n    PRODUCT_TOP_SUCCESS,\r\n    PRODUCT_TOP_FAIL,\r\n} from '../constants/productConstants'\r\n\r\n\r\nexport const productListReducer = (state = { products: [] }, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_LIST_REQUEST:\r\n            return { loading: true, products: [] }\r\n\r\n        case PRODUCT_LIST_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                products: action.payload.products,\r\n                page: action.payload.page,\r\n                pages: action.payload.pages\r\n            }\r\n\r\n        case PRODUCT_LIST_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const productDetailsReducer = (state = { product: { reviews: [] } }, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_DETAILS_REQUEST:\r\n            return { loading: true, ...state }\r\n\r\n        case PRODUCT_DETAILS_SUCCESS:\r\n            return { loading: false, product: action.payload }\r\n\r\n        case PRODUCT_DETAILS_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const productDeleteReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_DELETE_REQUEST:\r\n            return { loading: true }\r\n\r\n        case PRODUCT_DELETE_SUCCESS:\r\n            return { loading: false, success: true }\r\n\r\n        case PRODUCT_DELETE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const productCreateReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_CREATE_REQUEST:\r\n            return { loading: true }\r\n\r\n        case PRODUCT_CREATE_SUCCESS:\r\n            return { loading: false, success: true, product: action.payload }\r\n\r\n        case PRODUCT_CREATE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case PRODUCT_CREATE_RESET:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const productUpdateReducer = (state = { product: {} }, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_UPDATE_REQUEST:\r\n            return { loading: true }\r\n\r\n        case PRODUCT_UPDATE_SUCCESS:\r\n            return { loading: false, success: true, product: action.payload }\r\n\r\n        case PRODUCT_UPDATE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case PRODUCT_UPDATE_RESET:\r\n            return { product: {} }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const productReviewCreateReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_CREATE_REVIEW_REQUEST:\r\n            return { loading: true }\r\n\r\n        case PRODUCT_CREATE_REVIEW_SUCCESS:\r\n            return { loading: false, success: true, }\r\n\r\n        case PRODUCT_CREATE_REVIEW_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case PRODUCT_CREATE_REVIEW_RESET:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const productTopRatedReducer = (state = { products: [] }, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_TOP_REQUEST:\r\n            return { loading: true, products: [] }\r\n\r\n        case PRODUCT_TOP_SUCCESS:\r\n            return { loading: false, products: action.payload, }\r\n\r\n        case PRODUCT_TOP_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n","import {\r\n    CART_ADD_ITEM,\r\n    CART_REMOVE_ITEM,\r\n    CART_SAVE_SHIPPING_ADDRESS,\r\n\r\n    CART_SAVE_PAYMENT_METHOD,\r\n\r\n    CART_CLEAR_ITEMS,\r\n} from '../constants/cartConstants'\r\n\r\n\r\n\r\nexport const cartReducer = (state = { cartItems: [], shippingAddress: {} }, action) => {\r\n    switch (action.type) {\r\n        case CART_ADD_ITEM:\r\n            const item = action.payload\r\n            const existItem = state.cartItems.find(x => x.product === item.product)\r\n\r\n            if (existItem) {\r\n                return {\r\n                    ...state,\r\n                    cartItems: state.cartItems.map(x =>\r\n                        x.product === existItem.product ? item : x)\r\n                }\r\n\r\n            } else {\r\n                return {\r\n                    ...state,\r\n                    cartItems: [...state.cartItems, item]\r\n                }\r\n            }\r\n\r\n        case CART_REMOVE_ITEM:\r\n            return {\r\n                ...state,\r\n                cartItems: state.cartItems.filter(x => x.product !== action.payload)\r\n            }\r\n\r\n        case CART_SAVE_SHIPPING_ADDRESS:\r\n            return {\r\n                ...state,\r\n                shippingAddress: action.payload\r\n            }\r\n\r\n        case CART_SAVE_PAYMENT_METHOD:\r\n            return {\r\n                ...state,\r\n                paymentMethod: action.payload\r\n            }\r\n\r\n        case CART_CLEAR_ITEMS:\r\n            return {\r\n                ...state,\r\n                cartItems: []\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}","import {\r\n    ORDER_CREATE_REQUEST,\r\n    ORDER_CREATE_SUCCESS,\r\n    ORDER_CREATE_FAIL,\r\n\r\n    ORDER_CREATE_RESET,\r\n\r\n    ORDER_DETAILS_REQUEST,\r\n    ORDER_DETAILS_SUCCESS,\r\n    ORDER_DETAILS_FAIL,\r\n\r\n    ORDER_PAY_REQUEST,\r\n    ORDER_PAY_SUCCESS,\r\n    ORDER_PAY_FAIL,\r\n    ORDER_PAY_RESET,\r\n\r\n    ORDER_LIST_MY_REQUEST,\r\n    ORDER_LIST_MY_SUCCESS,\r\n    ORDER_LIST_MY_FAIL,\r\n    ORDER_LIST_MY_RESET,\r\n\r\n    ORDER_LIST_REQUEST,\r\n    ORDER_LIST_SUCCESS,\r\n    ORDER_LIST_FAIL,\r\n\r\n    ORDER_DELIVER_REQUEST,\r\n    ORDER_DELIVER_SUCCESS,\r\n    ORDER_DELIVER_FAIL,\r\n    ORDER_DELIVER_RESET,\r\n} from '../constants/orderConstants'\r\n\r\n\r\nexport const orderCreateReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case ORDER_CREATE_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n\r\n        case ORDER_CREATE_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success: true,\r\n                order: action.payload\r\n            }\r\n\r\n        case ORDER_CREATE_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n\r\n        case ORDER_CREATE_RESET:\r\n            return {}\r\n\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const orderDetailsReducer = (state = { loading: true, orderItems: [], shippingAddress: {} }, action) => {\r\n    switch (action.type) {\r\n        case ORDER_DETAILS_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n\r\n        case ORDER_DETAILS_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                order: action.payload\r\n            }\r\n\r\n        case ORDER_DETAILS_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const orderPayReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case ORDER_PAY_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n\r\n        case ORDER_PAY_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success: true\r\n            }\r\n\r\n        case ORDER_PAY_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n\r\n        case ORDER_PAY_RESET:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const orderDeliverReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case ORDER_DELIVER_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n\r\n        case ORDER_DELIVER_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success: true\r\n            }\r\n\r\n        case ORDER_DELIVER_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n\r\n        case ORDER_DELIVER_RESET:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const orderListMyReducer = (state = { orders: [] }, action) => {\r\n    switch (action.type) {\r\n        case ORDER_LIST_MY_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n\r\n        case ORDER_LIST_MY_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                orders: action.payload\r\n            }\r\n\r\n        case ORDER_LIST_MY_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n\r\n        case ORDER_LIST_MY_RESET:\r\n            return {\r\n                orders: []\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const orderListReducer = (state = { orders: [] }, action) => {\r\n    switch (action.type) {\r\n        case ORDER_LIST_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n\r\n        case ORDER_LIST_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                orders: action.payload\r\n            }\r\n\r\n        case ORDER_LIST_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import React, { useState } from 'react'\r\nimport { Button, Form } from 'react-bootstrap'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nfunction SearchBox() {\r\n    const [keyword, setKeyword] = useState('')\r\n\r\n    let history = useHistory()\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        if (keyword) {\r\n            history.push(`/?keyword=${keyword}&page=1`)\r\n        } else {\r\n            history.push(history.push(history.location.pathname))\r\n        }\r\n    }\r\n    return (\r\n        <Form onSubmit={submitHandler} className='d-sm-flex'>\r\n            <Form.Control\r\n                type='text'\r\n                name='q'\r\n                placeholder=\"Search\"\r\n                onChange={(e) => setKeyword(e.target.value)}\r\n                className='mt-2 mt-sm-0 me-sm-2'\r\n            ></Form.Control>\r\n\r\n            <Button\r\n                type='submit'\r\n                variant='outline-secondary'\r\n                className='my-1 my-sm-0'\r\n            >\r\n                Search\r\n            </Button>\r\n        </Form>\r\n    )\r\n}\r\n\r\nexport default SearchBox\r\n","import axios from 'axios'\r\nimport {\r\n    USER_LOGIN_REQUEST,\r\n    USER_LOGIN_SUCCESS,\r\n    USER_LOGIN_FAIL,\r\n\r\n    USER_LOGOUT,\r\n\r\n    USER_REGISTER_REQUEST,\r\n    USER_REGISTER_SUCCESS,\r\n    USER_REGISTER_FAIL,\r\n\r\n    USER_DETAILS_REQUEST,\r\n    USER_DETAILS_SUCCESS,\r\n    USER_DETAILS_FAIL,\r\n    USER_DETAILS_RESET,\r\n\r\n    USER_UPDATE_PROFILE_REQUEST,\r\n    USER_UPDATE_PROFILE_SUCCESS,\r\n    USER_UPDATE_PROFILE_FAIL,\r\n\r\n    USER_LIST_REQUEST,\r\n    USER_LIST_SUCCESS,\r\n    USER_LIST_FAIL,\r\n    USER_LIST_RESET,\r\n\r\n    USER_DELETE_REQUEST,\r\n    USER_DELETE_SUCCESS,\r\n    USER_DELETE_FAIL,\r\n\r\n    USER_UPDATE_REQUEST,\r\n    USER_UPDATE_SUCCESS,\r\n    USER_UPDATE_FAIL,\r\n\r\n\r\n\r\n} from '../constants/userConstants'\r\n\r\nimport { ORDER_LIST_MY_RESET } from '../constants/orderConstants'\r\n\r\nexport const login = (email, password) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_LOGIN_REQUEST\r\n        })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            '/accounts/login/',\r\n            { 'email': email, 'password': password },\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_LOGIN_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const logout = () => (dispatch) => {\r\n    localStorage.removeItem('userInfo')\r\n    dispatch({ type: USER_LOGOUT })\r\n    dispatch({ type: USER_DETAILS_RESET })\r\n    dispatch({ type: ORDER_LIST_MY_RESET })\r\n    dispatch({ type: USER_LIST_RESET })\r\n}\r\n\r\n\r\nexport const register = (name, email, password) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_REGISTER_REQUEST\r\n        })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            '/accounts/register/',\r\n            { 'name': name, 'email': email, 'password': password },\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_REGISTER_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_REGISTER_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const getUserDetails = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_DETAILS_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/accounts/${id}/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/accounts/profile/update/`,\r\n            user,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const listUsers = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_LIST_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/accounts/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_LIST_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const deleteUser = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_DELETE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.delete(\r\n            `/accounts/delete/${id}/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_DELETE_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_DELETE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const updateUser = (user) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_UPDATE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/accounts/update/${user.id}/`,\r\n            user,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_UPDATE_SUCCESS,\r\n        })\r\n\r\n        dispatch({\r\n            type: USER_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_UPDATE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Navbar, Nav, Container, NavDropdown } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport SearchBox from './SearchBox'\r\nimport { logout } from '../actions/userActions'\r\n\r\nfunction Header() {\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const logoutHandler = () => {\r\n        dispatch(logout())\r\n    }\r\n    return (\r\n        <header>\r\n            <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\" collapseOnSelect>\r\n                <Container>\r\n                    <LinkContainer to='/'>\r\n                        <Navbar.Brand>Store App</Navbar.Brand>\r\n                    </LinkContainer>\r\n\r\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                        \r\n                        <Nav className=\"me-auto\">\r\n\r\n\r\n                        {userInfo ? (\r\n                                <NavDropdown title={userInfo.name} id='name'>\r\n                                    <LinkContainer to='/profile'>\r\n                                        <NavDropdown.Item>Profile</NavDropdown.Item>\r\n                                    </LinkContainer>\r\n\r\n                                    <NavDropdown.Item onClick={logoutHandler}>Logout</NavDropdown.Item>\r\n\r\n                                </NavDropdown>\r\n                            ) : (\r\n                                    <LinkContainer to='/login'>\r\n                                        <Nav.Link><i className=\"fas fa-user\"></i>Login</Nav.Link>\r\n                                    </LinkContainer>\r\n                                )}\r\n\r\n                        <LinkContainer to='/cart'>\r\n                                <Nav.Link ><i className=\"fas fa-shopping-cart\"></i>Cart</Nav.Link>\r\n                        </LinkContainer>\r\n                        \r\n\r\n\r\n                        {userInfo && userInfo.isAdmin && (\r\n                                <Nav>\r\n                                    <LinkContainer to='/admin/userlist'>\r\n                                        <Nav.Link>Users</Nav.Link>\r\n                                    </LinkContainer>\r\n\r\n                                    <LinkContainer to='/admin/productlist'>\r\n                                        <Nav.Link>Products</Nav.Link>\r\n                                    </LinkContainer>\r\n\r\n                                    <LinkContainer to='/admin/orderlist'>\r\n                                        <Nav.Link>Orders</Nav.Link>\r\n                                    </LinkContainer>\r\n\r\n                                </Nav>\r\n                            )}\r\n\r\n                            \r\n\r\n\r\n                        </Nav>\r\n                        <SearchBox />\r\n                    </Navbar.Collapse>\r\n                </Container>\r\n            </Navbar>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\n\r\nfunction Footer() {\r\n    return (\r\n        <footer>\r\n            <Container>\r\n                <Row>\r\n                    <Col className=\"text-center py-3\">Copyright &copy; Store App</Col>\r\n                </Row>\r\n            </Container>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer","import React from 'react'\r\n\r\nfunction Rating({ value, text, color }) {\r\n    return (\r\n        <div className=\"rating\">\r\n            <span>\r\n                <i style={{ color }} className={\r\n                    value >= 1\r\n                        ? 'fas fa-star'\r\n                        : value >= 0.5\r\n                            ? 'fas fa-star-half-alt'\r\n                            : 'far fa-star'\r\n                }>\r\n\r\n                </i>\r\n            </span>\r\n\r\n            <span>\r\n                <i style={{ color }} className={\r\n                    value >= 2\r\n                        ? 'fas fa-star'\r\n                        : value >= 1.5\r\n                            ? 'fas fa-star-half-alt'\r\n                            : 'far fa-star'\r\n                }>\r\n\r\n                </i>\r\n            </span>\r\n\r\n            <span>\r\n                <i style={{ color }} className={\r\n                    value >= 3\r\n                        ? 'fas fa-star'\r\n                        : value >= 2.5\r\n                            ? 'fas fa-star-half-alt'\r\n                            : 'far fa-star'\r\n                }>\r\n\r\n                </i>\r\n            </span>\r\n\r\n            <span>\r\n                <i style={{ color }} className={\r\n                    value >= 4\r\n                        ? 'fas fa-star'\r\n                        : value >= 3.5\r\n                            ? 'fas fa-star-half-alt'\r\n                            : 'far fa-star'\r\n                }>\r\n\r\n                </i>\r\n            </span>\r\n\r\n            <span>\r\n                <i style={{ color }} className={\r\n                    value >= 5\r\n                        ? 'fas fa-star'\r\n                        : value >= 4.5\r\n                            ? 'fas fa-star-half-alt'\r\n                            : 'far fa-star'\r\n                }>\r\n\r\n                </i>\r\n            </span>\r\n\r\n            <span>{text && text}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Rating\r\n","import React from 'react'\r\nimport { Card } from 'react-bootstrap'\r\nimport Rating from './Rating'\r\nimport { Link } from 'react-router-dom'\r\n\r\nfunction Product({ product }) {\r\n    return (\r\n        <Card className=\"my-3 p-3 rounded\">\r\n            <Link to={`/product/${product.id}`}>\r\n                <Card.Img src={product.image} />\r\n            </Link>\r\n\r\n            <Card.Body>\r\n                <Link to={`/product/${product.id}`}>\r\n                    <Card.Title as=\"div\">\r\n                        <strong>{product.name}</strong>\r\n                    </Card.Title>\r\n                </Link>\r\n\r\n                <Card.Text as=\"div\">\r\n                    <div className=\"my-3\">\r\n                        <Rating value={product.rating} text={`${product.numReviews} reviews`} color={'#f8e825'} />\r\n                    </div>\r\n                </Card.Text>\r\n\r\n\r\n                <Card.Text as=\"h3\">\r\n                    QR{product.price}\r\n                </Card.Text>\r\n            </Card.Body>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default Product\r\n","import React from 'react'\r\nimport { Spinner } from 'react-bootstrap'\r\n\r\nfunction Loader() {\r\n    return (\r\n        <Spinner\r\n            animation='border'\r\n            role='status'\r\n            style={{\r\n                margin: 'auto',\r\n                display: 'block'\r\n            }}\r\n        >\r\n            <span className='sr-only'>Loading...</span>\r\n        </Spinner>\r\n    )\r\n}\r\n\r\nexport default Loader\r\n","import React from 'react'\r\nimport { Alert } from 'react-bootstrap'\r\n\r\nfunction Message({ variant, children }) {\r\n    return (\r\n        <Alert variant={variant}>\r\n            {children}\r\n        </Alert>\r\n    )\r\n}\r\n\r\nexport default Message\r\n","import React from 'react'\r\nimport { Pagination } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\n\r\nfunction Paginate({ pages, page, keyword = '', isAdmin = false }) {\r\n    if (keyword) {\r\n        keyword = keyword.split('?keyword=')[1].split('&')[0]\r\n    }\r\n\r\n    return (pages > 1 && (\r\n        <Pagination>\r\n            {[...Array(pages).keys()].map((x) => (\r\n                <LinkContainer\r\n                    key={x + 1}\r\n                    to={!isAdmin ?\r\n                        `/?keyword=${keyword}&page=${x + 1}`\r\n                        : `/admin/productlist/?keyword=${keyword}&page=${x + 1}`\r\n                    }\r\n                >\r\n                    <Pagination.Item active={x + 1 === page}>{x + 1}</Pagination.Item>\r\n                </LinkContainer>\r\n            ))}\r\n        </Pagination>\r\n    )\r\n    )\r\n}\r\n\r\nexport default Paginate","import axios from 'axios'\r\nimport {\r\n    PRODUCT_LIST_REQUEST,\r\n    PRODUCT_LIST_SUCCESS,\r\n    PRODUCT_LIST_FAIL,\r\n\r\n    PRODUCT_DETAILS_REQUEST,\r\n    PRODUCT_DETAILS_SUCCESS,\r\n    PRODUCT_DETAILS_FAIL,\r\n\r\n    PRODUCT_DELETE_REQUEST,\r\n    PRODUCT_DELETE_SUCCESS,\r\n    PRODUCT_DELETE_FAIL,\r\n\r\n    PRODUCT_CREATE_REQUEST,\r\n    PRODUCT_CREATE_SUCCESS,\r\n    PRODUCT_CREATE_FAIL,\r\n\r\n    PRODUCT_UPDATE_REQUEST,\r\n    PRODUCT_UPDATE_SUCCESS,\r\n    PRODUCT_UPDATE_FAIL,\r\n\r\n    PRODUCT_CREATE_REVIEW_REQUEST,\r\n    PRODUCT_CREATE_REVIEW_SUCCESS,\r\n    PRODUCT_CREATE_REVIEW_FAIL,\r\n\r\n\r\n    PRODUCT_TOP_REQUEST,\r\n    PRODUCT_TOP_SUCCESS,\r\n    PRODUCT_TOP_FAIL,\r\n\r\n} from '../constants/productConstants'\r\n\r\n\r\nexport const listProducts = (keyword = '') => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: PRODUCT_LIST_REQUEST })\r\n\r\n        const { data } = await axios.get(`products${keyword}`)\r\n\r\n        dispatch({\r\n            type: PRODUCT_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_LIST_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const listTopProducts = () => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: PRODUCT_TOP_REQUEST })\r\n\r\n        const { data } = await axios.get(`/products/top/`)\r\n\r\n        dispatch({\r\n            type: PRODUCT_TOP_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_TOP_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const listProductDetails = (id) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: PRODUCT_DETAILS_REQUEST })\r\n\r\n        const { data } = await axios.get(`/products/${id}`)\r\n\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const deleteProduct = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_DELETE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.delete(\r\n            `/products/delete/${id}/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: PRODUCT_DELETE_SUCCESS,\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_DELETE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport const createProduct = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            `/products/create/`,\r\n            {},\r\n            config\r\n        )\r\n        dispatch({\r\n            type: PRODUCT_CREATE_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const updateProduct = (product) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_UPDATE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/products/update/${product.id}/`,\r\n            product,\r\n            config\r\n        )\r\n        dispatch({\r\n            type: PRODUCT_UPDATE_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_UPDATE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const createProductReview = (productId, review) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REVIEW_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            `/products/${productId}/reviews/`,\r\n            review,\r\n            config\r\n        )\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REVIEW_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REVIEW_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Row, Col } from 'react-bootstrap'\r\nimport Product from '../components/Product'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport Paginate from '../components/Paginate'\r\nimport { listProducts } from '../actions/productActions'\r\n\r\n\r\nfunction HomeScreen({ history }) {\r\n    const dispatch = useDispatch()\r\n    const productList = useSelector(state => state.productList)\r\n    const { error, loading, products, page, pages } = productList\r\n\r\n    let keyword = history.location.search\r\n\r\n    useEffect(() => {\r\n        dispatch(listProducts(keyword))\r\n\r\n    }, [dispatch, keyword])\r\n\r\n    return (\r\n        <div>\r\n  \r\n\r\n            <h1>Latest Products</h1>\r\n            {loading ? <Loader />\r\n                : error ? <Message variant='danger'>{error}</Message>\r\n                    :\r\n                    <div>\r\n                        <Row>\r\n                            {products?.map(product => (\r\n                                <Col key={product.id} sm={12} md={6} lg={4} xl={3}>\r\n                                    <Product product={product} />\r\n                                </Col>\r\n                            ))}\r\n                        </Row>\r\n                        <Paginate page={page} pages={pages} keyword={keyword} />\r\n                    </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HomeScreen","import React, { useState, useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { Row, Col, Image, ListGroup, Button, Card, Form } from 'react-bootstrap'\r\nimport Rating from '../components/Rating'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport { listProductDetails, createProductReview } from '../actions/productActions'\r\nimport { PRODUCT_CREATE_REVIEW_RESET } from '../constants/productConstants'\r\n\r\nfunction ProductScreen({ match, history }) {\r\n    const [qty, setQty] = useState(1)\r\n    const [rating, setRating] = useState(0)\r\n    const [comment, setComment] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const productDetails = useSelector(state => state.productDetails)\r\n    const { loading, error, product } = productDetails\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const productReviewCreate = useSelector(state => state.productReviewCreate)\r\n    const {\r\n        loading: loadingProductReview,\r\n        error: errorProductReview,\r\n        success: successProductReview,\r\n    } = productReviewCreate\r\n\r\n    useEffect(() => {\r\n        if (successProductReview) {\r\n            setRating(0)\r\n            setComment('')\r\n            dispatch({ type: PRODUCT_CREATE_REVIEW_RESET })\r\n        }\r\n\r\n        dispatch(listProductDetails(match.params.id))\r\n\r\n    }, [dispatch, match, successProductReview])\r\n\r\n    const addToCartHandler = () => {\r\n        history.push(`/cart/${match.params.id}?qty=${qty}`)\r\n    }\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(createProductReview(\r\n            match.params.id, {\r\n            rating,\r\n            comment\r\n        }\r\n        ))\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Link to='/' className='btn btn-light my-3'>Go Back</Link>\r\n            {loading ?\r\n                <Loader />\r\n                : error\r\n                    ? <Message variant='danger'>{error}</Message>\r\n                    : (\r\n                        <div>\r\n                            <Row>\r\n                                <Col md={6}>\r\n                                    <Image src={product.image} alt={product.name} fluid />\r\n                                </Col>\r\n\r\n\r\n                                <Col md={3}>\r\n                                    <ListGroup variant=\"flush\">\r\n                                        <ListGroup.Item>\r\n                                            <h3>{product.name}</h3>\r\n                                        </ListGroup.Item>\r\n\r\n                                        <ListGroup.Item>\r\n                                            <Rating value={product.rating} text={`${product.numReviews} reviews`} color={'#f8e825'} />\r\n                                        </ListGroup.Item>\r\n\r\n                                        <ListGroup.Item>\r\n                                            Price: QR{product.price}\r\n                                        </ListGroup.Item>\r\n\r\n                                        <ListGroup.Item>\r\n                                            Description: {product.description}\r\n                                        </ListGroup.Item>\r\n                                    </ListGroup>\r\n                                </Col>\r\n\r\n\r\n                                <Col md={3}>\r\n                                    <Card>\r\n                                        <ListGroup variant='flush'>\r\n                                            <ListGroup.Item>\r\n                                                <Row>\r\n                                                    <Col>Price:</Col>\r\n                                                    <Col>\r\n                                                        <strong>QR{product.price}</strong>\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </ListGroup.Item>\r\n                                            <ListGroup.Item>\r\n                                                <Row>\r\n                                                    <Col>Status:</Col>\r\n                                                    <Col>\r\n                                                        {product.countInStock > 0 ? 'In Stock' : 'Out of Stock'}\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </ListGroup.Item>\r\n\r\n                                            {product.countInStock > 0 && (\r\n                                                <ListGroup.Item>\r\n                                                    <Row>\r\n                                                        <Col>Qty</Col>\r\n                                                        <Col xs='auto' className='my-1'>\r\n                                                            <Form.Control\r\n                                                                as=\"select\"\r\n                                                                value={qty}\r\n                                                                onChange={(e) => setQty(e.target.value)}\r\n                                                            >\r\n                                                                {\r\n\r\n                                                                    [...Array(product.countInStock).keys()].map((x) => (\r\n                                                                        <option key={x + 1} value={x + 1}>\r\n                                                                            {x + 1}\r\n                                                                        </option>\r\n                                                                    ))\r\n                                                                }\r\n\r\n                                                            </Form.Control>\r\n                                                        </Col>\r\n                                                    </Row>\r\n                                                </ListGroup.Item>\r\n                                            )}\r\n\r\n\r\n                                            <ListGroup.Item>\r\n                                                <Button\r\n                                                    onClick={addToCartHandler}\r\n                                                    className='btn-block'\r\n                                                    disabled={product.countInStock === 0}\r\n                                                    type='button'>\r\n                                                    Add to Cart\r\n                                                </Button>\r\n                                            </ListGroup.Item>\r\n                                        </ListGroup>\r\n                                    </Card>\r\n                                </Col>\r\n                            </Row>\r\n\r\n                            <Row>\r\n                                <Col md={6}>\r\n                                    <h4>Reviews</h4>\r\n                                    {product.reviews.length === 0 && <Message variant='info'>No Reviews</Message>}\r\n\r\n                                    <ListGroup variant='flush'>\r\n                                        {product.reviews.map((review) => (\r\n                                            <ListGroup.Item key={review.id}>\r\n                                                <strong>{review.name}</strong>\r\n                                                <Rating value={review.rating} color='#f8e825' />\r\n                                                <p>{review.createdAt.substring(0, 10)}</p>\r\n                                                <p>{review.comment}</p>\r\n                                            </ListGroup.Item>\r\n                                        ))}\r\n\r\n                                        <ListGroup.Item>\r\n                                            <h4>Write a review</h4>\r\n\r\n                                            {loadingProductReview && <Loader />}\r\n                                            {successProductReview && <Message variant='success'>Review Submitted</Message>}\r\n                                            {errorProductReview && <Message variant='danger'>{errorProductReview}</Message>}\r\n\r\n                                            {userInfo ? (\r\n                                                <Form onSubmit={submitHandler}>\r\n                                                    <Form.Group controlId='rating'>\r\n                                                        <Form.Label>Rating</Form.Label>\r\n                                                        <Form.Control\r\n                                                            as='select'\r\n                                                            value={rating}\r\n                                                            onChange={(e) => setRating(e.target.value)}\r\n                                                        >\r\n                                                            <option value=''>Select...</option>\r\n                                                            <option value='1'>1 - Poor</option>\r\n                                                            <option value='2'>2 - Fair</option>\r\n                                                            <option value='3'>3 - Good</option>\r\n                                                            <option value='4'>4 - Very Good</option>\r\n                                                            <option value='5'>5 - Excellent</option>\r\n                                                        </Form.Control>\r\n                                                    </Form.Group>\r\n\r\n                                                    <Form.Group controlId='comment'>\r\n                                                        <Form.Label>Review</Form.Label>\r\n                                                        <Form.Control\r\n                                                            as='textarea'\r\n                                                            row='5'\r\n                                                            value={comment}\r\n                                                            onChange={(e) => setComment(e.target.value)}\r\n                                                        ></Form.Control>\r\n                                                    </Form.Group>\r\n\r\n                                                    <Button\r\n                                                        disabled={loadingProductReview}\r\n                                                        type='submit'\r\n                                                        variant='primary'\r\n                                                        className='mt-2'\r\n                                                    >\r\n                                                        Submit\r\n                                                    </Button>\r\n\r\n                                                </Form>\r\n                                            ) : (\r\n                                                    <Message variant='info'>Please <Link to='/login'>login</Link> to write a review</Message>\r\n                                                )}\r\n                                        </ListGroup.Item>\r\n                                    </ListGroup>\r\n                                </Col>\r\n                            </Row>\r\n                        </div>\r\n                    )\r\n\r\n            }\r\n\r\n\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default ProductScreen","import axios from 'axios'\r\nimport {\r\n    CART_ADD_ITEM,\r\n    CART_REMOVE_ITEM,\r\n    CART_SAVE_SHIPPING_ADDRESS,\r\n\r\n    CART_SAVE_PAYMENT_METHOD,\r\n} from '../constants/cartConstants'\r\n\r\n\r\nexport const addToCart = (id, qty) => async (dispatch, getState) => {\r\n    const { data } = await axios.get(`/products/${id}`)\r\n\r\n    dispatch({\r\n        type: CART_ADD_ITEM,\r\n        payload: {\r\n            product: data.id,\r\n            name: data.name,\r\n            image: data.image,\r\n            price: data.price,\r\n            countInStock: data.countInStock,\r\n            qty\r\n        }\r\n    })\r\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n}\r\n\r\n\r\n\r\nexport const removeFromCart = (id) => (dispatch, getState) => {\r\n    dispatch({\r\n        type: CART_REMOVE_ITEM,\r\n        payload: id,\r\n    })\r\n\r\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n}\r\n\r\n\r\nexport const saveShippingAddress = (data) => (dispatch) => {\r\n    dispatch({\r\n        type: CART_SAVE_SHIPPING_ADDRESS,\r\n        payload: data,\r\n    })\r\n\r\n    localStorage.setItem('shippingAddress', JSON.stringify(data))\r\n}\r\n\r\nexport const savePaymentMethod = (data) => (dispatch) => {\r\n    dispatch({\r\n        type: CART_SAVE_PAYMENT_METHOD,\r\n        payload: data,\r\n    })\r\n\r\n    localStorage.setItem('paymentMethod', JSON.stringify(data))\r\n}","import React, { useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Row, Col, ListGroup, Image, Form, Button, Card } from 'react-bootstrap'\r\nimport Message from '../components/Message'\r\nimport { addToCart, removeFromCart } from '../actions/cartActions'\r\n\r\nfunction CartScreen({ match, location, history }) {\r\n    const productId = match.params.id\r\n    const qty = location.search ? Number(location.search.split('=')[1]) : 1\r\n    const dispatch = useDispatch()\r\n\r\n    const cart = useSelector(state => state.cart)\r\n    const { cartItems } = cart\r\n\r\n    useEffect(() => {\r\n        if (productId) {\r\n            dispatch(addToCart(productId, qty))\r\n        }\r\n    }, [dispatch, productId, qty])\r\n\r\n\r\n    const removeFromCartHandler = (id) => {\r\n        dispatch(removeFromCart(id))\r\n    }\r\n\r\n    const checkoutHandler = () => {\r\n        history.push('/login?redirect=shipping')\r\n    }\r\n\r\n    return (\r\n        <Row>\r\n            <Col md={8}>\r\n                <h1>Shopping Cart</h1>\r\n                {cartItems.length === 0 ? (\r\n                    <Message variant='info'>\r\n                        Your cart is empty <Link to='/'>Go Back</Link>\r\n                    </Message>\r\n                ) : (\r\n                        <ListGroup variant='flush'>\r\n                            {cartItems.map(item => (\r\n                                <ListGroup.Item key={item.product}>\r\n                                    <Row>\r\n                                        <Col md={2}>\r\n                                            <Image src={item.image} alt={item.name} fluid rounded />\r\n                                        </Col>\r\n                                        <Col md={3}>\r\n                                            <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                                        </Col>\r\n\r\n                                        <Col md={2}>\r\n                                            QR{item.price}\r\n                                        </Col>\r\n\r\n                                        <Col md={3}>\r\n                                            <Form.Control\r\n                                                as=\"select\"\r\n                                                value={item.qty}\r\n                                                onChange={(e) => dispatch(addToCart(item.product, Number(e.target.value)))}\r\n                                            >\r\n                                                {\r\n\r\n                                                    [...Array(item.countInStock).keys()].map((x) => (\r\n                                                        <option key={x + 1} value={x + 1}>\r\n                                                            {x + 1}\r\n                                                        </option>\r\n                                                    ))\r\n                                                }\r\n\r\n                                            </Form.Control>\r\n                                        </Col>\r\n\r\n                                        <Col md={1}>\r\n                                            <Button\r\n                                                type='button'\r\n                                                variant='light'\r\n                                                onClick={() => removeFromCartHandler(item.product)}\r\n                                            >\r\n                                                <i className='fas fa-trash'></i>\r\n                                            </Button>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </ListGroup.Item>\r\n                            ))}\r\n                        </ListGroup>\r\n                    )}\r\n            </Col>\r\n\r\n            <Col md={4}>\r\n                <Card>\r\n                    <ListGroup variant='flush'>\r\n                        <ListGroup.Item>\r\n                            <h2>Subtotal ({cartItems.reduce((acc, item) => acc + item.qty, 0)}) items</h2>\r\n                            QR{cartItems.reduce((acc, item) => acc + item.qty * item.price, 0).toFixed(2)}\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n\r\n                    <ListGroup.Item>\r\n                        <Button\r\n                            type='button'\r\n                            className='btn-block'\r\n                            disabled={cartItems.length === 0}\r\n                            onClick={checkoutHandler}\r\n                        >\r\n                            Proceed To Checkout\r\n                        </Button>\r\n                    </ListGroup.Item>\r\n\r\n\r\n                </Card>\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default CartScreen","import React from 'react'\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\n\r\nfunction FormContainer({ children }) {\r\n    return (\r\n        <Container>\r\n            <Row className=\"justify-content-md-center\">\r\n                <Col xs={12} md={6}>\r\n                    {children}\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default FormContainer\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { login } from '../actions/userActions'\r\n\r\nfunction LoginScreen({ location, history }) {\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { error, loading, userInfo } = userLogin\r\n\r\n    useEffect(() => {\r\n        if (userInfo) {\r\n            history.push(redirect)\r\n        }\r\n    }, [history, userInfo, redirect])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(login(email, password))\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <h1>Sign In</h1>\r\n            {error && <Message variant='danger'>{error}</Message>}\r\n            {loading && <Loader />}\r\n            <Form onSubmit={submitHandler}>\r\n\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>Email Address</Form.Label>\r\n                    <Form.Control\r\n                        type='email'\r\n                        placeholder='Enter Email'\r\n                        value={email}\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n\r\n                <Form.Group controlId='password'>\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control\r\n                        type='password'\r\n                        placeholder='Enter Password'\r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button type='submit' variant='primary' className=\"my-2\">\r\n                    Sign In\r\n                </Button>\r\n            </Form>\r\n\r\n            <Row className='py-3'>\r\n                <Col>\r\n                    New User? <Link\r\n                        to={redirect ? `/register?redirect=${redirect}` : '/register'}>\r\n                        Register\r\n                        </Link>\r\n                </Col>\r\n            </Row>\r\n\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default LoginScreen","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { register } from '../actions/userActions'\r\n\r\nfunction RegisterScreen({ location, history }) {\r\n\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const [message, setMessage] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n    const userRegister = useSelector(state => state.userRegister)\r\n    const { error, loading, userInfo } = userRegister\r\n\r\n    useEffect(() => {\r\n        if (userInfo) {\r\n            history.push(redirect)\r\n        }\r\n    }, [history, userInfo, redirect])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n\r\n        if (password !== confirmPassword) {\r\n            setMessage('Passwords do not match')\r\n        } else {\r\n            dispatch(register(name, email, password))\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <h1>Sign Up</h1>\r\n            {message && <Message variant='danger'>{message}</Message>}\r\n            {error && <Message variant='danger'>{error}</Message>}\r\n            {loading && <Loader />}\r\n            <Form onSubmit={submitHandler}>\r\n\r\n                <Form.Group controlId='name'>\r\n                    <Form.Label>Name</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='name'\r\n                        placeholder='Enter Name'\r\n                        value={name}\r\n                        onChange={(e) => setName(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>Email Address</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='email'\r\n                        placeholder='Enter Email'\r\n                        value={email}\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='password'>\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='password'\r\n                        placeholder='Enter Password'\r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='passwordConfirm'>\r\n                    <Form.Label>Confirm Password</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='password'\r\n                        placeholder='Confirm Password'\r\n                        value={confirmPassword}\r\n                        onChange={(e) => setConfirmPassword(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button type='submit' variant='primary' className=\"my-2\">\r\n                    Register\r\n                </Button>\r\n\r\n            </Form>\r\n\r\n            <Row className='py-3'>\r\n                <Col>\r\n                    Have an Account? <Link\r\n                        to={redirect ? `/login?redirect=${redirect}` : '/login'}>\r\n                        Sign In\r\n                        </Link>\r\n                </Col>\r\n            </Row>\r\n        </FormContainer >\r\n    )\r\n}\r\n\r\nexport default RegisterScreen","import axios from 'axios'\r\nimport {\r\n    ORDER_CREATE_REQUEST,\r\n    ORDER_CREATE_SUCCESS,\r\n    ORDER_CREATE_FAIL,\r\n\r\n    ORDER_DETAILS_REQUEST,\r\n    ORDER_DETAILS_SUCCESS,\r\n    ORDER_DETAILS_FAIL,\r\n\r\n    ORDER_PAY_REQUEST,\r\n    ORDER_PAY_SUCCESS,\r\n    ORDER_PAY_FAIL,\r\n\r\n\r\n    ORDER_LIST_MY_REQUEST,\r\n    ORDER_LIST_MY_SUCCESS,\r\n    ORDER_LIST_MY_FAIL,\r\n \r\n\r\n    ORDER_LIST_REQUEST,\r\n    ORDER_LIST_SUCCESS,\r\n    ORDER_LIST_FAIL,\r\n\r\n    ORDER_DELIVER_REQUEST,\r\n    ORDER_DELIVER_SUCCESS,\r\n    ORDER_DELIVER_FAIL,\r\n\r\n} from '../constants/orderConstants'\r\n\r\nimport { CART_CLEAR_ITEMS } from '../constants/cartConstants'\r\n\r\n\r\nexport const createOrder = (order) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_CREATE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            `/orders/add/`,\r\n            order,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_CREATE_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        dispatch({\r\n            type: CART_CLEAR_ITEMS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.removeItem('cartItems')\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_CREATE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_DETAILS_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/orders/${id}/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const payOrder = (id, paymentResult) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_PAY_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/orders/${id}/pay/`,\r\n            paymentResult,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_PAY_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_PAY_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const deliverOrder = (order) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_DELIVER_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/orders/${order.id}/deliver/`,\r\n            {},\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_DELIVER_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_DELIVER_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const listMyOrders = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_LIST_MY_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/orders/myorders/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_LIST_MY_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_LIST_MY_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const listOrders = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_LIST_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/orders/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_LIST_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}","import React, { useState, useEffect } from 'react'\r\nimport { Form, Button, Row, Col, Table } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport { getUserDetails, updateUserProfile } from '../actions/userActions'\r\nimport { USER_UPDATE_PROFILE_RESET } from '../constants/userConstants'\r\nimport { listMyOrders } from '../actions/orderActions'\r\n\r\nfunction ProfileScreen({ history }) {\r\n\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const [message, setMessage] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userDetails = useSelector(state => state.userDetails)\r\n    const { error, loading, user } = userDetails\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const userUpdateProfile = useSelector(state => state.userUpdateProfile)\r\n    const { success } = userUpdateProfile\r\n\r\n    const orderListMy = useSelector(state => state.orderListMy)\r\n    const { loading: loadingOrders, error: errorOrders, orders } = orderListMy\r\n\r\n\r\n    useEffect(() => {\r\n        if (!userInfo) {\r\n            history.push('/login')\r\n        } else {\r\n            if (!user || !user.id || success || userInfo.id !== user.id) {\r\n                dispatch({ type: USER_UPDATE_PROFILE_RESET })\r\n                dispatch(getUserDetails('profile'))\r\n                dispatch(listMyOrders())\r\n            } else {\r\n                setName(user.name)\r\n                setEmail(user.email)\r\n            }\r\n        }\r\n    }, [dispatch, history, userInfo, user, success])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n\r\n        if (password !== confirmPassword) {\r\n            setMessage('Passwords do not match')\r\n        } else {\r\n            dispatch(updateUserProfile({\r\n                'id': user.id,\r\n                'name': name,\r\n                'email': email,\r\n                'password': password\r\n            }))\r\n            setMessage('')\r\n        }\r\n\r\n    }\r\n    return (\r\n        <Row>\r\n            <Col md={3}>\r\n                <h2>User Profile</h2>\r\n\r\n                {message && <Message variant='danger'>{message}</Message>}\r\n                {error && <Message variant='danger'>{error}</Message>}\r\n                {loading && <Loader />}\r\n                <Form onSubmit={submitHandler}>\r\n\r\n                    <Form.Group controlId='name'>\r\n                        <Form.Label>Name</Form.Label>\r\n                        <Form.Control\r\n                            required\r\n                            type='name'\r\n                            placeholder='Enter name'\r\n                            value={name}\r\n                            onChange={(e) => setName(e.target.value)}\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='email'>\r\n                        <Form.Label>Email Address</Form.Label>\r\n                        <Form.Control\r\n                            required\r\n                            type='email'\r\n                            placeholder='Enter Email'\r\n                            value={email}\r\n                            onChange={(e) => setEmail(e.target.value)}\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='password'>\r\n                        <Form.Label>Password</Form.Label>\r\n                        <Form.Control\r\n\r\n                            type='password'\r\n                            placeholder='Enter Password'\r\n                            value={password}\r\n                            onChange={(e) => setPassword(e.target.value)}\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='passwordConfirm'>\r\n                        <Form.Label>Confirm Password</Form.Label>\r\n                        <Form.Control\r\n\r\n                            type='password'\r\n                            placeholder='Confirm Password'\r\n                            value={confirmPassword}\r\n                            onChange={(e) => setConfirmPassword(e.target.value)}\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Button type='submit' variant='primary'>\r\n                        Update\r\n                </Button>\r\n\r\n                </Form>\r\n            </Col>\r\n\r\n            <Col md={9}>\r\n                <h2>My Orders</h2>\r\n                {loadingOrders ? (\r\n                    <Loader />\r\n                ) : errorOrders ? (\r\n                    <Message variant='danger'>{errorOrders}</Message>\r\n                ) : (\r\n                            <Table striped responsive className='table-sm'>\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>ID</th>\r\n                                        <th>Date</th>\r\n                                        <th>Total</th>\r\n                                        <th>Paid</th>\r\n                                        <th>Delivered</th>\r\n                                        <th></th>\r\n                                    </tr>\r\n                                </thead>\r\n\r\n                                <tbody>\r\n                                    {orders.map(order => (\r\n                                        <tr key={order.id}>\r\n                                            <td>{order.id}</td>\r\n                                            <td>{order.createdAt.substring(0, 10)}</td>\r\n                                            <td>QR{order.totalPrice}</td>\r\n                                            <td>{order.isPaid ? order.paidAt.substring(0, 10) : (\r\n                                                <i className='fas fa-times' style={{ color: 'red' }}></i>\r\n                                            )}</td>\r\n                                            <td>{order.isDelivered ? order.deliveredAt.substring(0, 10) : (\r\n                                                <i className='fas fa-times' style={{ color: 'red' }}></i>\r\n                                            )}</td>\r\n                                            <td>\r\n                                                <LinkContainer to={`/order/${order.id}`}>\r\n                                                    <Button className='btn-sm'>Details</Button>\r\n                                                </LinkContainer>\r\n                                            </td>\r\n                                        </tr>\r\n                                    ))}\r\n                                </tbody>\r\n                            </Table>\r\n                        )}\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default ProfileScreen","import React from 'react'\r\nimport { Nav } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\n\r\nfunction CheckoutSteps({ step1, step2, step3, step4 }) {\r\n\r\n    return (\r\n        <Nav className='justify-content-center mb-4'>\r\n            <Nav.Item>\r\n                {step1 ? (\r\n                    <LinkContainer to='/login'>\r\n                        <Nav.Link>Shipping</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : (\r\n                        <Nav.Link disabled>Shipping</Nav.Link>\r\n                    )}\r\n            </Nav.Item>\r\n\r\n            <Nav.Item>\r\n                {step2 ? (\r\n                    <LinkContainer to='/shipping'>\r\n                        <Nav.Link>Payment</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : (\r\n                        <Nav.Link disabled>Payment</Nav.Link>\r\n                    )}\r\n            </Nav.Item>\r\n\r\n            <Nav.Item>\r\n                {step3 ? (\r\n                    <LinkContainer to='/payment'>\r\n                        <Nav.Link>Place Order</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : (\r\n                        <Nav.Link disabled>Place Order</Nav.Link>\r\n                    )}\r\n            </Nav.Item>\r\n        </Nav>\r\n    )\r\n}\r\n\r\nexport default CheckoutSteps","import React, { useState } from 'react'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport FormContainer from '../components/FormContainer'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport { saveShippingAddress } from '../actions/cartActions'\r\n\r\nfunction ShippingScreen({ history }) {\r\n\r\n    const cart = useSelector(state => state.cart)\r\n    const { shippingAddress } = cart\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const [address, setAddress] = useState(shippingAddress.address)\r\n    const [city, setCity] = useState(shippingAddress.city)\r\n    const [postalCode, setPostalCode] = useState(shippingAddress.postalCode)\r\n    const [country, setCountry] = useState(shippingAddress.country)\r\n    const [PhoneNumber, setPhoneNumber] = useState(shippingAddress.PhoneNumber)\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(saveShippingAddress({ address, city, postalCode, country, PhoneNumber }))\r\n        history.push('/payment')\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <CheckoutSteps step1 />\r\n            <h1>Shipping</h1>\r\n            <Form onSubmit={submitHandler}>\r\n\r\n                <Form.Group controlId='address'>\r\n                    <Form.Label>Address</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='text'\r\n                        placeholder='Enter address'\r\n                        value={address ? address : ''}\r\n                        onChange={(e) => setAddress(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='city'>\r\n                    <Form.Label>City</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='text'\r\n                        placeholder='Enter city'\r\n                        value={city ? city : ''}\r\n                        onChange={(e) => setCity(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='postalCode'>\r\n                    <Form.Label>Postal Code</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='text'\r\n                        placeholder='Enter postal code'\r\n                        value={postalCode ? postalCode : ''}\r\n                        onChange={(e) => setPostalCode(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='country'>\r\n                    <Form.Label>Country</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='text'\r\n                        placeholder='Enter country'\r\n                        value={country ? country : ''}\r\n                        onChange={(e) => setCountry(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='phoneNumber'>\r\n                    <Form.Label>Phone Number</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='text'\r\n                        placeholder='Enter phone number'\r\n                        value={PhoneNumber ? PhoneNumber : ''}\r\n                        onChange={(e) => setPhoneNumber(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button type='submit' variant='primary' className='my-3'>\r\n                    Continue\r\n                </Button>\r\n            </Form>\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default ShippingScreen","import React, { useState } from 'react'\r\nimport { Form, Button, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport FormContainer from '../components/FormContainer'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport { savePaymentMethod } from '../actions/cartActions'\r\n\r\nfunction PaymentScreen({ history }) {\r\n\r\n    const cart = useSelector(state => state.cart)\r\n    const { shippingAddress } = cart\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const [paymentMethod, setPaymentMethod] = useState('')\r\n\r\n    if (!shippingAddress.address) {\r\n        history.push('/shipping')\r\n    }\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(savePaymentMethod(paymentMethod))\r\n        history.push('/placeorder')\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <CheckoutSteps step1 step2 />\r\n\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group>\r\n                    <Form.Label as='legend' className='my-4'>Select Method</Form.Label>\r\n                    <Col>\r\n                        <Form.Check\r\n                            type='radio'\r\n                            label='PayPal or Credit Card'\r\n                            id='paypal'\r\n                            name='paymentMethod'\r\n                            value=\"paypal\"\r\n                            className='my-4'\r\n                            onChange={(e) => setPaymentMethod(e.target.value)}\r\n                        >\r\n\r\n                        </Form.Check>\r\n                        <Form.Check\r\n                            type='radio'\r\n                            label='Cash on delivery'\r\n                            id='cash'\r\n                            name='paymentMethod'\r\n                            value=\"cash\"\r\n                            className='my-4'\r\n                            onChange={(e) => setPaymentMethod(e.target.value)}\r\n                        >\r\n\r\n                        </Form.Check>\r\n                    </Col>\r\n                </Form.Group>\r\n\r\n                <Button type='submit' variant='primary'>\r\n                    Continue\r\n                </Button>\r\n            </Form>\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default PaymentScreen\r\n","import React, { useEffect } from 'react'\r\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport { createOrder } from '../actions/orderActions'\r\nimport { ORDER_CREATE_RESET } from '../constants/orderConstants'\r\n\r\nfunction PlaceOrderScreen({ history }) {\r\n\r\n    const orderCreate = useSelector(state => state.orderCreate)\r\n    const { order, error, success } = orderCreate\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const cart = useSelector(state => state.cart)\r\n\r\n    cart.itemsPrice = cart.cartItems.reduce((acc, item) => acc + item.price * item.qty, 0).toFixed(2)\r\n    cart.shippingPrice = (cart.itemsPrice > 100 ? 0 : 10).toFixed(2)\r\n    cart.taxPrice = Number((0) * cart.itemsPrice).toFixed(2)\r\n\r\n    cart.totalPrice = (Number(cart.itemsPrice) + Number(cart.shippingPrice) + Number(cart.taxPrice)).toFixed(2)\r\n\r\n\r\n    if (!cart.paymentMethod) {\r\n        history.push('/payment')\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (success && cart.paymentMethod === 'cash') {\r\n            history.push(`/profile`)\r\n            dispatch({ type: ORDER_CREATE_RESET })\r\n        }\r\n        if (success&& cart.paymentMethod === 'paypal') {\r\n            history.push(`/order/${order.id}`)\r\n            dispatch({ type: ORDER_CREATE_RESET })\r\n        }\r\n    }, [success, history, dispatch])\r\n\r\n    const placeOrder = () => {\r\n        dispatch(createOrder({\r\n            orderItems: cart.cartItems,\r\n            shippingAddress: cart.shippingAddress,\r\n            paymentMethod: cart.paymentMethod,\r\n            itemsPrice: cart.itemsPrice,\r\n            shippingPrice: cart.shippingPrice,\r\n            taxPrice: cart.taxPrice,\r\n            totalPrice: cart.totalPrice,\r\n        }))\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <CheckoutSteps step1 step2 step3 />\r\n            <Row>\r\n                <Col md={8}>\r\n                    <ListGroup variant='flush'>\r\n                        <ListGroup.Item>\r\n                            <h2>Shipping</h2>\r\n\r\n                            <p>\r\n                                <strong>Shipping: </strong>\r\n                                {cart.shippingAddress.address},  {cart.shippingAddress.city}\r\n                                {'  '}\r\n                                {cart.shippingAddress.postalCode},\r\n                                {'  '}\r\n                                {cart.shippingAddress.country}\r\n                            </p>\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>Payment Method</h2>\r\n                            <p>\r\n                                <strong>Method: </strong>\r\n                                {cart.paymentMethod}\r\n                            </p>\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>Order Items</h2>\r\n                            {cart.cartItems.length === 0 ? <Message variant='info'>\r\n                                Your cart is empty\r\n                            </Message> : (\r\n                                    <ListGroup variant='flush'>\r\n                                        {cart.cartItems.map((item, index) => (\r\n                                            <ListGroup.Item key={index}>\r\n                                                <Row>\r\n                                                    <Col md={1}>\r\n                                                        <Image src={item.image} alt={item.name} fluid rounded />\r\n                                                    </Col>\r\n\r\n                                                    <Col>\r\n                                                        <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                                                    </Col>\r\n\r\n                                                    <Col md={4}>\r\n                                                        {item.qty} X QR{item.price} = QR{(item.qty * item.price).toFixed(2)}\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </ListGroup.Item>\r\n                                        ))}\r\n                                    </ListGroup>\r\n                                )}\r\n                        </ListGroup.Item>\r\n\r\n                    </ListGroup>\r\n\r\n                </Col>\r\n\r\n                <Col md={4}>\r\n                    <Card>\r\n                        <ListGroup variant='flush'>\r\n                            <ListGroup.Item>\r\n                                <h2>Order Summary</h2>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Items:</Col>\r\n                                    <Col>QR{cart.itemsPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Shipping:</Col>\r\n                                    <Col>QR{cart.shippingPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Tax:</Col>\r\n                                    <Col>QR{cart.taxPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Total:</Col>\r\n                                    <Col>QR{cart.totalPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n\r\n                            <ListGroup.Item>\r\n                                {error && <Message variant='danger'>{error}</Message>}\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Button\r\n                                    type='button'\r\n                                    className='btn-block'\r\n                                    disabled={cart.cartItems === 0}\r\n                                    onClick={placeOrder}\r\n                                >\r\n                                    Place Order\r\n                                </Button>\r\n                            </ListGroup.Item>\r\n\r\n                        </ListGroup>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PlaceOrderScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { PayPalButton } from 'react-paypal-button-v2'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { getOrderDetails, payOrder, deliverOrder } from '../actions/orderActions'\r\nimport { ORDER_PAY_RESET, ORDER_DELIVER_RESET } from '../constants/orderConstants'\r\n\r\nfunction OrderScreen({ match, history }) {\r\n    const orderId = match.params.id\r\n    const dispatch = useDispatch()\r\n\r\n\r\n    const [sdkReady, setSdkReady] = useState(false)\r\n\r\n    const orderDetails = useSelector(state => state.orderDetails)\r\n    const { order, error, loading } = orderDetails\r\n\r\n    const orderPay = useSelector(state => state.orderPay)\r\n    const { loading: loadingPay, success: successPay } = orderPay\r\n\r\n    const orderDeliver = useSelector(state => state.orderDeliver)\r\n    const { loading: loadingDeliver, success: successDeliver } = orderDeliver\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n\r\n    if (!loading && !error) {\r\n        order.itemsPrice = order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0).toFixed(2)\r\n    }\r\n\r\n\r\n    const addPayPalScript = () => {\r\n        const script = document.createElement('script')\r\n        script.type = 'text/javascript'\r\n        script.src = 'https://www.paypal.com/sdk/js?client-id=AUPTVutKOpAx_8wWnELHv7p0rMFoZSCBd5np4mV8nbqVYJoM5ePQR7GOvtZ2AIjkENhhpXvfxaV-cH7j'\r\n        script.async = true\r\n        script.onload = () => {\r\n            setSdkReady(true)\r\n        }\r\n        document.body.appendChild(script)\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n        if (!userInfo) {\r\n            history.push('/login')\r\n        }\r\n\r\n        if (!order || successPay || order.id !== Number(orderId) || successDeliver) {\r\n            dispatch({ type: ORDER_PAY_RESET })\r\n            dispatch({ type: ORDER_DELIVER_RESET })\r\n\r\n            dispatch(getOrderDetails(orderId))\r\n        } else if (!order.isPaid) {\r\n            if (!window.paypal) {\r\n                addPayPalScript()\r\n            } else {\r\n                setSdkReady(true)\r\n            }\r\n        }\r\n    }, [dispatch, order, orderId, successPay, successDeliver, history, userInfo])\r\n\r\n\r\n    const successPaymentHandler = (paymentResult) => {\r\n        dispatch(payOrder(orderId, paymentResult))\r\n    }\r\n\r\n    const deliverHandler = () => {\r\n        dispatch(deliverOrder(order))\r\n    }\r\n\r\n    const PaymentHandler = () => {\r\n        dispatch(payOrder(orderId, 1))\r\n    }\r\n\r\n    return loading ? (\r\n        <Loader />\r\n    ) : error ? (\r\n        <Message variant='danger'>{error}</Message>\r\n    ) : (\r\n                <div>\r\n                    <h1>Order: {order.Id}</h1>\r\n                    <Row>\r\n                        <Col md={8}>\r\n                            <ListGroup variant='flush'>\r\n                                <ListGroup.Item>\r\n                                    <h2>Shipping</h2>\r\n                                    <p><strong>Name: </strong> {order.user.name}</p>\r\n                                    <p><strong>Email: </strong><a href={`mailto:${order.user.email}`}>{order.user.email}</a></p>\r\n                                    <p>\r\n                                        <strong>Shipping: </strong>\r\n                                        {order.shippingAddress.address},  {order.shippingAddress.city}\r\n                                        {'  '}\r\n                                        {order.shippingAddress.postalCode},\r\n                                {'  '}\r\n                                        {order.shippingAddress.country}\r\n                                    </p>\r\n\r\n                                    {order.isDelivered ? (\r\n                                        <Message variant='success'>Delivered on {order.deliveredAt.substring(0, 10)}</Message>\r\n                                    ) : (\r\n                                            <Message variant='warning'>Not Delivered</Message>\r\n                                        )}\r\n                                </ListGroup.Item>\r\n\r\n                                <ListGroup.Item>\r\n                                    <h2>Payment Method</h2>\r\n                                    <p>\r\n                                        <strong>Method: </strong>\r\n                                        {order.paymentMethod}\r\n                                    </p>\r\n                                    {order.isPaid ? (\r\n                                        <Message variant='success'>Paid on {order.paidAt.substring(0, 10)}</Message>\r\n                                    ) : (\r\n                                            <Message variant='warning'>Not Paid</Message>\r\n                                        )}\r\n\r\n                                </ListGroup.Item>\r\n\r\n                                <ListGroup.Item>\r\n                                    <h2>Order Items</h2>\r\n                                    {order.orderItems.length === 0 ? <Message variant='info'>\r\n                                        Order is empty\r\n                            </Message> : (\r\n                                            <ListGroup variant='flush'>\r\n                                                {order.orderItems.map((item, index) => (\r\n                                                    <ListGroup.Item key={index}>\r\n                                                        <Row>\r\n                                                            <Col md={1}>\r\n                                                                <Image src={item.image} alt={item.name} fluid rounded />\r\n                                                            </Col>\r\n\r\n                                                            <Col>\r\n                                                                <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                                                            </Col>\r\n\r\n                                                            <Col md={4}>\r\n                                                                {item.qty} X QR{item.price} = QR{(item.qty * item.price).toFixed(2)}\r\n                                                            </Col>\r\n                                                        </Row>\r\n                                                    </ListGroup.Item>\r\n                                                ))}\r\n                                            </ListGroup>\r\n                                        )}\r\n                                </ListGroup.Item>\r\n\r\n                            </ListGroup>\r\n\r\n                        </Col>\r\n\r\n                        <Col md={4}>\r\n                            <Card>\r\n                                <ListGroup variant='flush'>\r\n                                    <ListGroup.Item>\r\n                                        <h2>Order Summary</h2>\r\n                                    </ListGroup.Item>\r\n\r\n                                    <ListGroup.Item>\r\n                                        <Row>\r\n                                            <Col>Items:</Col>\r\n                                            <Col>QR{order.itemsPrice}</Col>\r\n                                        </Row>\r\n                                    </ListGroup.Item>\r\n\r\n                                    <ListGroup.Item>\r\n                                        <Row>\r\n                                            <Col>Shipping:</Col>\r\n                                            <Col>QR{order.shippingPrice}</Col>\r\n                                        </Row>\r\n                                    </ListGroup.Item>\r\n\r\n                                    <ListGroup.Item>\r\n                                        <Row>\r\n                                            <Col>Tax:</Col>\r\n                                            <Col>QR{order.taxPrice}</Col>\r\n                                        </Row>\r\n                                    </ListGroup.Item>\r\n\r\n                                    <ListGroup.Item>\r\n                                        <Row>\r\n                                            <Col>Total:</Col>\r\n                                            <Col>QR{order.totalPrice}</Col>\r\n                                        </Row>\r\n                                    </ListGroup.Item>\r\n\r\n\r\n                                    {!order.isPaid && order.paymentMethod === 'paypal' && (\r\n                                        <ListGroup.Item>\r\n                                            {loadingPay && <Loader />}\r\n\r\n                                            {!sdkReady ? (\r\n                                                <Loader />\r\n                                            ) : (\r\n                                                    <PayPalButton\r\n                                                        amount={order.totalPrice}\r\n                                                        onSuccess={successPaymentHandler}\r\n                                                    />\r\n                                                )}\r\n                                        </ListGroup.Item>\r\n                                    )}\r\n                                </ListGroup>\r\n                                {loadingDeliver && <Loader />}\r\n                                {userInfo && userInfo.isAdmin  && !order.isDelivered && (\r\n                                    <ListGroup.Item>\r\n                                        <Button\r\n                                            type='button'\r\n                                            className='btn btn-block'\r\n                                            onClick={deliverHandler}\r\n                                        >\r\n                                            Mark As Delivered\r\n                                        </Button>\r\n                                    </ListGroup.Item>\r\n                                )}\r\n                                {loadingPay && <Loader />}\r\n                                {userInfo && userInfo.isAdmin  && !order.isPaid && (\r\n                                    <ListGroup.Item>\r\n                                        <Button\r\n                                            type='button'\r\n                                            className='btn btn-block'\r\n                                            onClick={PaymentHandler}\r\n                                        >\r\n                                            Mark As Paid\r\n                                        </Button>\r\n                                    </ListGroup.Item>\r\n                                )}\r\n                            </Card>\r\n                        </Col>\r\n                    </Row>\r\n                </div>\r\n            )\r\n}\r\n\r\nexport default OrderScreen\r\n","import React, { useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Table, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport { listUsers, deleteUser } from '../actions/userActions'\r\n\r\nfunction UserListScreen({ history }) {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userList = useSelector(state => state.userList)\r\n    const { loading, error, users } = userList\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const userDelete = useSelector(state => state.userDelete)\r\n    const { success: successDelete } = userDelete\r\n\r\n\r\n    useEffect(() => {\r\n        if (userInfo && userInfo.isAdmin) {\r\n            dispatch(listUsers())\r\n        } else {\r\n            history.push('/login')\r\n        }\r\n\r\n    }, [dispatch, history, successDelete, userInfo])\r\n\r\n\r\n    const deleteHandler = (id) => {\r\n\r\n        if (window.confirm('Are you sure you want to delete this user?')) {\r\n            dispatch(deleteUser(id))\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>Users</h1>\r\n            {loading\r\n                ? (<Loader />)\r\n                : error\r\n                    ? (<Message variant='danger'>{error}</Message>)\r\n                    : (\r\n                        <Table striped bordered hover responsive className='table-sm'>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>ID</th>\r\n                                    <th>NAME</th>\r\n                                    <th>EMAIL</th>\r\n                                    <th>ADMIN</th>\r\n                                    <th></th>\r\n                                </tr>\r\n                            </thead>\r\n\r\n                            <tbody>\r\n                                {users.map(user => (\r\n                                    <tr key={user.id}>\r\n                                        <td>{user.id}</td>\r\n                                        <td>{user.name}</td>\r\n                                        <td>{user.email}</td>\r\n                                        <td>{user.isAdmin ? (\r\n                                            <i className='fas fa-check' style={{ color: 'green' }}></i>\r\n                                        ) : (\r\n                                                <i className='fas fa-times' style={{ color: 'red' }}></i>\r\n                                            )}</td>\r\n\r\n                                        <td>\r\n                                            <LinkContainer to={`/admin/user/${user.id}/edit`}>\r\n                                                <Button variant='light' className='btn-sm'>\r\n                                                    <i className='fas fa-edit'></i>\r\n                                                </Button>\r\n                                            </LinkContainer>\r\n\r\n                                            <Button variant='danger' className='btn-sm' onClick={() => deleteHandler(user.id)}>\r\n                                                <i className='fas fa-trash'></i>\r\n                                            </Button>\r\n                                        </td>\r\n                                    </tr>\r\n                                ))}\r\n                            </tbody>\r\n                        </Table>\r\n                    )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserListScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { getUserDetails, updateUser } from '../actions/userActions'\r\nimport { USER_UPDATE_RESET } from '../constants/userConstants'\r\n\r\nfunction UserEditScreen({ match, history }) {\r\n\r\n    const userId = match.params.id\r\n\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [isAdmin, setIsAdmin] = useState(false)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userDetails = useSelector(state => state.userDetails)\r\n    const { error, loading, user } = userDetails\r\n\r\n    const userUpdate = useSelector(state => state.userUpdate)\r\n    const { error: errorUpdate, loading: loadingUpdate, success: successUpdate } = userUpdate\r\n\r\n    useEffect(() => {\r\n\r\n        if (successUpdate) {\r\n            dispatch({ type: USER_UPDATE_RESET })\r\n            history.push('/admin/userlist')\r\n        } else {\r\n\r\n            if (!user.name || user.id !== Number(userId)) {\r\n                dispatch(getUserDetails(userId))\r\n            } else {\r\n                setName(user.name)\r\n                setEmail(user.email)\r\n                setIsAdmin(user.isAdmin)\r\n            }\r\n        }\r\n\r\n    }, [user, userId, successUpdate, history, dispatch])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(updateUser({ id: user.id, name, email, isAdmin }))\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Link to='/admin/userlist'>\r\n                Go Back\r\n            </Link>\r\n\r\n            <FormContainer>\r\n                <h1>Edit User</h1>\r\n                {loadingUpdate && <Loader />}\r\n                {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\r\n\r\n                {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message>\r\n                    : (\r\n                        <Form onSubmit={submitHandler}>\r\n\r\n                            <Form.Group controlId='name'>\r\n                                <Form.Label>Name</Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='name'\r\n                                    placeholder='Enter name'\r\n                                    value={name}\r\n                                    onChange={(e) => setName(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='email'>\r\n                                <Form.Label>Email Address</Form.Label>\r\n                                <Form.Control\r\n                                    type='email'\r\n                                    placeholder='Enter Email'\r\n                                    value={email}\r\n                                    onChange={(e) => setEmail(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='isadmin'>\r\n                                <Form.Check\r\n                                    type='checkbox'\r\n                                    label='Is Admin'\r\n                                    checked={isAdmin}\r\n                                    onChange={(e) => setIsAdmin(e.target.checked)}\r\n                                >\r\n                                </Form.Check>\r\n                            </Form.Group>\r\n\r\n                            <Button type='submit' variant='primary'>\r\n                                Update\r\n                        </Button>\r\n\r\n                        </Form>\r\n                    )}\r\n\r\n            </FormContainer >\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default UserEditScreen","import React, { useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Table, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport Paginate from '../components/Paginate'\r\nimport { listProducts, deleteProduct, createProduct } from '../actions/productActions'\r\nimport { PRODUCT_CREATE_RESET } from '../constants/productConstants'\r\n\r\nfunction ProductListScreen({ history, match }) {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const productList = useSelector(state => state.productList)\r\n    const { loading, error, products, pages, page } = productList\r\n\r\n    const productDelete = useSelector(state => state.productDelete)\r\n    const { loading: loadingDelete, error: errorDelete, success: successDelete } = productDelete\r\n\r\n    const productCreate = useSelector(state => state.productCreate)\r\n    const { loading: loadingCreate, error: errorCreate, success: successCreate, product: createdProduct } = productCreate\r\n\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    let keyword = history.location.search\r\n    useEffect(() => {\r\n        dispatch({ type: PRODUCT_CREATE_RESET })\r\n\r\n        if (!userInfo.isAdmin) {\r\n            history.push('/login')\r\n        }\r\n\r\n        if (successCreate) {\r\n            history.push(`/admin/product/${createdProduct.id}/edit`)\r\n        } else {\r\n            dispatch(listProducts(keyword))\r\n        }\r\n\r\n    }, [dispatch, history, userInfo, successDelete, successCreate, createdProduct, keyword])\r\n\r\n\r\n    const deleteHandler = (id) => {\r\n\r\n        if (window.confirm('Are you sure you want to delete this product?')) {\r\n            dispatch(deleteProduct(id))\r\n        }\r\n    }\r\n\r\n    const createProductHandler = () => {\r\n        dispatch(createProduct())\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Row className='align-items-center'>\r\n                <Col>\r\n                    <h1>Products</h1>\r\n                </Col>\r\n\r\n                <Col className='text-right'>\r\n                    <Button className='my-3 ms-auto' onClick={createProductHandler}>\r\n                        <i className='fas fa-plus'></i> Create Product\r\n                    </Button>\r\n                </Col>\r\n            </Row>\r\n\r\n            {loadingDelete && <Loader />}\r\n            {errorDelete && <Message variant='danger'>{errorDelete}</Message>}\r\n\r\n\r\n            {loadingCreate && <Loader />}\r\n            {errorCreate && <Message variant='danger'>{errorCreate}</Message>}\r\n\r\n            {loading\r\n                ? (<Loader />)\r\n                : error\r\n                    ? (<Message variant='danger'>{error}</Message>)\r\n                    : (\r\n                        <div>\r\n                            <Table striped bordered hover responsive className='table-sm'>\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>ID</th>\r\n                                        <th>NAME</th>\r\n                                        <th>PRICE</th>\r\n                                        <th>CATEGORY</th>\r\n                                        <th>BRAND</th>\r\n                                        <th></th>\r\n                                    </tr>\r\n                                </thead>\r\n\r\n                                <tbody>\r\n                                    {products?.map(product => (\r\n                                        <tr key={product.id}>\r\n                                            <td>{product.id}</td>\r\n                                            <td>{product.name}</td>\r\n                                            <td>QR{product.price}</td>\r\n                                            <td>{product.category}</td>\r\n                                            <td>{product.brand}</td>\r\n\r\n                                            <td>\r\n                                                <LinkContainer to={`/admin/product/${product.id}/edit`}>\r\n                                                    <Button variant='light' className='btn-sm'>\r\n                                                        <i className='fas fa-edit'></i>\r\n                                                    </Button>\r\n                                                </LinkContainer>\r\n\r\n                                                <Button variant='danger' className='btn-sm' onClick={() => deleteHandler(product.id)}>\r\n                                                    <i className='fas fa-trash'></i>\r\n                                                </Button>\r\n                                            </td>\r\n                                        </tr>\r\n                                    ))}\r\n                                </tbody>\r\n                            </Table>\r\n                            <Paginate pages={pages} page={page} isAdmin={true} />\r\n                        </div>\r\n                    )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProductListScreen","import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { listProductDetails, updateProduct } from '../actions/productActions'\r\nimport { PRODUCT_UPDATE_RESET } from '../constants/productConstants'\r\n\r\n\r\nfunction ProductEditScreen({ match, history }) {\r\n\r\n    const productId = match.params.id\r\n\r\n    const [name, setName] = useState('')\r\n    const [price, setPrice] = useState(0)\r\n    const [image, setImage] = useState('')\r\n    const [brand, setBrand] = useState('')\r\n    const [category, setCategory] = useState('')\r\n    const [countInStock, setCountInStock] = useState(0)\r\n    const [description, setDescription] = useState('')\r\n    const [uploading, setUploading] = useState(false)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const productDetails = useSelector(state => state.productDetails)\r\n    const { error, loading, product } = productDetails\r\n\r\n    const productUpdate = useSelector(state => state.productUpdate)\r\n    const { error: errorUpdate, loading: loadingUpdate, success: successUpdate } = productUpdate\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        if (successUpdate) {\r\n            dispatch({ type: PRODUCT_UPDATE_RESET })\r\n            history.push('/admin/productlist')\r\n        } else {\r\n            if (!product.name || product.id !== Number(productId)) {\r\n                dispatch(listProductDetails(productId))\r\n            } else {\r\n                setName(product.name)\r\n                setPrice(product.price)\r\n                setImage(product.image)\r\n                setBrand(product.brand)\r\n                setCategory(product.category)\r\n                setCountInStock(product.countInStock)\r\n                setDescription(product.description)\r\n\r\n            }\r\n        }\r\n\r\n\r\n\r\n    }, [dispatch, product, productId, history, successUpdate])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(updateProduct({\r\n            id: productId,\r\n            name,\r\n            price,\r\n            image,\r\n            brand,\r\n            category,\r\n            countInStock,\r\n            description\r\n        }))\r\n    }\r\n\r\n    const uploadFileHandler = async (e) => {\r\n        const file = e.target.files[0]\r\n        const formData = new FormData()\r\n\r\n        formData.append('image', file)\r\n        formData.append('product_id', productId)\r\n\r\n        setUploading(true)\r\n\r\n        try {\r\n            const config = {\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data'\r\n                }\r\n            }\r\n\r\n            const { data } = await axios.post('/products/upload/', formData, config)\r\n\r\n\r\n            setImage(data)\r\n            setUploading(false)\r\n\r\n        } catch (error) {\r\n            setUploading(false)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Link to='/admin/productlist'>\r\n                Go Back\r\n            </Link>\r\n\r\n            <FormContainer>\r\n                <h1>Edit Product</h1>\r\n                {loadingUpdate && <Loader />}\r\n                {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\r\n\r\n                {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message>\r\n                    : (\r\n                        <Form onSubmit={submitHandler}>\r\n\r\n                            <Form.Group controlId='name'>\r\n                                <Form.Label>Name</Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='name'\r\n                                    placeholder='Enter name'\r\n                                    value={name}\r\n                                    onChange={(e) => setName(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='price'>\r\n                                <Form.Label>Price</Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='number'\r\n                                    placeholder='Enter price'\r\n                                    value={price}\r\n                                    onChange={(e) => setPrice(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n\r\n                            <Form.Group controlId='image'>\r\n                                <Form.Label>Image</Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='text'\r\n                                    placeholder='Enter image'\r\n                                    value={image}\r\n                                    onChange={(e) => setImage(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n\r\n                                <Form.File\r\n                                    id='image-file'\r\n                                    label='Choose File'\r\n                                    custom\r\n                                    onChange={uploadFileHandler}\r\n                                >\r\n\r\n                                </Form.File>\r\n                                {uploading && <Loader />}\r\n\r\n                            </Form.Group>\r\n\r\n\r\n                            <Form.Group controlId='brand'>\r\n                                <Form.Label>Brand</Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='text'\r\n                                    placeholder='Enter brand'\r\n                                    value={brand}\r\n                                    onChange={(e) => setBrand(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='countinstock'>\r\n                                <Form.Label>Stock</Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='number'\r\n                                    placeholder='Enter stock'\r\n                                    value={countInStock}\r\n                                    onChange={(e) => setCountInStock(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='category'>\r\n                                <Form.Label>Category</Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='text'\r\n                                    placeholder='Enter category'\r\n                                    value={category}\r\n                                    onChange={(e) => setCategory(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='description'>\r\n                                <Form.Label>Description</Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='text'\r\n                                    placeholder='Enter description'\r\n                                    value={description}\r\n                                    onChange={(e) => setDescription(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n\r\n                            <Button type='submit' variant='primary'>\r\n                                Update\r\n                        </Button>\r\n\r\n                        </Form>\r\n                    )}\r\n\r\n            </FormContainer >\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default ProductEditScreen","import React, { useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Table, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport { listOrders } from '../actions/orderActions'\r\n\r\nfunction OrderListScreen({ history }) {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const orderList = useSelector(state => state.orderList)\r\n    const { loading, error, orders } = orderList\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (userInfo && userInfo.isAdmin) {\r\n            dispatch(listOrders())\r\n        } else {\r\n            history.push('/login')\r\n        }\r\n\r\n    }, [dispatch, history, userInfo])\r\n\r\n\r\n    return (\r\n        <div>\r\n            <h1>Orders</h1>\r\n            {loading\r\n                ? (<Loader />)\r\n                : error\r\n                    ? (<Message variant='danger'>{error}</Message>)\r\n                    : (\r\n                        <Table striped bordered hover responsive className='table-sm'>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>ID</th>\r\n                                    <th>USER</th>\r\n                                    <th>DATE</th>\r\n                                    <th>Total</th>\r\n                                    <th>PAID</th>\r\n                                    <th>DELIVERED</th>\r\n                                    <th></th>\r\n                                </tr>\r\n                            </thead>\r\n\r\n                            <tbody>\r\n                                {orders.map(order => (\r\n                                    <tr key={order.id}>\r\n                                        <td>{order.id}</td>\r\n                                        <td>{order.user && order.user.name}</td>\r\n                                        <td>{order.createdAt.substring(0, 10)}</td>\r\n                                        <td>${order.totalPrice}</td>\r\n\r\n                                        <td>{order.isPaid ? (\r\n                                            order.paidAt.substring(0, 10)\r\n                                        ) : (\r\n                                                <i className='fas fa-check' style={{ color: 'red' }}></i>\r\n                                            )}\r\n                                        </td>\r\n\r\n                                        <td>{order.isDelivered ? (\r\n                                            order.deliveredAt.substring(0, 10)\r\n                                        ) : (\r\n                                                <i className='fas fa-check' style={{ color: 'red' }}></i>\r\n                                            )}\r\n                                        </td>\r\n\r\n                                        <td>\r\n                                            <LinkContainer to={`/order/${order.id}`}>\r\n                                                <Button variant='light' className='btn-sm'>\r\n                                                    Details\r\n                                                </Button>\r\n                                            </LinkContainer>\r\n\r\n\r\n                                        </td>\r\n                                    </tr>\r\n                                ))}\r\n                            </tbody>\r\n                        </Table>\r\n                    )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default OrderListScreen","import { Container } from 'react-bootstrap'\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\nimport Header from './components/Header'\nimport Footer from './components/Footer'\nimport HomeScreen from './screens/HomeScreen'\nimport ProductScreen from './screens/ProductScreen'\nimport CartScreen from './screens/CartScreen'\nimport LoginScreen from './screens/LoginScreen'\nimport RegisterScreen from './screens/RegisterScreen'\nimport ProfileScreen from './screens/ProfileScreen'\nimport ShippingScreen from './screens/ShippingScreen'\nimport PaymentScreen from './screens/PaymentScreen'\nimport PlaceOrderScreen from './screens/PlaceOrderScreen'\nimport OrderScreen from './screens/OrderScreen'\nimport UserListScreen from './screens/UserListScreen'\nimport UserEditScreen from './screens/UserEditScreen'\nimport ProductListScreen from './screens/ProductListScreen'\nimport ProductEditScreen from './screens/ProductEditScreen'\nimport OrderListScreen from './screens/OrderListScreen'\n\n\nfunction App() {\n  return (\n    <Router>\n      <Header />\n      <main className=\"py-3\">\n        <Container>\n          <Route path='/' component={HomeScreen} exact />\n          <Route path='/login' component={LoginScreen} />\n          <Route path='/register' component={RegisterScreen} />\n          <Route path='/profile' component={ProfileScreen} />\n          <Route path='/shipping' component={ShippingScreen} />\n          <Route path='/placeorder' component={PlaceOrderScreen} />\n          <Route path='/order/:id' component={OrderScreen} />\n          <Route path='/payment' component={PaymentScreen} />\n          <Route path='/product/:id' component={ProductScreen} />\n          <Route path='/cart/:id?' component={CartScreen} />\n\n          <Route path='/admin/userlist' component={UserListScreen} />\n          <Route path='/admin/user/:id/edit' component={UserEditScreen} />\n\n          <Route path='/admin/productlist' component={ProductListScreen} />\n          <Route path='/admin/product/:id/edit' component={ProductEditScreen} />\n\n          <Route path='/admin/orderlist' component={OrderListScreen} />\n        </Container>\n      </main>\n      <Footer />\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport store from './store'\nimport './index.css';\n// import './bootstrap.css'\nimport './bootstrapLux.css'\n// import './bootstrapCosmo.css'\n// import './bootstrapSimplist.css'\n// import './bootstrapSlate.css'\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}